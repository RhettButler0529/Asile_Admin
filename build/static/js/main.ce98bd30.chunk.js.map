{"version":3,"sources":["assets/images/logo.png","assets/images/loading.gif","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/error/styles.js","pages/error/Error.js","pages/UserManage/Admins/styles.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","components/Status/styles.js","components/Status/Status.js","components/Loading/BackdropLoading.js","redux/constants/AdminActionType.js","redux/constants/UserActionType.js","redux/constants/UserViewActionType.js","redux/constants/ClientActionType.js","redux/constants/ClientViewActionType.js","redux/constants/CompanyActionType.js","redux/constants/ScheduleActionType.js","redux/constants/ScheduleViewActionType.js","redux/constants/SalesClientActionType.js","redux/constants/SalesClientViewActionType.js","common/config.js","services/admins/AdminService.js","redux/actions/AdminAction.js","services/auth/Auth.js","context/UserContext.js","pages/UserManage/Admins/Admins.js","components/Widget/styles.js","components/Widget/Widget.js","components/FormControls/styles.js","components/FormControls/CustomDatePicker.js","components/FormControls/CustomInput.js","components/FormControls/CustomCombobox.js","components/Notification/styles.js","components/Notification/Notification.js","services/company/CompanyService.js","redux/actions/CompanyAction.js","pages/UserManage/Admins/EditAdmin.js","pages/UserManage/Admins/AddAdmin.js","pages/UserManage/Users/styles.js","services/users/UserService.js","redux/actions/UserAction.js","pages/UserManage/Users/Users.js","pages/UserManage/Users/EditUser.js","pages/UserManage/Users/AddUser.js","pages/Companys/styles.js","pages/Companys/Companys.js","http_common.js","services/upload_pdf/upload-files.service.js","components/Upload/upload-files.component.js","pages/Companys/AddCompany.js","pages/Companys/EditCompany.js","pages/Client/styles.js","services/client/ClientService.js","redux/actions/ClientAction.js","pages/Client/Client.js","pages/Client/AddClient.js","pages/Client/EditClient.js","pages/Sales/styles.js","redux/reducers/SalesReducer.js","services/sales/SalesClientService.js","redux/actions/SalesClientAction.js","pages/Sales/Sales.js","pages/Sales/EditSales.js","pages/Sales/AddSales.js","pages/Schedule/styles.js","services/schedule/ScheduleService.js","redux/actions/ScheduleAction.js","pages/Schedule/Schedule.js","components/Footer/styles.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Sidebar/Sidebar1.js","pages/UserView/styles.js","services/users/UserViewService.js","redux/actions/UserViewAction.js","pages/UserView/UserView.js","pages/ScheduleView/styles.js","services/scheduleview/ScheduleViewService.js","redux/actions/ScheduleViewAction.js","pages/ScheduleView/ScheduleView.js","pages/ClientView/styles.js","redux/reducers/ClientViewReducer.js","services/clientview/ClientViewService.js","redux/actions/ClientViewAction.js","pages/ClientView/Client.js","pages/ClientView/AddClient.js","pages/ClientView/EditClient.js","pages/SalesView/styles.js","services/salesview/SalesClientViewService.js","redux/actions/SalesClientViewAction.js","pages/SalesView/Sales.js","pages/SalesView/EditSales.js","pages/SalesView/AddSales.js","pages/Report/ScheduleReport/styles.js","pages/Report/ScheduleReport/ScheduleReport.js","pages/Report/SalesOrderReport/styles.js","pages/Report/SalesOrderReport/SalesOrderReport.js","pages/SalesOrder/styles.js","components/Status/Status3.js","components/Status/Status2.js","pages/SalesOrder/Review.js","pages/SalesOrder/History.js","pages/SalesOrder/Item/styles.js","pages/SalesOrder/Item/Item.js","pages/SalesOrder/Item/AddItem.js","pages/SalesOrder/Item/EditItem.js","pages/SalesOrder/Discount/styles.js","pages/SalesOrder/Discount/Discount.js","pages/SalesOrder/Discount/AddDiscount.js","pages/SalesOrder/Discount/EditDiscount.js","pages/SalesOrder/Promotion/styles.js","pages/SalesOrder/Promotion/Promotion.js","pages/SalesOrder/Promotion/AddPromotion.js","pages/SalesOrder/Promotion/EditPromotion.js","pages/SalesOrder/Target/styles.js","pages/SalesOrder/Target/components/TotalWidget/styles.js","pages/SalesOrder/Target/components/TotalWidget/TotalWidget.js","pages/SalesOrder/Target/CompanyTarget.js","pages/SalesOrder/Target/ItemTarget.js","pages/SalesOrder/Target/Target.js","components/Layout/Layout1.js","pages/success/styles.js","pages/success/success.js","pages/login/styles.js","pages/login/Login.js","components/App.js","serviceWorker.js","redux/reducers/AdminReducer.js","redux/reducers/UserReducer.js","redux/reducers/CompanyReducer.js","redux/reducers/ClientReducer.js","redux/reducers/ScheduleReducer.js","redux/reducers/UserViewReducer.js","redux/reducers/ScheduleViewReducer.js","redux/reducers/SalesViewReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","themes_default","palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","white","myprimary","bright","favorite","secondary","contrastText","mysecondary","warning","success","info","text","hint","background","default","blue","green","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","color","MuiListItem","&$selected","&:focus","button","&:hover, &:focus","MuiTouchRipple","child","MuiTable","border","MUIDataTableBodyCell","paddingTop","paddingBottom","MuiTableCell","borderColor","fontSize","head","height","MuiTableRow","MUIDataTableHeadCell","fixedHeaderCommon","MUIDataTableSelectCell","headerCell","MuiTypography","body1","MuiMenuItem","padding","themes","createMuiTheme","Object","objectSpread2","defaultTheme","typography","h1","h2","h3","h4","h5","h6","makeStyles","theme","display","maxWidth","overflowX","content","flexGrow","spacing","width","minHeight","contentShift","concat","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","mainContainer","padding1600","paddingLeft","paddingRight","padding1800","_inputRoot","logotype","defineProperty","marginLeft","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","hide","grow","search","position","borderRadius","fade","common","black","&:hover","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","whiteColor","badge","Typography","_ref2","children","weight","size","colorBrightness","props","objectWithoutProperties","useTheme","react_default","a","createElement","assign","style","getColor","getFontWeight","getFontSize","variant","brigtness","arguments","length","undefined","multiplier","defaultSize","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","_ref","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","dispatch","Provider","value","useLayoutState","context","useContext","useLayoutDispatch","toggleSidebar","Header","classes","useStyles","layoutDispatch","Grid","container","Toolbar","className","IconButton","onClick","classNames","FormatAlignJustifyOutlined","FormatAlignLeftOutlined","Wrappers_Typography","float","localStorage","getItem","_mobileBackButton","menuButton","flexShrink","drawerPaper","drawerOpen","drawerClose","sidebarList","mobileBackButton","only","logotypeImage","link","linkActive","linkNestedActive","linkNested","linkIcon","linkIconActive","linkText","largeText","smallText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","listItem","dotBase","dotSmall","dotLarge","Dot","_classnames","classnames","SidebarLink","_classnames2","_classnames4","_classnames6","label","location","nested","_useState","useState","_useState2","isOpen","setIsOpen","isLinkActive","pathname","indexOf","Divider","Fragment","ListItem","component","Link","e","preventDefault","to","disableRipple","ListItemIcon","Inbox","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","childrenLink","key","linkRoot","structure","id","AccountCircleOutlined","BusinessOutlined","PeopleAltOutlined","TransferWithinAStationOutlined","TimerOutlined","withRouter","_classNames","_classNames2","isPermanent","setPermanent","useEffect","window","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","open","ArrowBack","alignSelf","bottom","clear","reload","isSmallScreen","innerWidth","values","md","top","left","logotypeText","logotypeIcon","paperRoot","textRow","textAlign","errorCode","safetyText","backButton","Paper","colorbrightness","Button","dashedBorder","formControl","filePicker","fileInput","selectEmpty","formContainer","typo","buttonContainer","statusTextContainer","statusText","invoiceContainer","backgroundImage","iconContainer","cardTitle","letterSpacing","cardRoot","displayColumn","lineHeight","headerContainer","rightAlign","cardFooterRoot","editButton","printButton","shareButton","actionButton","notificationItem","notificationCloseButton","toastsContainer","progress","visibility","notification","overflow","notificationComponent","pageTitleContainer","&:active","buttonGroup","PageTitle","iconVar","Add_default","Print","CloudUpload_default","CloudDownload_default","buttonCount","lgSpan","mdSpan","smSpan","item","lg","sm","xs","title","includes","startIcon","category","console","log","history","push","buttonHandler","status","draft","paid","pending","Status","toUpperCase","backdrop","BackdropLoading","_React$useState","_React$useState2","setOpen","Backdrop","src","loadingImage","alt","FETCH_ADMIN_REQUEST","FETCH_ADMIN_SUCCESS","FETCH_ADMIN_ERROR","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_ERROR","FETCH_USERVIEW_REQUEST","FETCH_USERVIEW_SUCCESS","FETCH_USERVIEW_ERROR","FETCH_CLIENT_REQUEST","FETCH_CLIENT_SUCCESS","FETCH_CLIENT_ERROR","FETCH_CLIENTVIEW_REQUEST","FETCH_CLIENTVIEW_SUCCESS","FETCH_CLIENTVIEW_ERROR","FETCH_COMPANY_REQUEST","FETCH_COMPANY_SUCCESS","FETCH_COMPANY_ERROR","FETCH_SCHEDULE_REQUEST","FETCH_SCHEDULE_SUCCESS","FETCH_SCHEDULE_ERROR","FETCH_SCHEDULEVIEW_REQUEST","FETCH_SCHEDULEVIEW_SUCCESS","FETCH_SCHEDULEVIEW_ERROR","FETCH_SALESCLIENT_REQUEST","FETCH_SALESCLIENT_SUCCESS","FETCH_SALESCLIENT_ERROR","FETCH_SALESCLIENTVIEW_REQUEST","FETCH_SALESCLIENTVIEW_SUCCESS","FETCH_SALESCLIENTVIEW_ERROR","SERVER_URL","fetchAdmins","body","isAdmin","setTimeout","fetch","method","JSON","stringify","headers","Content-Type","then","res","json","error","admin","catch","fetchAdminError","loginApi","user","Accept","Promise","resolve","reject","axios","post","err","signUpApi","UserStateContext","UserDispatchContext","adminID","userReducer","loading","isAuthenticated","isSignup","UserProvider","useUserState","connect","bindActionCreators","useHistory","dataSource","setDataSource","adminData","useSelector","_useState3","_useState4","columns","name","options","filter","sort","customBodyRender","tableMeta","updateValue","actionEdit","Edit","i","filterType","pagination","print","download","responsive","fixedHeader","elevation","rowsPerPageOptions","resizableColumns","onRowsDelete","rowsDeleted","delete_id","data","newDeleteId","dataIndex","user_id","requestOptions","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","ok","message","abrupt","stop","_x","apply","this","toast","onTableChange","tableState","tmp","ThemeProvider","dist_default","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","moreButton","Widget","noBodyPadding","bodyClass","disableWidgetMenu","_ref$menuItems","menuItems","header","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","aria-owns","aria-haspopup","buttonRef","MoreVert","Menu","anchorEl","onClose","disableAutoFocusItem","menu","index","MenuItem","addButton","comboContainer","addIcon","autoRoot","CustomDatePicker","DatePicker","required","animateYearScrolling","autoOk","clearable","selectedDate","onChange","handleChange","CustomInput","FormControl","TextField","multiline","rows","CustomCombobox","defaultProps","items","getOptionLabel","option","addbtn","Autocomplete","debug","multiple","openOnFocus","renderOption","renderInput","params","req","Tooltip","notificationContainer","notificationContained","notificationContainedShadowless","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","containedTypography","messageContainer","extraButton","typesIcons","e-commerce","ShoppingCart","NotificationsNone","offer","LocalOffer","ThumbUp","Email","feedback","SmsFailed","customer","AccountBox","shipped","Done","delivered","BusinessCenter","defence","esm_Error","report","Report","upload","Publish","disc","DiscFull","Notification","getIconByType","iconWithStyles","cloneElement","notificationIcon","shadowless","setAlpha","toRgbString","typographyVariant","extraButtonClick","fetchCompany","company","fetchCompanyError","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","errorToastId","setErrorToastId","_useState5","_useState6","notificationsPosition","_useState7","_useState8","companyData","notify","_useState9","full_name","email","phone_number","company_id","company_entity_name","isActive","allow_so","sales_target","_useState10","setState","update_id","match","getAdminInfo","getCompanyNamefromCompanyID","split","companyIDList","companies","original","Boolean","objArray2Array","setCompanyIdfromCompanyName","object","toString","_loop","l","setCompanyList","companyList","field","target","checked","_e$target","prevState","onSaveandBack","test","join","_callee2","_context2","handleNotificationCall","_x2","updateAdminInfo","react_toastify","closeButton","_ref3","closeToast","Close","closeOnClick","progressClassName","notificationProgress","InputLabel","Select","labelId","event","input","Input","renderValue","selected","Checkbox","FormControlLabel","control","Switch","Cancel","Save","retryErrorNotification","update","render","notificationType","componentProps","toastId","sendNotification","validateEmail","password","maxLength","onSaveandNew","fetchUsers","fetchUserError","selectedRowIndex","setSelectedRowIndex","userData","getUserInfo","onSave","updateUserInfo","href","baseURL","upload_files_service","file","onUploadProgress","formData","FormData","append","http","get","BorderLinearProgress","withStyles","colorPrimary","bar","LinearProgress","UploadFiles","_this","classCallCheck","_super","call","selectedFiles","currentFile","isError","fileInfos","files","_this2","fileNameList","UploadService","Math","round","loaded","total","fileName","pop","setFileList","_this$state","Box","mr","htmlFor","selectFile","bind","disabled","Component","AddCompany","entity_name","owner_name","address","time_limit_per_schedule","late_policy","min_schedule_time","max_schedule_time","notes","company_info","CloseButton","upload_files_component_UploadFiles","company_owner_name","company_infoList","getCompanyInfo","updateCompanyInfo","_ref4","table","difference","fetchClient","client","fetchClientError","clientData","client_id","addWithCSV","row","saveData","client_entity_name","custom_field","approved","created_by","reqOption","react_csv_reader_default","onFileLoaded","importCSV","getClientInfo","updateClientInfo","Number","initialState","sales","fetchSalesClient","fetchSalesClientError","salesData","sales_client_id","client_name","user_name","clients","getSalesClientInfo","getClientNameList","optionData","users","getUserNameList","handleUserChange","temp","getClientsByCompanyId","userList","handleClientChange","_callee3","_context3","_x3","userIDList","setUserList","getUsersbyCompanyId","handleCompanyChange","_objectSpread2","getUserIDbyUserName","_ref5","_callee4","_context4","_x4","fetchSchedule","schedule","fetchScheduleError","scheduleData","schedule_id","version","Footer","matches1600","useMediaQuery","matches1800","layoutState","Sidebar_Sidebar","react_router","exact","path","AdminPage","EditAdminPage","AddAdminPage","UserPage","EditUserPage","AddUserPage","CompanyPage","AddCompanyPage","EditCompanyPage","ClientsPage","AddClientPage","EditClientPage","SalesPage","EditSalesPage","AddSalesPage","SchedulePage","AssessmentOutlined","VisibilityOutlined_default","HistoryOutlined_default","ShoppingCartOutlined_default","StorageOutlined_default","TrendingDownOutlined_default","SpellcheckOutlined_default","fetchUserView","userview","fetchUserViewError","userviewData","selectableRows","fetchScheduleView","scheduleview","fetchScheduleViewError","scheduleviewData","clientview","fetchClientView","fetchClientViewError","clientViewData","fetchSalesClientView","salesview","fetchSalesClientViewError","salesviewData","clientList","setReport","curDate","Date","_useState11","start_date","getFullYear","getMonth","end_date","_useState12","moment","firstDay","startOf","format","lastDay","endOf","getReportData","reportData","userviewData0","_iterator","_step","createForOfIteratorHelper","s","n","done","schedule_number","new_client","percentage","t0","t1","f","finish","date","handleDateChange","s_date","e_date","Status3","Status2","order_id","order_items","promotions","tax","shipping_cost","net_total","order_date","client_signature","user_signature","upload_picture","order_method","setAnchorEl","actionClick","MoreHoriz_default","keepMounted","actionClose","currentTarget","item_id","item_name","unit_price","unit","persist","discount_id","min_quantity","max_quantity","itemList","amount","discount","promotion_id","code","typeList","handleTypeChange","incomeWidget","expenseWidget","profitWidget","iconArea","incomeIcon","expenseIcon","profitIcon","totalRight","TotalWidget","_classnames3","LocalAtm","createIcon","sales_name","current_total_sales","total_units","sold","activate","setActivate","setCompany","setItem","handleItemChange","Target_CompanyTarget","Target_ItemTarget","Sidebar1","UserViewPage","ScheduleViewPage","ClientViewPage","SalesViewPage","ScheduleReportPage","TargetPage","ReviewPage","HistoryPage","ItemPage","AddItemPage","EditItemPage","DiscountPage","AddDiscountPage","EditDiscountPage","PromotionPage","AddPromotionPage","EditPromotionPage","Success","_logotypeContainer","logotypeContainer","form","tab","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","&:before","borderBottomColor","&:after","&:hover:before","textField","formButtons","forgetButton","loginLoader","copyright","userDispatch","useUserDispatch","isLoading","setIsLoading","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","_useState13","_useState14","confirmValue","setConfirmValue","_useState15","_useState16","phoneNumberValue","setPhoneNumberValue","_useState17","_useState18","companyIDValue","setCompanyIDValue","Tabs","indicatorColor","textColor","centered","Tab","Fade","InputProps","underline","placeholder","fullWidth","CircularProgress","login","check_id","isSuperAdmin","token","rememberToken","loginUser","signUp","App","_useUserState","react_router_dom","PrivateRoute","Layout","Layout1","PublicRoute","Login","rest","from","hostname","ScheduleReducer","ScheduleViewReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","Themes","CssBaseline","useUtils_cfb96ac9","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce98bd30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40a2ca7d.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.80a83396.gif\";","import tinycolor from \"tinycolor2\";\n\nconst primary = \"#536DFE\";//#6200ee\nconst secondary = \"#FF5C93\";\nconst myprimary = \"#0B1A2D\"; //0B1A2D 07112C\nconst mysecondary = \"#00A3EE\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\nconst blue = \"#2196f3\";\nconst green = \"#4caf50\";\nconst white = \"#FFF\";\nconst favorite = \"#4302a0\";\n\nconst lightenRate = 7.5;\nconst brightenRate = 15;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    myprimary: {\n      main: myprimary,\n      bright: tinycolor(myprimary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(myprimary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(myprimary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    favorite: {\n      main: favorite,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    mysecondary: {\n      main: mysecondary,\n      bright: tinycolor(mysecondary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(mysecondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(mysecondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n      white: \"#FFF\"\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n    blue: {\n      main: blue,\n      light: tinycolor(blue)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(blue)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    green: {\n      main: green,\n      light: tinycolor(green)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(green)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTable: {\n      root: {\n        border: \"1px solid rgba(224, 224, 224, .5)\",\n      }\n    },\n    MUIDataTableBodyCell: {\n      root: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        height: 50,\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 75,\n      },\n    },\n    MUIDataTableHeadCell: {\n      fixedHeaderCommon: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MUIDataTableSelectCell: {\n      headerCell: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MuiTypography: {\n      body1: {\n        fontSize: '0.8125rem',\n      }\n    },    \n    MuiMenuItem: {\n      root: {\n        fontSize: '0.8125rem',\n        padding: 36,\n        paddingTop: 12,\n        paddingBottom: 12,\n      }\n    },    \n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overflowX: \"hidden\",\n    background: '#fff',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw - 240px)`,\n    minHeight: \"100vh\",\n  },\n  contentShift: {\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n  mainContainer: {\n    paddingTop: 40,\n    // paddingLeft: 40,\n    // paddingRight: 40,\n    // paddingLeft: `calc(100vw - 240px) * 0.2`,\n  },\n  padding1600: {\n    paddingLeft: 80,\n    paddingRight: 80,\n  },\n  padding1800: {\n    paddingLeft: 120,\n    paddingRight: 120,\n  },\n\n}));\n","import { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport blue from '@material-ui/core/colors/blue';\n\nexport default makeStyles(theme => ({\n  logotype: {\n    color: \"white\",\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    width: \"100%\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    width: \"100%\",\n    // background: \"#6200ee;\",\n    background: theme.palette.mysecondary.main,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    background: \"white\",\n    position: \"relative\",\n    borderRadius: 25,\n    paddingLeft: theme.spacing(2.5),\n    width: 36,\n    backgroundColor: fade(theme.palette.common.black, 0),\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\n    \"&:hover\": {\n      cursor: \"pointer\",\n      // background: \"#FFF\",\n      backgroundColor: fade(theme.palette.common.black, 0.08),\n    },\n  },\n  searchFocused: {\n    backgroundColor: fade(theme.palette.common.black, 0.08),\n    // backgroundColor: fade(theme.palette.common.white, 1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 250,\n    },\n  },\n  searchIcon: {\n    width: 36,\n    right: 0,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    transition: theme.transitions.create(\"right\"),\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  searchIconOpened: {\n    right: theme.spacing(1.25),\n  },\n  inputRoot: {\n    color: \"#B9B9B9\",\n    color: theme.palette.primary.light,\n    width: \"100%\",\n  },\n  inputInput: {\n    height: 36,\n    padding: 0,\n    paddingRight: 36 + theme.spacing(1.25),\n    width: \"100%\",\n  },\n  messageContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenu: {\n    marginTop: theme.spacing(7),\n  },\n  headerMenuList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenuItem: {\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n    },\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerMenuButtonCollapse: {\n    marginRight: theme.spacing(2),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: \"rgba(255, 255, 255, 0.35)\",\n  },\n  headerIconCollapse: {\n    color: \"white\",\n  },\n  profileMenu: {\n    minWidth: 265,\n  },\n  profileMenuUser: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n  profileMenuItem: {\n    color: theme.palette.text.hint,\n  },\n  profileMenuIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.text.hint,\n  },\n  profileMenuLink: {\n    fontSize: 16,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  messageNotification: {\n    height: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  messageNotificationSide: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  messageNotificationBodySide: {\n    alignItems: \"flex-start\",\n    marginRight: 0,\n  },\n  sendMessageButton: {\n    margin: theme.spacing(4),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textTransform: \"none\",\n  },\n  sendButtonIcon: {\n    marginLeft: theme.spacing(2),\n  },\n  whiteColor: {\n    color: \"white\"\n  }\n}));\n","import React from \"react\";\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, className, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n      width: '100%',\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      \"&:active\": {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n","import React from \"react\";\nimport {\n  Toolbar,\n  IconButton,\n  Grid\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n  FormatAlignJustifyOutlined,\n  FormatAlignLeftOutlined,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\nimport { toggleSidebar, useLayoutDispatch, useLayoutState } from \"../../context/LayoutContext\";\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  // var layoutState = useLayoutState();\n\n  return (\n    <Grid container spacing={4}>\n      <Toolbar className={classes.toolbar} style={{display: 'flex', justifyContent: 'space-between'}}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {isSidebarOpened ? (\n            <FormatAlignJustifyOutlined\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n              <FormatAlignLeftOutlined\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n        </IconButton>\n        <Typography variant=\"h4\" weight=\"medium\" className={classes.logotype}>\n          ASILE\n          </Typography>\n\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ float: 'center', marginLeft: 30 }}>\n          Hi, {localStorage.getItem('full_name')}\n        </Typography>\n      </Toolbar>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerPaper: {\n    // background: \"#6200ee\",\n    background: theme.palette.myprimary.main,\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n    },\n  },\n  toolbar: {\n    marginTop: 15,\n    color: \"#FFF\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sidebarList: {\n    padding: theme.spacing(1),\n  },\n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    width: 40,\n    marginRight: theme.spacing(1),\n  },\n  logotype: {\n    marginRight: theme.spacing(1),\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\",\n      backgroundColor: theme.palette.myprimary.light,\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: \"inherit\"\n    },\n  },\n  linkActive: {\n    // backgroundColor: theme.palette.favorite.main,\n    backgroundColor: theme.palette.myprimary.bright,\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkNestedActive: {\n    // backgroundColor: theme.palette.favorite.main\n    backgroundColor: theme.palette.myprimary.bright,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\"\n      backgroundColor: theme.palette.myprimary.light\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main,\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.primary.white,\n  },\n  linkIconActive: {\n    color: theme.palette.primary.white,\n  },\n  linkText: {\n    padding: 0,\n    color: theme.palette.text.white + \"\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 14,\n  },\n  largeText: {\n    fontSize: 14,\n  },\n  smallText: {\n    fontSize: 13,\n  },\n  linkTextActive: {\n    // color: theme.palette.text.primary,\n    color: theme.palette.text.white,\n    fontWeight: \"550\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(3),\n    fontSize: '12px!important',\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n  listItem: {\n    padding: 5\n  }\n}));\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  dotBase: {\n    width: 8,\n    height: 8,\n    backgroundColor: theme.palette.text.hint,\n    borderRadius: \"50%\",\n    transition: theme.transitions.create(\"background-color\"),\n  },\n  dotSmall: {\n    width: 5,\n    height: 5\n  },\n  dotLarge: {\n    width: 11,\n    height: 11,\n  },\n}));\n\nexport default function Dot({ size, color }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classnames(classes.dotBase, {\n        [classes.dotLarge]: size === \"large\",\n        [classes.dotSmall]: size === \"small\",\n      })}\n      style={{\n        backgroundColor:\n          color && theme.palette[color] && theme.palette[color].main,\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n            [classes.linkNestedActive]: isLinkActive && nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n              [classes.largeText]: !nested,\n              [classes.smallText]: nested,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding className={classes.listItem}>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  MenuOpen, LocalAtmOutlined, ShoppingCartOutlined,\n  AccountBalanceOutlined, AssessmentOutlined,\n  FormatAlignJustifyOutlined, FormatAlignLeftOutlined, People, Settings, AccountCircleOutlined, BusinessOutlined, PeopleAltOutlined, TransferWithinAStationOutlined, TimerOutlined\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/usermanage\",\n    icon: <AccountCircleOutlined fontSize=\"small\" />,\n    children: [\n      { label: \"Administrators\", link: \"/app/usermanage/admin\" },\n      { label: \"Users\", link: \"/app/usermanage/user\" },\n    ],\n  },\n  {\n    id: 1,\n    label: \"Company\",\n    link: \"/app/company\",\n    icon: <BusinessOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 2,\n    label: \"Client\",\n    link: \"/app/client\",\n    icon: <PeopleAltOutlined fontSize=\"small\" />,\n\n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/sales\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 4,\n    label: \"Schedule\",\n    link: \"/app/schedule\",\n    icon: <TimerOutlined fontSize=\"small\" />,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{ color: 'white' }}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div className={classes.sidebarList} style={{ justifyContent: 'center', alignSelf: 'center', position: 'absolute', bottom: 10}}>\n        <IconButton style={{ color: 'white', fontSize: 14, fontWeight: 'bold' }}\n          onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }}>\n          <ArrowBackIcon style={{marginRight: 5}}/>\n          Log Out\n        </IconButton>\n      </div>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Error() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      {/* <div className={classes.logotype}>\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\n          Diago Admin\n        </Typography>\n      </div> */}\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorbrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  pageTitleContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n  typo: {\n    color: theme.palette.text.hint,\n  },\n  button: {\n    padding: '8px 8px',\n    fontSize: 12,\n    width: '100%',\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    \"&:active\": {\n      boxShadow: theme.customShadows.widgetWide,\n    },\n  },\n  buttonContainer: {\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: 'max-content',\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: 'flex-end',\n    padding: \"5px 0 5px 0\"\n  }\n}));\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\nimport { Print } from \"@material-ui/icons\";\n\nexport default function PageTitle(props) {\n  var classes = useStyles();\n\n  const iconVar = [];\n  iconVar[\"Add New\"] = <AddIcon />\n  iconVar[\"Add Income\"] = <AddIcon />\n  iconVar[\"Add Expense\"] = <AddIcon />\n  iconVar[\"Print\"] = <Print />\n  iconVar[\"Import\"] = <CloudUploadIcon />\n  iconVar[\"Export\"] = <CloudDownloadIcon />\n\n  let buttonCount = 1;\n  let lgSpan = [0];\n  let mdSpan = [0];\n  let smSpan = [0];\n  if (props.button) {\n    buttonCount = props.button.length;\n    lgSpan = [2, 4, 4, 6]\n    mdSpan = [4, 6, 6, 8]\n    smSpan = [4, 4, 8, 12]\n  }\n\n  const buttonHandler = (e, item, category) => {\n    console.log(e, item, category);\n    switch (category) {\n      case 'admin':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/admin/add\");\n        }\n        break;\n      case 'user':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/user/add\");\n        }\n        break;\n      case 'company':\n        if (item === 'Add New') {\n          props.history.push(\"/app/company/add\");\n        }\n        break;\n      case 'client':\n        if (item === 'Add New') {\n          props.history.push(\"/app/client/add\");\n        }\n        break;\n      case 'sales':\n        if (item === 'Add New') {\n          props.history.push(\"/app/sales/add\");\n        }\n        break;\n      case 'salesview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesview/add\");\n        }\n        break;\n      case 'clientview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/clientview/add\");\n        }\n        break;\n      case 'salesorder_item':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/item/add\");\n        }\n        break;\n      case 'salesorder_discount':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/discount/add\");\n        }\n        break;\n      case 'salesorder_promotion':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesorder/promotion/add\");\n        }\n        break;\n      default:\n        console.log();\n    }\n  }\n\n  return (\n    <div className={classes.pageTitleContainer}>\n      <Grid container spacing={1} >\n        <Grid item\n          lg={12 - lgSpan[buttonCount - 1]}\n          md={12 - mdSpan[buttonCount - 1]}\n          sm={smSpan[buttonCount - 1] === 12 ? 12 : 12 - smSpan[buttonCount - 1]}\n          xs={12}>\n          <Typography className={classes.typo} variant=\"h2\" size=\"sm\" color=\"myprimary\" weight=\"bold\">\n            {props.title}\n          </Typography>\n        </Grid>\n        {props.button && (\n          <Grid item lg={lgSpan[buttonCount - 1]} md={mdSpan[buttonCount - 1]} sm={smSpan[buttonCount - 1]} xs={12}>\n            <Grid container className={classes.buttonGroup}>\n              {\n                props.button.length > 0 && props.button.map((item, key) => (\n                  <Grid key={key} item className={classes.buttonContainer} lg={12 / buttonCount} md={12 / buttonCount} sm={12 / buttonCount} xs={12}>\n                    <Button\n                      variant={!item.includes(\"Add\") ? \"outlined\" : \"contained\"}\n                      classes={{ root: classes.button }}\n                      size=\"large\"\n                      color=\"primary\"\n                      startIcon={iconVar[item]}\n                      onClick={(e) => buttonHandler(e, item, props.category)}\n                    >\n                      {item}\n                    </Button>\n                  </Grid>\n                ))\n              }\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  status: {\n    width: 50,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n    fontSize: 10,\n    color: \"#FFF\"\n  },\n  draft: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paid: {\n    backgroundColor: theme.palette.success.main\n  },\n  pending: {\n    backgroundColor: theme.palette.secondary.main\n  },\n\n}));\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nexport default function Status({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {[classes.draft]: props.status === 'yes',[classes.paid]: props.status === 'no'}, )}\n    >\n        {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport loadingImage from '../../assets/images/loading.gif';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: '#fff',\r\n    backgroundColor: '#ffffff44',\r\n  },\r\n}));\r\n\r\nexport default function BackdropLoading(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\r\n        <img src={loadingImage} alt=\"Loading ...\"/>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","export const FETCH_ADMIN_REQUEST = 'FETCH_ADMIN_REQUEST';\r\nexport const FETCH_ADMIN_SUCCESS = 'FETCH_ADMIN_SUCCESS';\r\nexport const FETCH_ADMIN_ERROR = 'FETCH_ADMIN_ERROR';","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';","export const FETCH_USERVIEW_REQUEST = 'FETCH_USERVIEW_REQUEST';\r\nexport const FETCH_USERVIEW_SUCCESS = 'FETCH_USERVIEW_SUCCESS';\r\nexport const FETCH_USERVIEW_ERROR = 'FETCH_USERVIEW_ERROR';","export const FETCH_CLIENT_REQUEST = 'FETCH_CLIENT_REQUEST';\r\nexport const FETCH_CLIENT_SUCCESS = 'FETCH_CLIENT_SUCCESS';\r\nexport const FETCH_CLIENT_ERROR = 'FETCH_CLIENT_ERROR';","export const FETCH_CLIENTVIEW_REQUEST = 'FETCH_CLIENTVIEW_REQUEST';\r\nexport const FETCH_CLIENTVIEW_SUCCESS = 'FETCH_CLIENTVIEW_SUCCESS';\r\nexport const FETCH_CLIENTVIEW_ERROR = 'FETCH_CLIENTVIEW_ERROR';","export const FETCH_COMPANY_REQUEST = 'FETCH_COMPANY_REQUEST';\r\nexport const FETCH_COMPANY_SUCCESS = 'FETCH_COMPANY_SUCCESS';\r\nexport const FETCH_COMPANY_ERROR = 'FETCH_COMPANY_ERROR';","export const FETCH_SCHEDULE_REQUEST = 'FETCH_SCHEDULE_REQUEST';\r\nexport const FETCH_SCHEDULE_SUCCESS = 'FETCH_SCHEDULE_SUCCESS';\r\nexport const FETCH_SCHEDULE_ERROR = 'FETCH_SCHEDULE_ERROR';","export const FETCH_SCHEDULEVIEW_REQUEST = 'FETCH_SCHEDULEVIEW_REQUEST';\r\nexport const FETCH_SCHEDULEVIEW_SUCCESS = 'FETCH_SCHEDULEVIEW_SUCCESS';\r\nexport const FETCH_SCHEDULEVIEW_ERROR = 'FETCH_SCHEDULEVIEW_ERROR';","export const FETCH_SALESCLIENT_REQUEST = 'FETCH_SALESCLIENT_REQUEST';\r\nexport const FETCH_SALESCLIENT_SUCCESS = 'FETCH_SALESCLIENT_SUCCESS';\r\nexport const FETCH_SALESCLIENT_ERROR = 'FETCH_SALESCLIENT_ERROR';","export const FETCH_SALESCLIENTVIEW_REQUEST = 'FETCH_SALESCLIENTVIEW_REQUEST';\r\nexport const FETCH_SALESCLIENTVIEW_SUCCESS = 'FETCH_SALESCLIENTVIEW_SUCCESS';\r\nexport const FETCH_SALESCLIENTVIEW_ERROR = 'FETCH_SALESCLIENTVIEW_ERROR';","// export const SERVER_URL = \"http://localhost:4000/\";\r\nexport const SERVER_URL = \"http://admin-page.asile.id:4000/\";","import { fetchAdminRequest, fetchAdminSuccess, fetchAdminError } from \"../../redux/actions/AdminAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import AdminReducer from \"../../redux/reducers/AdminReducer\";\r\n\r\nfunction fetchAdmins() {\r\n    return dispatch => {\r\n        dispatch(fetchAdminRequest());\r\n        const body = { isAdmin: 1 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchAdminSuccess(res));\r\n                console.log(\"Get Admin===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchAdminError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchAdmins;","import {\r\n  FETCH_ADMIN_REQUEST,\r\n  FETCH_ADMIN_SUCCESS,\r\n  FETCH_ADMIN_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchAdminRequest() {\r\n    return {\r\n        type: FETCH_ADMIN_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchAdminSuccess(admin) {\r\n  console.log(\"action===>\", admin)\r\n    return {\r\n        type: FETCH_ADMIN_SUCCESS,\r\n        admin: admin\r\n    }\r\n}\r\n\r\nexport function fetchAdminError(error) {\r\n    return {\r\n        type: FETCH_ADMIN_ERROR,\r\n        error: error\r\n    }\r\n}","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nexport const loginApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}login`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            console.log(\"login response ===> \", res);\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}\r\n\r\nexport const signUpApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}signup`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}","import React from \"react\";\nimport { loginApi, signUpApi } from \"../services/auth/Auth\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\nvar adminID = 0;\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return { ...state, loading: true, isAuthenticated: true };\n    case \"LOGIN_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: true, adminID: adminID };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"LOGIN_FAILURE\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"SIGNUP_REQUEST\":\n      return { ...state, loading: true, isSignup: true };\n    case \"SIGNUP_SUCCESS\":\n      return { ...state, loading: false, isSignup: state.isSignup };\n    case \"SIGNUP_FAILURE\":\n      return { ...state, loading: false, isSignup: 0 };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n    adminID: localStorage.getItem(\"id_token\")\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signUp, signOut };\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'LOGIN_REQUEST', history: history });\n\n  // auth api\n  loginApi({ email: login, password: password }).then(res => {\n    console.log(\"Login=====> \", res)\n    if (res.data.user_id == 0 || res.data.user_id == undefined) {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login');\n    } else {\n      let check_id = res.data.isSuperAdmin;\n      if (check_id == 1) {\n        localStorage.setItem('id_token', 1)\n        localStorage.setItem('user_id', res.data.user_id)\n        localStorage.setItem('full_name', res.data.full_name)\n        adminID = 1\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS', token: res.data.rememberToken })\n\n        history.push('/app')\n      } else if (check_id == 0) {\n        localStorage.setItem('id_token', 2)\n        localStorage.setItem('company_id', res.data.company_id)\n        localStorage.setItem('user_id', res.data.user_id)\n        localStorage.setItem('full_name', res.data.full_name)\n        localStorage.setItem('allow_so', res.data.allow_so)\n        adminID = 2\n        setError(null)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS' })\n\n        history.push('/app')\n      } else {\n        history.push('/login');\n      }\n    }\n  }).catch(err => {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login')\n      setError(err);\n      setIsLoading(false);\n  })\n\n}\n\nfunction signUp(dispatch, full_name, password, email, phone_number, company_id, isAdmin, isActive, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'SIGNUP_REQUEST', history: history });\n\n  // auth api\n  signUpApi({ full_name: full_name, password: password, email: email, phone_number: phone_number, company_id: company_id, isAdmin: isAdmin, isActive: isActive }).then(res => {\n    if (res.data.user_id != null) {\n      setError(\"This user is already exist!\\n Please use another email.\")\n      history.push('/login');\n    } else if (res.data == null) {\n      setError(\"The company id is not exist.\")\n      history.push('/login');\n    } else {\n      setTimeout(() => {\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n        history.push('/success')\n      }, 2000);\n    }\n  }).catch(err => {\n    dispatch({ type: \"SIGNUP_FAILURE\" });\n    history.push('/login')\n    setError(err);\n    setIsLoading(false);\n  })\n\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchAdmins from \"../../../services/admins/AdminService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport { Edit } from \"@material-ui/icons\";\nimport { toast} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction AdminPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const adminData = useSelector(state => state.admin);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    props.fetchAdmins();// call backend\n    console.log(\"Admin Data === > \", adminData);\n    setDataSource(adminData.admin);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        }\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"sales_target\",\n      label: \"Sales Target\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"allow_so\",\n      label: \"Allow Sales Order\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  console.log(\"Edit Event===> \", value)\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  //Edit admin\n  const actionEdit = (e, i) => {\n    history.push(\"/app/usermanage/admin/\" + i + \"/edit\");\n\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = adminData.admin[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Administrators\" button={[\"Add New\"]} data={dataSource} category=\"admin\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Administrators\"}\n              // data={dataSource}\n              data={adminData.admin}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchAdmins: fetchAdmins\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  menuItems = [],\n  header,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper}>\n      <Paper className={classes.paper} classes={{ root: classes.widgetRoot }}>\n        <div className={classes.widgetHeader}>\n          {header ? (\n            header\n          ) : (\n              <React.Fragment>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  {title}\n                </Typography>\n                {!disableWidgetMenu && (\n                  <IconButton\n                    color=\"primary\"\n                    classes={{ root: classes.moreButton }}\n                    aria-owns=\"widget-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={() => setMoreMenuOpen(true)}\n                    buttonRef={setMoreButtonRef}\n                  >\n                    <MoreIcon />\n                  </IconButton>\n                )}\n              </React.Fragment>\n            )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        {\n          menuItems.map((menu, index) => (\n            <MenuItem key={index}>\n              <Typography>{menu}</Typography>\n            </MenuItem>\n          ))\n        }\n        {/* <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem> */}\n      </Menu>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n    /**\r\n     * EditInvoice.js\r\n     */\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n      padding: \"0 15px 0 15px\"\r\n    },\r\n    addButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    /**\r\n     * Custom Combobox\r\n     */\r\n    comboContainer: {\r\n      marginLeft: theme.spacing(1),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    addIcon: {\r\n      marginLeft: \"5px\"\r\n    },\r\n    autoRoot: {\r\n      marginTop: \"-8px\",\r\n      marginBottom: 0,\r\n    },\r\n    //Custom Combobox End\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomDatePicker( props ) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <DatePicker className={classes.formControl}\r\n            required\r\n            variant=\"inline\"\r\n            animateYearScrolling\r\n            autoOk\r\n            clearable='true'\r\n            label={props.title}\r\n            value={props.selectedDate}\r\n            onChange={(e) => props.handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { TextField, FormControl } from \"@material-ui/core\";\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomInput(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <TextField\r\n                // error\r\n                multiline={props.multiline}\r\n                rows={4}\r\n                required\r\n                label={props.title}\r\n                // defaultValue=\"Hello World\"\\\r\n                type={props.type}\r\n                value={props.value}\r\n                // helperText=\"Incorrect entry.\"\r\n                onChange={(e) => props.handleChange(e)}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, Divider, TextField, Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n/**\r\n * \r\n * @param {\r\n * \r\n * require * value * items\r\n * handleChange, addItem\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomCombobox({ required = false, ...props }) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    const defaultProps = {\r\n        options: props.items,\r\n        getOptionLabel: (option) => option,\r\n    };\r\n    return (\r\n        <Grid container className={classes.comboContainer}>\r\n            <Grid item md={props.addbtn ? 10 : 12}>\r\n                <Autocomplete\r\n                    classes={{root: classes.autoRoot}}\r\n                    {...defaultProps}\r\n                    id={props.name}\r\n                    debug={false}\r\n                    multiple={false}\r\n                    openOnFocus={true}\r\n                    value={props.value}\r\n                    renderOption={(option) => option}\r\n                    onChange={(e, value) => { console.log(e, value); props.handleChange(value) }}\r\n                    renderInput={(params) => <TextField {...params} required={props.req} label={props.name} margin=\"normal\" />}\r\n                />\r\n            </Grid>\r\n            {props.addbtn ? <Grid item md={2}>\r\n                <Tooltip title=\"Add Item\">\r\n                    <IconButton className={classes.addIcon}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n                : null}\r\n        </Grid>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  notificationContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  notificationContained: {\n    borderRadius: 45,\n    height: 45,\n    boxShadow: theme.customShadows.widgetDark,\n  },\n  notificationContainedShadowless: {\n    boxShadow: \"none\",\n  },\n  notificationIconContainer: {\n    minWidth: 45,\n    height: 45,\n    borderRadius: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 24,\n  },\n  notificationIconContainerContained: {\n    fontSize: 18,\n    color: \"#FFFFFF80\",\n  },\n  notificationIconContainerRounded: {\n    marginRight: theme.spacing(2),\n  },\n  containedTypography: {\n    color: \"white\",\n  },\n  messageContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexGrow: 1,\n  },\n  extraButton: {\n    color: \"white\",\n    \"&:hover, &:focus\": {\n      background: \"transparent\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n","import { fetchCompanyRequest, fetchCompanySuccess, fetchCompanyError } from \"../../redux/actions/CompanyAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchCompany() {\r\n    console.log('fetching Company ...')\r\n    return dispatch => {\r\n        dispatch(fetchCompanyRequest());\r\n        \r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getCompany`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchCompanySuccess(res));\r\n                console.log(\"Get Company===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCompanyError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchCompany;","import {\r\n    FETCH_COMPANY_REQUEST,\r\n    FETCH_COMPANY_SUCCESS,\r\n    FETCH_COMPANY_ERROR\r\n  } from '../constants'\r\n   \r\n  export function fetchCompanyRequest() {\r\n      return {\r\n          type: FETCH_COMPANY_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanySuccess(company) {\r\n      return {\r\n          type: FETCH_COMPANY_SUCCESS,\r\n          company: company\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanyError(error) {\r\n      return {\r\n          type: FETCH_COMPANY_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nfunction EditAdmin(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const adminData = useSelector(state => state.admin);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    company_entity_name: '',\n    isActive: false,\n    allow_so: false,\n    sales_target: 0,\n  })\n\n  const update_id = props.match.params.admin\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n    getAdminInfo(update_id)\n\n  }, [])\n\n  const getAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        getCompanyNamefromCompanyID(data[0].company_id.split(', '))\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          companyIDList: data[0].company_id.split(', '),\n          company_entity_name: data[0].company_entity_name,\n          isActive: data[0].isActive,\n          sales_target: data[0].sales_target,\n          allow_so: data[0].allow_so\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.companyIDList.join(', '),\n        isAdmin: true,\n        isActive: state.isActive,\n        sales_target: state.sales_target,\n        allow_so: state.allow_so\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n        \n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.company)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_entity_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n    if (object[0] != null) {\n      return object[0].company_id.toString()\n      // setState({\n      //   ...state,\n      //   company_id: object[0].company_id.toString()\n      // })\n    }\n\n  }\n\n  const getCompanyNamefromCompanyID = (companyIDList) => {\n    const value = [];\n    for (let i = 0, l = companyIDList.length; i < l; i += 1) {\n      let object = companyData.company.filter(item => item.company_id.toString() == companyIDList[i])\n      if (object[0] != null) {\n        value.push(object[0].company_entity_name)\n        // setState({\n        //   ...state,\n        //   company_id: object[0].company_id.toString()\n        // })\n      }\n      // value.push((companyIDList[i]))\n      setCompanyList(value)\n    }\n\n\n  }\n\n  const [companyList, setCompanyList] = React.useState([]);\n\n  const handleCompanyChange = (event) => {\n    console.log('handleCompanyChange==>', event.target.value)\n    setCompanyList(event.target.value);\n    const options = event.target.value;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      value.push(setCompanyIdfromCompanyName(options[i]))\n    }\n    // console.log('handleCompanyChange==>', value)\n    setState(prevState => ({\n      ...prevState,\n      companyIDList: value\n    }))\n  };\n  //input fields event\n  const handleChange = (e, field) => {\n    if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else if (e.target.name == 'allow_so') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSaveandBack = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.companyIDList == []) {\n      notify(\"Please enter company name.\")\n      return\n    } else if (state.sales_target == 0) {\n      notify(\"Please enter sales_target.\")\n      return\n    } else {\n      updateAdminInfo(update_id)\n      // history.push(\"/app/usermanage/admin\");\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/admin\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit Admin\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                {/* <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                  handleChange={(e) => handleChange(e, 'company_entity_name')} /> */}\n                <FormControl className={classes.formControl}>\n                  <InputLabel id=\"demo-mutiple-checkbox-label\">Companies</InputLabel>\n                  <Select\n                    labelId=\"demo-mutiple-checkbox-label\"\n                    id=\"demo-mutiple-checkbox\"\n                    multiple\n                    value={companyList}\n                    onChange={handleCompanyChange}\n                    input={<Input />}\n                    renderValue={(selected) => selected.join(', ')}\n                    MenuProps={MenuProps}\n                  >\n                    {companies.map((name) => (\n                      <MenuItem key={name} value={name}>\n                        <Checkbox checked={companyList.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Sales Target\" value={state.sales_target}\n                  handleChange={(e) => handleChange(e, 'sales_target')} />\n              </Grid>\n              \n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Allow Sales Order</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.allow_so} onChange={handleChange} name=\"allow_so\" />}\n                    label=\"Allow\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                                        </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSaveandBack()}\n                    >\n                      Save\n                                        </Button>\n                  </Grid>\n\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditAdmin);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddAdmin(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        companyIDList: [],\r\n        company_entity_name: \"\",\r\n        sales_target: 0,\r\n        allow_so: false\r\n    })\r\n    const [companyList, setCompanyList] = React.useState([]);\r\n\r\n    const handleCompanyChange = (event) => {\r\n\r\n        setCompanyList(event.target.value);\r\n        const options = event.target.value;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            value.push(setCompanyIdfromCompanyName(options[i]))\r\n        }\r\n        console.log('handleCompanyChange==>', value)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            companyIDList: value\r\n        }))\r\n    };\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            return object[0].company_id.toString()\r\n        }\r\n\r\n    }\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        if (e.target.name == 'allow_so') {\r\n            setState({ ...state, [e.target.name]: e.target.checked });\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.companyIDList == []) {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else if (state.sales_target == 0) {\r\n            notify(\"Please enter sales target.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.companyIDList.join(', '),\r\n                    isAdmin: true,\r\n                    isActive: true,\r\n                    sales_target: state.sales_target,\r\n                    allow_so: state.allow_so\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n            history.push(\"/app/usermanage/admin\");\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.companyIDList == []) {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.companyIDList.join(', '),\r\n                    isAdmin: true,\r\n                    isActive: true,\r\n                    sales_target: state.sales_target,\r\n                    allow_so: state.allow_so\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n            setState(state => ({\r\n                ...state,\r\n                full_name: '',\r\n                password: \"\",\r\n                email: \"\",\r\n                phone_number: '',\r\n                companyIDList: [],\r\n                allow_so: false,\r\n                sales_target: 0\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/admin\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Admin\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                {/* <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} /> */}\r\n                                {/* <CustomInput title=\"Company ID\" value={state.company_id} handleChange={(e) => handleChange(e, 'company_id')} /> */}\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Companies</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-mutiple-checkbox-label\"\r\n                                        id=\"demo-mutiple-checkbox\"\r\n                                        multiple\r\n                                        value={companyList}\r\n                                        onChange={handleCompanyChange}\r\n                                        input={<Input />}\r\n                                        renderValue={(selected) => selected.join(', ')}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {companies.map((name) => (\r\n                                            <MenuItem key={name} value={name}>\r\n                                                <Checkbox checked={companyList.indexOf(name) > -1} />\r\n                                                <ListItemText primary={name} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Sales Target\" value={state.sales_target}\r\n                                    handleChange={(e) => handleChange(e, 'sales_target')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Typography>Allow Sales Order</Typography>\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\r\n                                    <FormControlLabel\r\n                                        control={<Switch checked={state.allow_so} onChange={handleChange} name=\"allow_so\" />}\r\n                                        label=\"Allow\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddAdmin);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserRequest, fetchUserSuccess, fetchUserError } from \"../../redux/actions/UserAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUsers() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserRequest());\r\n        const body = { isAdmin: 0 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchUserSuccess(res));\r\n                console.log(\"Get User===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchUserError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchUsers;","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchUserRequest() {\r\n    return {\r\n        type: FETCH_USER_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserSuccess(user) {\r\n  console.log(\"User Action +++>\", user)\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\nexport function fetchUserError(error) {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel,  Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUsers from \"../../../services/users/UserService\";\nimport { useUserState } from \"../../../context/UserContext\";\n\nfunction UserPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userData = useSelector(state => state.user);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUsers();\n    console.log(userData, props.user, user);\n    setDataSource(userData.data);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                  onClick={(e) => {\n                    actionEdit(e, value)\n                  }}\n                >\n                  <Edit style={{fontSize:'18'}}/>\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  // const actionClick = (event, i) => {\n  //   setSelectedRowIndex(i);\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const actionClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  //Edit user\n  const actionEdit = (e, i) => {\n    setSelectedRowIndex(i)\n    console.log(\"=================>\",selectedRowIndex, i);\n    history.push(\"/app/usermanage/user/\" + i + \"/edit\");\n  }\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n      \n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = userData.user[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n   \n  };\n\n  return (\n    <>\n      <PageTitle title=\"Users\" button={[\"Add New\"]} data={dataSource} category=\"user\" history={history}/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Users\"}\n              data={userData.user}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open}/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUsers: fetchUsers\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPage);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditUser(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const userData = useSelector(state => state.user);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    password: \"\",\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    company_entity_name: '',\n    isActive: false\n  })\n\n  const update_id = props.match.params.user\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.data);\n    getUserInfo(update_id)\n\n  }, [])\n\n  const getUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          password: data[0].password,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          company_id: data[0].company_id.toString(),\n          company_entity_name: data[0].company_entity_name,\n          isActive: data[0].isActive\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.company_id,\n        isAdmin: false,\n        isActive: state.isActive\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.data)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_entity_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n    if (object[0] != null) {\n      setState({\n        ...state,\n        company_id: object[0].company_id.toString()\n      })\n    }\n\n  }\n  //input fields event\n  const handleChange = (e, field) => {\n    let comboFields = ['company_entity_name'];\n    if (comboFields.includes(field)) {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSave = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n      notify(\"Please enter company name.\")\n      return\n    } else {\n      updateUserInfo(update_id)\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/user\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit User\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                  handleChange={(e) => handleChange(e, 'company_entity_name')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSave()}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditUser);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddUser(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        company_id: \"\",\r\n        company_entity_name: \"\"\r\n    })\r\n\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    isAdmin: false,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            full_name: '',\r\n                            password: \"\",\r\n                            email: \"\",\r\n                            phone_number: '',\r\n                            company_id: \"\",\r\n                            company_entity_name: \"\"\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n    const onSaveandBack = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    isAdmin: false,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            full_name: '',\r\n                            password: \"\",\r\n                            email: \"\",\r\n                            phone_number: '',\r\n                            company_id: \"\",\r\n                            company_entity_name: \"\"\r\n                        }))\r\n                        history.push(\"/app/usermanage/user\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/user\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New User\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\"\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddUser);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from \"@material-ui/icons\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction CompanysPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const companyData = useSelector(state => state.company);\n\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"company_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"time_limit_per_schedule\",\n      label: \"Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"late_policy\",\n      label: \"Late Policy\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"min_schedule_time\",\n      label: \"Min Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"max_schedule_time\",\n      label: \"Max Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"upload\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"company_info\",\n      label: \"Company Information\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          if (value != null) {\n            return (\n              <>\n                <ul>\n                  {\n                    value.split(', ').map((item, index) => {\n                      return (\n                        <li>\n                          <a key={index} href={`${SERVER_URL}pdf/${item}`} target=\"_blank\">{item}</a>\n                        </li>\n\n                      )\n                    })\n                  }\n                </ul>\n              </>\n            )\n          } else {\n            return <></>\n          }\n        }\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    console.log(\"====\", dataSource[i]);\n    history.push(\"/app/company/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = companyData.company[data.dataIndex].company_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            company_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteCompany`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Companies\" button={[\"Add New\"]} data={dataSource} category=\"company\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Companies\"}\n              data={companyData.company}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanysPage);\n","import axios from \"axios\";\r\nimport { SERVER_URL } from './common/config'\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://admin.asile.id:4000',\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n// export default axios.create({\r\n//   baseURL: 'http://localhost:4000',\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json\"\r\n//   }\r\n// });","import http from \"../../http_common\";\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n\r\n    return http.post(\"/upload_pdf\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return http.get(\"/files\");\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();","import React, { Component } from \"react\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Box, Typography, Button, ListItem, withStyles } from '@material-ui/core';\r\nimport UploadService from \"../../services/upload_pdf/upload-files.service\";\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 15,\r\n        borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n        backgroundColor: \"#EEEEEE\",\r\n    },\r\n    bar: {\r\n        borderRadius: 5,\r\n        backgroundColor: '#1a90ff',\r\n    },\r\n}))(LinearProgress);\r\n\r\nexport default class UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedFiles: undefined,\r\n            currentFile: undefined,\r\n            progress: 0,\r\n            message: \"\",\r\n            isError: false,\r\n            fileInfos: [],\r\n        };\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     UploadService.getFiles().then((response) => {\r\n    //         this.setState({\r\n    //             fileInfos: response.data,\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    selectFile(event) {\r\n        console.log('this=>', event.target.files)\r\n        this.setState({\r\n            selectedFiles: event.target.files,\r\n        });\r\n    }\r\n\r\n    upload() {\r\n        let fileNameList = []        \r\n        for (let index = 0; index < this.state.selectedFiles.length; index++) {\r\n            let currentFile = this.state.selectedFiles[index];\r\n            this.setState({\r\n                progress: 0,\r\n                currentFile: currentFile,\r\n            });\r\n\r\n            UploadService.upload(currentFile, (event) => {\r\n                this.setState({\r\n                    progress: Math.round((100 * event.loaded) / event.total),\r\n                });\r\n            })\r\n                .then((response) => {\r\n                    console.log('pop=>', response.data.fileName.split('/').pop().toString())\r\n                    fileNameList.push(response.data.fileName.split('/').pop().toString())\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        isError: false\r\n                    });\r\n                    // return UploadService.getFiles();\r\n                })\r\n                .then((files) => {\r\n                    this.setState({\r\n                        fileInfos: files.data,\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        progress: 0,\r\n                        message: \"Could not upload the file!\",\r\n                        currentFile: undefined,\r\n                        isError: true\r\n                    });\r\n                });\r\n\r\n            this.setState({\r\n                selectedFiles: undefined,\r\n            });\r\n        }\r\n        // let currentFile = this.state.selectedFiles[0];\r\n        console.log('fileNameList=>', fileNameList)\r\n        \r\n        this.setState({\r\n            fileInfos: fileNameList\r\n        })\r\n        this.props.setFileList(fileNameList);\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedFiles,\r\n            currentFile,\r\n            progress,\r\n            fileInfos,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"mg20\">\r\n                {currentFile && (\r\n                    <Box className=\"mb25\" display=\"flex\" alignItems=\"center\">\r\n                        <Box width=\"100%\" mr={1}>\r\n                            <BorderLinearProgress variant=\"determinate\" value={progress} />\r\n                        </Box>\r\n                        <Box minWidth={35}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">{`${progress}%`}</Typography>\r\n                        </Box>\r\n                    </Box>)\r\n                }\r\n\r\n                <label htmlFor=\"btn-upload\">\r\n                    <input\r\n                        id=\"btn-upload\"\r\n                        name=\"btn-upload\"\r\n                        style={{ display: 'none' }}\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={this.selectFile.bind(this)} />\r\n                    <Button\r\n                        className=\"btn-choose\"\r\n                        variant=\"outlined\"\r\n                        component=\"span\" >\r\n                        Choose Files\r\n                </Button>\r\n                </label>\r\n                {/* <div className=\"file-name\">\r\n                    {selectedFiles && selectedFiles.length > 0 ? {\r\n                        var nameList = []\r\n                        selectedFiles.map(file => {\r\n                            nameList.push(file.name)\r\n                        })\r\n                        return nameList.join(', ')\r\n                    } : null}\r\n                </div> */}\r\n                <Button\r\n                    className=\"btn-upload\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    disabled={!selectedFiles}\r\n                    onClick={this.upload.bind(this)}>\r\n                    Upload\r\n              </Button>\r\n{/* \r\n                <Typography variant=\"subtitle2\" className={`upload-message ${isError ? \"error\" : \"\"}`}>\r\n                    {message}\r\n                </Typography> */}\r\n\r\n                <Typography className=\"list-header\">\r\n                    List of Files\r\n                </Typography>\r\n                <ul className=\"list-group\">\r\n                    {fileInfos &&\r\n                        fileInfos.map((file, index) => (\r\n                            <ListItem\r\n                                divider\r\n                                key = {index}\r\n                                >\r\n                                {file}\r\n                            </ListItem>\r\n                        ))}\r\n                </ul>\r\n            </div >\r\n        );\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport UploadFiles from \"../../components/Upload/upload-files.component\";\r\nimport { SERVER_URL } from '../../common/config';\r\n// import LocationPicker from 'react-location-picker';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\n\r\nexport default function AddCompany(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n\r\n    // const [location, setLocation] = useState('');\r\n    // const [defaultPosition, setDefaultPosition] = useState({\r\n    //     lat: 0,\r\n    //     lng: 0\r\n    // })\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    // input form datas\r\n\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: '',\r\n        address: '',\r\n        phone_number: \"\",\r\n        time_limit_per_schedule: 30,\r\n        late_policy: 60,\r\n        min_schedule_time: 60,\r\n        max_schedule_time: 360,\r\n        notes: 1,\r\n        upload: 0,\r\n        company_info: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        // navigator.geolocation.getCurrentPosition(function (position) {\r\n        //     console.log(\"Latitude is :\", position.coords.latitude);\r\n        //     console.log(\"Longitude is :\", position.coords.longitude);\r\n        //     setDefaultPosition({\r\n        //         lat: position.coords.latitude,\r\n        //         lng: position.coords.longitude\r\n        //     })\r\n        // });\r\n    }, [])\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\r\n            setState({ ...state, [e.target.name]: e.target.checked });\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const addItem = (field) => {\r\n        console.log(field)\r\n    }\r\n\r\n    //date picker event\r\n    const handleDateChange = (date, field) => {\r\n        setState(prevState => ({\r\n            ...prevState, [field]: date\r\n        }))\r\n    };\r\n\r\n\r\n    // const handleLocationChange = ({ position, address, places }) => {\r\n\r\n    //     // Set new location\r\n    //     console.log(\"Address ====> \", address)\r\n    //     setLocation({\r\n    //         address: address\r\n    //     });\r\n    // }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter company entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter company owner name.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter company address.\")\r\n            return\r\n        } else if (state.min_schedule_time < 0) {\r\n            notify(\"Please enter valid minimum schedule time.\")\r\n            return\r\n        } else if (state.max_schedule_time < 0) {\r\n            notify(\"Please enter valid maximum schedule time.\")\r\n            return\r\n        } else if (state.min_schedule_time > state.max_schedule_time) {\r\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\r\n            return\r\n        } else if (state.time_limit_per_schedule < 0) {\r\n            notify(\"Please enter valid time limit.\")\r\n            return\r\n        } else if (state.late_policy < 0) {\r\n            notify(\"Please enter valid late policy.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    company_entity_name: state.entity_name,\r\n                    company_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    notes: state.notes,\r\n                    upload: state.upload,\r\n                    time_limit_per_schedule: state.time_limit_per_schedule,\r\n                    late_policy: state.late_policy,\r\n                    min_schedule_time: state.min_schedule_time,\r\n                    max_schedule_time: state.max_schedule_time,\r\n                    company_info: state.company_info.join(', ')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addCompany`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.company_id != null) {\r\n                        notify(\"This company is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState({\r\n                            id: '',\r\n                            entity_name: '',\r\n                            owner_name: '',\r\n                            address: '',\r\n                            phone_number: \"\",\r\n                            time_limit_per_schedule: 30,\r\n                            late_policy: 60,\r\n                            min_schedule_time: 60,\r\n                            max_schedule_time: 360,\r\n                            notes: 1,\r\n                            upload: 0,\r\n                            company_info: []\r\n                        })\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter company entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter company owner name.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter company address.\")\r\n            return\r\n        } else if (state.min_schedule_time < 0) {\r\n            notify(\"Please enter valid minimum schedule time.\")\r\n            return\r\n        } else if (state.max_schedule_time < 0) {\r\n            notify(\"Please enter valid maximum schedule time.\")\r\n            return\r\n        } else if (state.min_schedule_time > state.max_schedule_time) {\r\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\r\n            return\r\n        } else if (state.time_limit_per_schedule < 0) {\r\n            notify(\"Please enter valid time limit.\")\r\n            return\r\n        } else if (state.late_policy < 0) {\r\n            notify(\"Please enter valid late policy.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    company_entity_name: state.entity_name,\r\n                    company_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    notes: state.notes,\r\n                    upload: state.upload,\r\n                    time_limit_per_schedule: state.time_limit_per_schedule,\r\n                    late_policy: state.late_policy,\r\n                    min_schedule_time: state.min_schedule_time,\r\n                    max_schedule_time: state.max_schedule_time,\r\n                    company_info: state.company_info.join(', ')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addCompany`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.company_id != null) {\r\n                        notify(\"This company is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState({\r\n                            id: '',\r\n                            entity_name: '',\r\n                            owner_name: '',\r\n                            address: '',\r\n                            phone_number: \"\",\r\n                            time_limit_per_schedule: 30,\r\n                            late_policy: 60,\r\n                            min_schedule_time: 60,\r\n                            max_schedule_time: 360,\r\n                            notes: 1,\r\n                            upload: 0,\r\n                            company_info: []\r\n                        })\r\n                        history.push(\"/app/company\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/company\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_schedule_time')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\r\n                                    label=\"Notes\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\r\n                                    label=\"Upload\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Company Information</Typography>\r\n                                </Grid>\r\n                                <UploadFiles setFileList={(fileNameList) => {\r\n                                    setState((state) => ({\r\n                                        ...state,\r\n                                        company_info: fileNameList\r\n                                    }))\r\n\r\n                                }} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\nimport UploadFiles from \"../../components/Upload/upload-files.component\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditCompany(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        phone_number: \"\",\n        time_limit_per_schedule: 0,\n        late_policy: 0,\n        min_schedule_time: 0,\n        max_schedule_time: 0,\n        notes: 0,\n        upload: 0,\n        company_info: [],\n        company_infoList: ''\n    })\n    const update_id = props.match.params.company\n    useEffect(() => {\n        getCompanyInfo(update_id)\n    }, [])\n\n\n    const getCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getCompanyById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.company_entity_name,\n                    owner_name: data.company_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    time_limit_per_schedule: data.time_limit_per_schedule,\n                    late_policy: data.late_policy,\n                    min_schedule_time: data.min_schedule_time,\n                    max_schedule_time: data.max_schedule_time,\n                    notes: data.notes,\n                    upload: data.upload,\n                    company_infoList: data.company_info\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    const updateCompanyInfo = (company_id) => {\n        \n        console.log(\"========\",state.company_info )\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id,\n                company_entity_name: state.entity_name,\n                company_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                notes: state.notes,\n                upload: state.upload,\n                time_limit_per_schedule: state.time_limit_per_schedule,\n                late_policy: state.late_policy,\n                min_schedule_time: state.min_schedule_time,\n                max_schedule_time: state.max_schedule_time,\n                company_info: state.company_info.length == 0 ? state.company_infoList : state.company_info.join(', ') \n            })\n        };\n        fetch(`${SERVER_URL}updateCompany`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    //input fields event\n    const handleChange = (e, field) => {\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const addItem = (field) => {\n        console.log(field)\n    }\n\n    //date picker event\n    const handleDateChange = (date, field) => {\n        setState(prevState => ({\n            ...prevState, [field]: date\n        }))\n    };\n\n    //file picker event\n    const handleCapture = ({ target }) => {\n        const fileReader = new FileReader();\n        // const name = target.accept.includes('image') ? 'images' : 'videos';\n        setState((prevState) => ({\n            ...prevState, file: target.files[0]\n        }));\n\n        /* fileReader.readAsDataURL(target.files[0]);\n        fileReader.onload = (e) => {\n          setState((prevState) => ({\n            ...prevState, file: e.target.result\n          }));\n        }; */\n    };\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.min_schedule_time < 0) {\n            notify(\"Please enter valid minimum schedule time.\")\n            return\n        } else if (state.max_schedule_time < 0) {\n            notify(\"Please enter valid maximum schedule time.\")\n            return\n        } else if (state.min_schedule_time > state.max_schedule_time) {\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\n            return\n        } else if (state.time_limit_per_schedule < 0) {\n            notify(\"Please enter valid time limit.\")\n            return\n        } else if (state.late_policy < 0) {\n            notify(\"Please enter valid late policy.\")\n            return\n        } else {\n            updateCompanyInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/company\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_schedule_time')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\n                                    label=\"Notes\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\n                                    label=\"Upload\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Company Information ( If you want to change, please upload PDFs and save. )</Typography>\n                                </Grid>\n                                <UploadFiles setFileList={(fileNameList) => {\n                                    console.log(\"edit===> \", fileNameList)\n                                    setState((state) => ({\n                                        ...state,\n                                        company_info: fileNameList\n                                    }))\n\n                                }} />\n                            </Grid>\n\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditCompany);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { fetchClientRequest, fetchClientSuccess, fetchClientError } from \"../../redux/actions/ClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ClientReducer from \"../../redux/reducers/ClientReducer\";\r\n\r\nfunction fetchClient() {\r\n    return dispatch => {\r\n        dispatch(fetchClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClient;","import {\r\n    FETCH_CLIENT_REQUEST,\r\n    FETCH_CLIENT_SUCCESS,\r\n    FETCH_CLIENT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchClientRequest() {\r\n      return {\r\n          type: FETCH_CLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientSuccess(client) {\r\n    console.log(\"action===>\", client)\r\n      return {\r\n          type: FETCH_CLIENT_SUCCESS,\r\n          client: client\r\n      }\r\n  }\r\n  \r\n  export function fetchClientError(error) {\r\n      return {\r\n          type: FETCH_CLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Typography, Button } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport Status from \"../../components/Status/Status\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientsPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientData = useSelector(state => state.client);\n\n  useEffect(() => {\n    console.log(clientData)\n    props.fetchClient()\n    setDataSource(clientData.client);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"custom_field\",\n      label: \"Custom Field\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"approved\",\n      label: \"Approved\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value == 1 ? \"yes\" : \"no\"} />\n          );\n        }\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Created by\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/client/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientData.client[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        client_entity_name: row[0],\n        address: row[1],\n        phone_number: row[3],\n        location: row[2],\n        company_id: row[4],\n        custom_field: row[5],\n        approved: row[6],\n        created_by: row[7]\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addClient`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"client\" history={history} />\n      <Grid container spacing={4}>\n\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Clients\"}\n              data={clientData.client}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientsPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Typography, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        custom_field: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: '',\r\n        company_entity_name: '',\r\n        approved: '1',\r\n        created_by: localStorage.getItem('user_id'),\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter custom field.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: state.approved,\r\n                    created_by: state.created_by\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(()=>({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                            company_id: '',\r\n                            company_entity_name: '',\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter custom field.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: state.approved,\r\n                    created_by: state.created_by\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(()=>({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                            company_id: '',\r\n                            company_entity_name: '',\r\n                        }))\r\n                        history.push(\"/app/client\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/client\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Custom Field\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        custom_field: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: '',\n        company_entity_name: '',\n        approved: '0',\n        created_by: ''\n    })\n\n    const update_id = props.match.params.client\n    useEffect(() => {\n        props.fetchCompany();\n        setDataSource(companyData.company);\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                console.log('response edit client', data)\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    custom_field: data.custom_field,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    company_id: data.company_id,\n                    company_entity_name: data.company_entity_name,\n                    location: data.location,\n                    approved: data.approved,\n                    created_by: data.created_by\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                custom_field: state.custom_field,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id,\n                approved: state.approved,\n                created_by: state.created_by\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', original, companyData.company)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    tmp.push(item?.company_entity_name);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n        if (object[0] != null) {\n            setState({\n                ...state,\n                company_id: object[0].company_id.toString()\n            })\n        }\n\n    }\n    //input fields event\n    const handleChange = (e, field) => {\n        let comboFields = ['company_entity_name'];\n        if (comboFields.includes(field)) {\n            setCompanyIdfromCompanyName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (e.target.name == \"approved\") {\n            console.log('approved====>', e.target.checked)\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter client entity name.\")\n            return\n        } else if (state.custom_field == null || state.custom_field == \"\") {\n            notify(\"Please enter custom field.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter client address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter client location.\")\n            return\n        } else if (state.phone_number.length < 7) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n            notify(\"Please enter company name.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/client\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Custom Field(For example: Gender: Male, Age: 28)\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Approved</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={Number(state.approved)} onChange={handleChange} name=\"approved\" />}\n                                    label=\"Approved\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_SALESCLIENT_REQUEST, FETCH_SALESCLIENT_SUCCESS, FETCH_SALESCLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    sales: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                sales: action.sales\r\n            }\r\n        case FETCH_SALESCLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesClientRequest, fetchSalesClientSuccess, fetchSalesClientError } from \"../../redux/actions/SalesClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClient() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientSuccess(res));\r\n                console.log(\"Get SalesClient===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClient;","import {\r\n    FETCH_SALESCLIENT_REQUEST,\r\n    FETCH_SALESCLIENT_SUCCESS,\r\n    FETCH_SALESCLIENT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesClientRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientSuccess(sales) {\r\n    console.log(\"action===>\", sales)\r\n      return {\r\n          type: FETCH_SALESCLIENT_SUCCESS,\r\n          sales: sales\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchSalesClient from \"../../services/sales/SalesClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesData = useSelector(state => state.sales);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    console.log(salesData)\n    props.fetchSalesClient()\n    setDataSource(salesData.sales);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/sales/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesData.sales[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n\n    addWithCSV(data)\n\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        user_id: row[0],\n        client_id: row[1],\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"sales\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Sales Clients\"}\n              // data={dataSource}\n              data={salesData.sales}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClient: fetchSalesClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport fetchUsers from \"../../services/users/UserService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.user);\n    const clientData = useSelector(state => state.client);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.sales\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: '',\n        clients: [],\n    })\n\n    useEffect(() => {\n        props.fetchUsers();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getClientsByCompanyId = (user_name) => {\n        let company_id = userData.user.filter(item => item.full_name == user_name)[0].company_id.toString()\n        console.log(\"======================>\", company_id)\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                // clientData.client = data\n                let temp = getClientNameList(data)\n                setState(prevState => ({\n                    ...prevState,\n                    client_name: '',\n                    clients: temp\n                }))\n\n            })\n            .catch(error => {\n                notify('Something went wrong!\\n' + error)\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.client)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    // const clients = getClientNameList(clientData.client)\n\n    // console.log(\"Client Data =====> \", clients.map(item => {\n    //     return item?.value\n    // }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.user)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.user)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n            getClientsByCompanyId(e)\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (state.clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: state.clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/sales\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={state.clients.map(item => {\n                                    return item?.value\n                                })} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUsers: fetchUsers,\n    fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: '',\r\n        company_id: '',\r\n        clients: [],\r\n        users: [],\r\n        userIDList: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n    }, [])\r\n\r\n    const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n            getUsersbyCompanyId(object[0].company_id.toString())\r\n            getClientsByCompanyId(object[0].company_id.toString())\r\n        }\r\n\r\n    }\r\n\r\n    const getClientsByCompanyId = (company_id) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                company_id: company_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                // clientData.client = data\r\n                let temp = getClientNameList(data)\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    clients: temp\r\n                }))\r\n\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const getClientNameList = (original) => {\r\n        // console.log('originall ====> ', original, clientData.client)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getUserNameList = (original) => {\r\n        // console.log('originall ====> ', original, clientData.client)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const getUsersbyCompanyId = (company_id) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                company_id: company_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}getUserById`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                // clientData.client = data\r\n                let temp = getUserNameList(data)\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    users: temp\r\n                }))\r\n\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    //input fields event\r\n    const handleCompanyChange = (e, field) => {\r\n\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                [field]: e,\r\n                client_name: ''\r\n            }))\r\n            setUserList([])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClientChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (state.clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: state.clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n\r\n        setUserList(event.target.value)\r\n        const options = event.target.value;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            value.push(getUserIDbyUserName(options[i]))\r\n        }\r\n        console.log('handleCompanyChange==>', value)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            userIDList: value\r\n        }))\r\n    };\r\n\r\n    const getUserIDbyUserName = (user_name) => {\r\n        console.log(\"state.user===>\", state.users)\r\n        let object = state.users.filter(item => item.value == user_name)\r\n        if (object[0] != null) {\r\n            return object[0].key\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        console.log('save data ==> ', state.userIDList, state.client_id)\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                            company_id: '',\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        console.log('save data ==> ', state.userIDList, state.client_id)\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                            company_id: '',\r\n                        }))\r\n                        history.push(\"/app/sales\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/sales\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleCompanyChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Users</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-mutiple-checkbox-label\"\r\n                                        id=\"demo-mutiple-checkbox\"\r\n                                        multiple\r\n                                        value={userList}\r\n                                        onChange={handleNameChange}\r\n                                        input={<Input />}\r\n                                        renderValue={(selected) => selected.join(', ')}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {state.users.map((name) => (\r\n                                            <MenuItem key={name.value} value={name.value}>\r\n                                                <Checkbox checked={userList.indexOf(name.value) > -1} />\r\n                                                <ListItemText primary={name.value} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={state.clients.map(item => {\r\n                                    return item?.value\r\n                                })} value={state.client_name}\r\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { fetchScheduleRequest, fetchScheduleSuccess, fetchScheduleError } from \"../../redux/actions/ScheduleAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ScheduleReducer from \"../../redux/reducers/ScheduleReducer\";\r\n\r\nfunction fetchSchedule() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSchedule`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSchedule;","import {\r\n    FETCH_SCHEDULE_REQUEST,\r\n    FETCH_SCHEDULE_SUCCESS,\r\n    FETCH_SCHEDULE_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchScheduleRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULE_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleSuccess(schedule) {\r\n    console.log(\"action===>\", schedule)\r\n      return {\r\n          type: FETCH_SCHEDULE_SUCCESS,\r\n          schedule: schedule\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULE_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSchedule from \"../../services/schedule/ScheduleService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction SchedulePage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleData = useSelector(state => state.schedule);\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  useEffect(() => {\n    console.log(scheduleData)\n    props.fetchSchedule();\n    setDataSource(scheduleData.data);\n  }, [])\n\n  console.log(\"schedule data=====>\", scheduleData)\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}upload/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check In\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Visiting Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Late\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Present/Absent\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value != \"0000-00-00 00:00:00\"? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"signature\",\n      label: \"Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n      },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  /// Table Action event end\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = scheduleData.schedule[data.dataIndex].schedule_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            schedule_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSchedule`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Schedules\"}\n              data={scheduleData.schedule}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSchedule: fetchSchedule\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SchedulePage);\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n  container: {\r\n    paddingTop: 20\r\n  },\r\n  version: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport { Typography } from \"../Wrappers/Wrappers\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// components\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function Footer(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Powered By Asile\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} className={classes.version}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Version 0.0.1\r\n                </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport AdminPage from \"../../pages/UserManage/Admins/Admins\";\nimport EditAdminPage from \"../../pages/UserManage/Admins/EditAdmin\";\nimport AddAdminPage from \"../../pages/UserManage/Admins/AddAdmin\";\nimport UserPage from \"../../pages/UserManage/Users/Users\";\nimport EditUserPage from \"../../pages/UserManage/Users/EditUser\";\nimport AddUserPage from \"../../pages/UserManage/Users/AddUser\";\n\nimport CompanyPage from \"../../pages/Companys/Companys\";\nimport AddCompanyPage from \"../../pages/Companys/AddCompany\";\nimport EditCompanyPage from \"../../pages/Companys/EditCompany\";\nimport ClientsPage from \"../../pages/Client/Client\";\nimport AddClientPage from \"../../pages/Client/AddClient\";\nimport EditClientPage from \"../../pages/Client/EditClient\";\nimport SalesPage from \"../../pages/Sales/Sales\";\nimport EditSalesPage from \"../../pages/Sales/EditSales\";\nimport AddSalesPage from \"../../pages/Sales/AddSales\";\nimport SchedulePage from \"../../pages/Schedule/Schedule\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n            \n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer,{\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n            }\n          )}>\n            <Grid>\n              <Switch>\n                <Route exact path=\"/app/usermanage\" component={AdminPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/usermanage/admin\" />}\n                />\n                <Route exact path=\"/app/usermanage/admin\" component={AdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/:admin/edit\" component={EditAdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/add\" component={AddAdminPage} />\n                <Route exact path=\"/app/usermanage/user\" component={UserPage} /> \n                <Route exact path=\"/app/usermanage/user/:user/edit\" component={EditUserPage} /> \n                <Route exact path=\"/app/usermanage/user/add\" component={AddUserPage} />\n                <Route exact path=\"/app/company\" component={CompanyPage} />\n                <Route exact path=\"/app/company/add\" component={AddCompanyPage} />\n                <Route exact path=\"/app/company/:company/edit\" component={EditCompanyPage} />\n                <Route exact path=\"/app/client\" component={ClientsPage} />\n                <Route exact path=\"/app/client/add\" component={AddClientPage} />\n                <Route exact path=\"/app/client/:client/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/sales\" component={SalesPage} />\n                <Route exact path=\"/app/sales/:sales/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/sales/add\" component={AddSalesPage} />\n                <Route exact path=\"/app/schedule\" component={SchedulePage} />\n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  AssessmentOutlined,\n  AccountCircleOutlined,\n  PeopleAltOutlined,\n  TransferWithinAStationOutlined,\n  TimerOutlined,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport HistoryOutlinedIcon from '@material-ui/icons/HistoryOutlined';\nimport StorageOutlinedIcon from '@material-ui/icons/StorageOutlined';\nimport TrendingDownOutlinedIcon from '@material-ui/icons/TrendingDownOutlined';\nimport SpellcheckOutlinedIcon from '@material-ui/icons/SpellcheckOutlined';\nimport MergeTypeOutlinedIcon from '@material-ui/icons/MergeTypeOutlined';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/userview\",\n    icon: <AccountCircleOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 1,\n    label: \"Client\",\n    link: \"/app/clientview\",\n    icon: <PeopleAltOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 2,\n    label: \"Schedule\",\n    link: \"/app/scheduleview\",\n    icon: <TimerOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/salesview\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 4,\n    label: \"Report\",\n    link: \"/app/schedule_report\",\n    icon: <AssessmentOutlined fontSize=\"small\" />,\n    children: [\n      {\n        label: \"Schedules Report\",\n        link: \"/app/schedule_report\",\n        icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n      },\n      {\n        label: \"Orders Report\",\n        link: \"/app/salesorder_report\",\n        icon: <HistoryOutlinedIcon fontSize=\"small\" />,\n      }]\n  },\n  localStorage.getItem('allow_so') != 0 ?\n    {\n      id: 5,\n      label: \"Sales Order\",\n      link: \"/app/salesorder/review\",\n      icon: <ShoppingCartOutlinedIcon fontSize=\"small\" />,\n      children: [\n        {\n          label: \"Review Orders\",\n          link: \"/app/salesorder/review\",\n          icon: <VisibilityOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Orders History\",\n          link: \"/app/salesorder/history\",\n          icon: <HistoryOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Items Database\",\n          link: \"/app/salesorder/item\",\n          icon: <StorageOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Discount\",\n          link: \"/app/salesorder/discount\",\n          icon: <TrendingDownOutlinedIcon fontSize=\"small\" />,\n        },\n        {\n          label: \"Promotions\",\n          link: \"/app/salesorder/promotion\",\n          icon: <SpellcheckOutlinedIcon fontSize=\"small\" />,\n        },\n      ],\n    } : 5,\n  \n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n\n\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{ color: 'white' }}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div style={{ justifyContent: 'center', alignSelf: 'center', position: 'absolute', bottom: 10 }}>\n        <IconButton style={{ color: 'white', fontSize: 14, fontWeight: 'bold' }}\n          onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }}>\n          <ArrowBackIcon\n            style={{ marginRight: 5 }}\n          />\n          Log Out\n        </IconButton>\n      </div>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserViewRequest, fetchUserViewSuccess, fetchUserViewError } from \"../../redux/actions/UserViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUserView() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUserById`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        throw (res.error);\r\n                    }\r\n                    dispatch(fetchUserViewSuccess(res));\r\n                    return res;\r\n                })\r\n                .catch(error => {\r\n                    dispatch(fetchUserViewError(error));\r\n                })\r\n        }, 1000);\r\n\r\n    }\r\n}\r\n\r\nexport default fetchUserView;","import {\r\n  FETCH_USERVIEW_REQUEST,\r\n  FETCH_USERVIEW_SUCCESS,\r\n  FETCH_USERVIEW_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchUserViewRequest() {\r\n    return {\r\n        type: FETCH_USERVIEW_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserViewSuccess(userview) {\r\n    return {\r\n        type: FETCH_USERVIEW_SUCCESS,\r\n        userview: userview\r\n    }\r\n}\r\n\r\nexport function fetchUserViewError(error) {\r\n    return {\r\n        type: FETCH_USERVIEW_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { useUserState } from \"../../context/UserContext\";\n\n\nfunction UserViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUserView();\n    setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n          height: '50px'\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    },\n    onRowsDelete: (rowsDeleted) => {\n\n    },\n  };\n\n  if (userviewData.loading) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Users\" data={dataSource} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Users\"}\n              data={userviewData.userview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserViewPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchScheduleViewRequest, fetchScheduleViewSuccess, fetchScheduleViewError } from \"../../redux/actions/ScheduleViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ScheduleViewReducer from \"../../redux/reducers/ScheduleViewReducer\";\r\n\r\nfunction fetchScheduleView() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getScheduleByCompanyId`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleViewSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchScheduleView;","import {\r\n    FETCH_SCHEDULEVIEW_REQUEST,\r\n    FETCH_SCHEDULEVIEW_SUCCESS,\r\n    FETCH_SCHEDULEVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchScheduleViewRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewSuccess(scheduleview) {\r\n    console.log(\"action===>\", scheduleview)\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_SUCCESS,\r\n          scheduleview: scheduleview\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchScheduleView from \"../../services/scheduleview/ScheduleViewService\";\nimport { bindActionCreators } from \"redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction ScheduleViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleviewData = useSelector(state => state.scheduleview);\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    console.log(scheduleviewData)\n    props.fetchScheduleView();\n    setDataSource(scheduleviewData.scheduleview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}upload/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check In\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check Out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Visiting Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Late\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Present/Absent\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value != \"0000-00-00 00:00:00\" ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"signature\",\n      label: \"Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      },\n    },\n\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Schedules\"}\n              data={scheduleviewData.scheduleview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  scheduleview: state.scheduleview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchScheduleView: fetchScheduleView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleViewPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { FETCH_CLIENTVIEW_REQUEST, FETCH_CLIENTVIEW_SUCCESS, FETCH_CLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    clientview: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENTVIEW_REQUEST:\r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                clientview: action.clientview\r\n            }\r\n        case FETCH_CLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchClientViewRequest, fetchClientViewSuccess, fetchClientViewError } from \"../../redux/actions/ClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ClientViewReducer from \"../../redux/reducers/ClientViewReducer\";\r\n\r\nfunction fetchClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientViewSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClientView;","import {\r\n    FETCH_CLIENTVIEW_REQUEST,\r\n    FETCH_CLIENTVIEW_SUCCESS,\r\n    FETCH_CLIENTVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchClientViewRequest() {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewSuccess(clientview) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_SUCCESS,\r\n          clientview: clientview\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewError(error) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Button } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Status from \"../../components/Status/Status\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientViewPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientViewData = useSelector(state => state.clientview);\n\n  useEffect(() => {\n    console.log(clientViewData)\n    props.fetchClientView()\n    setDataSource(clientViewData.clientview);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"custom_field\",\n      label: \"Custom Field\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"approved\",\n      label: \"Approved\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value == 1 ? \"yes\" : \"no\"} />\n          );\n        }\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Created by\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/clientview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientViewData.clientview[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  const importCSV = (data) => {\n    console.log(data)\n\n\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        client_entity_name: row[0],\n        address: row[1],\n        phone_number: row[3],\n        location: row[2],\n        company_id: row[4],\n        custom_field: row[5],\n        approved: row[6],\n        created_by: row[7]\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addClient`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"clientview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Clients\"}\n              data={clientViewData.clientview}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientViewPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        custom_field: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: '',\r\n        companyIDList: localStorage.getItem('company_id').split(', ')\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.company);\r\n    }, [])\r\n\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    if (state.companyIDList.includes(item?.company_id.toString())) {\r\n                        tmp.push(item?.company_entity_name);\r\n                    }\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter client Custom Field.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: 1,\r\n                    created_by: localStorage.getItem('user_id')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(state => ({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                        }))\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.custom_field == null || state.custom_field == \"\") {\r\n            notify(\"Please enter client Custom Field.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length < 7) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    custom_field: state.custom_field,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id,\r\n                    approved: 1,\r\n                    created_by: localStorage.getItem('user_id')\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(state => ({\r\n                            ...state,\r\n                            id: '',\r\n                            entity_name: '',\r\n                            custom_field: \"\",\r\n                            address: \"\",\r\n                            location: '',\r\n                            phone_number: '',\r\n                        }))\r\n                        history.push(\"/app/clientview\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/clientview\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Custom Field\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../common/config';\nimport fetchCompany from \"../../services/company/CompanyService\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        custom_field: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: '',\n        company_entity_name: '',\n        companyIDList: localStorage.getItem('company_id').split(', '),\n        approved: '0',\n        created_by: ''\n    })\n\n    const update_id = props.match.params.clientview\n    useEffect(() => {\n        props.fetchCompany();\n        setDataSource(companyData.company);\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    custom_field: data.custom_field,\n                    address: data.address,\n                    company_id: data.company_id.toString(),\n                    company_entity_name: data.company_entity_name,\n                    phone_number: data.phone_number,\n                    location: data.location,\n                    approved: data.approved,\n                    created_by: data.created_by\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                custom_field: state.custom_field,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id.toString(),\n                approved: state.approved,\n                created_by: state.created_by\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', original, companyData.company)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    if (state.companyIDList.includes(item?.company_id.toString())) {\n                        tmp.push(item?.company_entity_name);\n                    }\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n        if (object[0] != null) {\n            setState({\n                ...state,\n                company_id: object[0].company_id.toString()\n            })\n        }\n\n    }\n\n    //input fields event\n    const handleChange = (e, field) => {\n        let comboFields = ['company_entity_name'];\n        if (comboFields.includes(field)) {\n            setCompanyIdfromCompanyName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else if (e.target.name == \"approved\") {\n            console.log('approved====>', e.target.checked)\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.custom_field == null || state.custom_field == \"\") {\n            notify(\"Please enter company custom field.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter company location.\")\n            return\n        } else if (state.phone_number.length < 7) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_id.length < 1) {\n            notify(\"Please enter company id.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/clientview\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Custom Field\" value={state.custom_field} handleChange={(e) => handleChange(e, 'custom_field')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Approved</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={Number(state.approved)} onChange={handleChange} name=\"approved\" />}\n                                    label=\"Approved\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { fetchSalesClientViewRequest, fetchSalesClientViewSuccess, fetchSalesClientViewError } from \"../../redux/actions/SalesClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientViewSuccess(res));\r\n                console.log(\"Get SalesClientView===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClientView;","import {\r\n    FETCH_SALESCLIENTVIEW_REQUEST,\r\n    FETCH_SALESCLIENTVIEW_SUCCESS,\r\n    FETCH_SALESCLIENTVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesClientViewRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewSuccess(salesview) {\r\n    console.log(\"action===>\", salesview)\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_SUCCESS,\r\n          salesview: salesview\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    props.fetchSalesClientView()\n    setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n  }\n\n  const addWithCSV = (data) => {\n    for (let i = 1; i < data.length - 1; i++) {\n      const row = data[i];\n      let saveData = {\n        user_id: row[0],\n        client_id: row[1],\n      }\n      const reqOption = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(saveData)\n      }\n      fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n        .then(async response => {\n          const data = await response.json();\n          console.log(\"Response Data=============>\", data)\n          // check for error response\n          if (!response.ok) {\n            const error = (data && data.message) || response.status;\n            return Promise.reject(error);\n          } else if (data.client_id != null) {\n            notify(\"This client is already exist.\")\n            return\n          } else if (data.id != 0) {\n\n            notify(\"Successfully appended\");\n          }\n        })\n        .catch(error => {\n          notify('Something went wrong!\\n' + error)\n          console.error('There was an error!', error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"salesview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Sales Clients\"}\n              // data={dataSource}\n              data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesViewPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.userview);\n    const clientData = useSelector(state => state.clientview);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.salesview\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: ''\n    })\n\n    useEffect(() => {\n        props.fetchClientView()\n        props.fetchUserView();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.clientview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const clients = getClientNameList(clientData.clientview)\n\n    console.log(\"Client Data =====> \", clients.map(item => {\n        return item?.value\n    }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.userview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.userview)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesview\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    const clientList = clients.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUserView: fetchUserView,\n    fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\r\nimport fetchUserView from \"../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const userData = useSelector(state => state.userview);\r\n    const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: '',\r\n        userIDList: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchClientView()\r\n        props.fetchUserView();\r\n    }, [])\r\n\r\n    const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const getClientNameList = (original) => {\r\n        console.log('originall ====> ', original, clientData.clientview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const clients = getClientNameList(clientData.clientview)\r\n\r\n    console.log(\"Client Data =====> \", clients.map(item => {\r\n        return item?.value\r\n    }))\r\n\r\n    const getUserNameList = (original) => {\r\n        console.log('originall ====> ', original, userData.userview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const users = getUserNameList(userData.userview)\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n\r\n        setUserList(event.target.value)\r\n        const options = event.target.value;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            value.push(getUserIDbyUserName(options[i]))\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            userIDList: value\r\n        }))\r\n    };\r\n\r\n    const getUserIDbyUserName = (user_name) => {\r\n        console.log(\"state.user===>\", users)\r\n        let object = userData.userview.filter(item => item.full_name == user_name)\r\n        if (object[0] != null) {\r\n            return object[0].user_id\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(()=>({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                        }))\r\n                        \r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(()=>({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                        }))\r\n                        history.push(\"/app/salesview\");\r\n                        \r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesview\");\r\n    }\r\n\r\n    const clientList = clients.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\r\n                                    handleChange={(e) => handleChange(e, 'client_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-mutiple-checkbox-label\">Users</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-mutiple-checkbox-label\"\r\n                                        id=\"demo-mutiple-checkbox\"\r\n                                        multiple\r\n                                        value={userList}\r\n                                        onChange={handleNameChange}\r\n                                        input={<Input />}\r\n                                        renderValue={(selected) => selected.join(', ')}\r\n                                        MenuProps={MenuProps}\r\n                                    >\r\n                                        {users.map((name) => (\r\n                                            <MenuItem key={name.value} value={name.value}>\r\n                                                <Checkbox checked={userList.indexOf(name.value) > -1} />\r\n                                                <ListItemText primary={name.value} />\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../../services/users/UserViewService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport moment from 'moment'\nimport { SERVER_URL } from '../../../common/config';\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\n\nfunction ScheduleReportPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n  const [report, setReport] = useState([])\n  const curDate = new Date()\n  const [state, setState] = useState({\n\n    start_date: new Date(curDate.getFullYear(), curDate.getMonth(), 1),\n    end_date: new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0),\n\n  })\n  useEffect(() => {\n    props.fetchUserView();\n    // setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n\n  }, [])\n\n  useEffect(() => {\n    if (!props.userview.loading && props.userview.userview.length > 0) {\n      setDataSource(userviewData.userview.userview);     // from backend(redux)\n      let start_date = moment(firstDay).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let end_date = moment(lastDay).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      console.log(moment(firstDay).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\"), moment(lastDay).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\"))\n\n      getReportData(start_date, end_date, props.userview.userview)\n    }\n  }, [props.userview]);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n          height: '50px'\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"full_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_number\",\n      label: \"No of Schedules\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"success\",\n      label: \"Success\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"percentage\",\n      label: \"Success Percentage (%)\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"new_client\",\n      label: \"New Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    },\n    onRowsDelete: (rowsDeleted) => {\n\n    },\n  };\n\n  var reportData = []\n  const getReportData = async (start_date, end_date, userviewData0) => {\n    reportData = []\n    console.log('userviewData0 ========== ', userviewData0)\n    for (let item of userviewData0) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          user_id: item.user_id,\n          start_date: start_date,\n          end_date: end_date\n        })\n      };\n      try {\n        let response = await fetch(`${SERVER_URL}getReport`, requestOptions);\n        const data = await response.json();\n        reportData.push({\n          full_name: item.full_name,\n          schedule_number: data.schedule_number,\n          success: data.success,\n          new_client: data.new_client,\n          percentage: data.percentage\n        })\n      } catch (err) {\n      }\n    }\n    console.log('################### ', reportData)\n    setReport(reportData)\n  }\n\n  console.log('***&&&&&&&&&&&&&& ', props.userview.userview)\n\n  console.log('state ^^^^^^^^^^^ ', report)\n\n  if (props.userview.loading) {\n    return (\n      <div>Loading...</div>\n    )\n  } else {\n    var date = new Date();\n\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  }\n\n  const handleDateChange = (date, field) => {\n    setState(prevState => ({\n      ...prevState, [field]: date\n    }))\n    if (field == 'start_date') {\n      let s_date = moment(date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(state.end_date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      getReportData(s_date, e_date, props.userview.userview)\n    } else if (field == 'end_date') {\n      let s_date = moment(state.start_date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      getReportData(s_date, e_date, props.userview.userview)\n    }\n\n  };\n\n  return (\n    <>\n\n      <PageTitle title=\"Schedules Report\" data={dataSource} />\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n          <CustomDatePicker title=\"Start Date\" selectedDate={state.start_date} handleChange={(e) => handleDateChange(e, 'start_date')} />\n        </Grid>\n        <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n          <CustomDatePicker title=\"End Date\" selectedDate={state.end_date} handleChange={(e) => handleDateChange(e, 'end_date')} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Schedules Report\"}\n              data={report}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleReportPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../../services/users/UserViewService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport moment from 'moment'\nimport { SERVER_URL } from '../../../common/config';\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\n\nfunction SalesOrderReportPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n  const [report, setReport] = useState([])\n  const curDate = new Date()\n  const [state, setState] = useState({\n\n    start_date: new Date(curDate.getFullYear(), curDate.getMonth(), 1),\n    end_date: new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0),\n\n  })\n  useEffect(() => {\n    props.fetchUserView();\n    // setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n\n  }, [])\n\n  useEffect(() => {\n    if (!props.userview.loading && props.userview.userview.length > 0) {\n      setDataSource(userviewData.userview.userview);     // from backend(redux)\n      let start_date = moment(firstDay).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let end_date = moment(lastDay).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      console.log(moment(firstDay).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\"), moment(lastDay).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\"))\n\n      getReportData(start_date, end_date, props.userview.userview)\n    }\n  }, [props.userview]);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n          height: '50px'\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"full_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_number\",\n      label: \"No of Schedules\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"success\",\n      label: \"Success\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"percentage\",\n      label: \"Success Percentage (%)\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"new_client\",\n      label: \"New Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    },\n    onRowsDelete: (rowsDeleted) => {\n\n    },\n  };\n\n  var reportData = []\n  const getReportData = async (start_date, end_date, userviewData0) => {\n    reportData = []\n    console.log('userviewData0 ========== ', userviewData0)\n    for (let item of userviewData0) {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          user_id: item.user_id,\n          start_date: start_date,\n          end_date: end_date\n        })\n      };\n      try {\n        let response = await fetch(`${SERVER_URL}getReport`, requestOptions);\n        const data = await response.json();\n        reportData.push({\n          full_name: item.full_name,\n          schedule_number: data.schedule_number,\n          success: data.success,\n          new_client: data.new_client,\n          percentage: data.percentage\n        })\n      } catch (err) {\n      }\n    }\n    console.log('################### ', reportData)\n    setReport(reportData)\n  }\n\n  console.log('***&&&&&&&&&&&&&& ', props.userview.userview)\n\n  console.log('state ^^^^^^^^^^^ ', report)\n\n  if (props.userview.loading) {\n    return (\n      <div>Loading...</div>\n    )\n  } else {\n    var date = new Date();\n\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  }\n\n  const handleDateChange = (date, field) => {\n    setState(prevState => ({\n      ...prevState, [field]: date\n    }))\n    if (field == 'start_date') {\n      let s_date = moment(date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(state.end_date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      getReportData(s_date, e_date, props.userview.userview)\n    } else if (field == 'end_date') {\n      let s_date = moment(state.start_date).startOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n      let e_date = moment(date).endOf('day').format(\"YYYY-MM-DD HH:mm:ss\")\n\n      getReportData(s_date, e_date, props.userview.userview)\n    }\n\n  };\n\n  return (\n    <>\n\n      <PageTitle title=\"Sales Order Report\" data={dataSource} />\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n          <CustomDatePicker title=\"Start Date\" selectedDate={state.start_date} handleChange={(e) => handleDateChange(e, 'start_date')} />\n        </Grid>\n        <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n          <CustomDatePicker title=\"End Date\" selectedDate={state.end_date} handleChange={(e) => handleDateChange(e, 'end_date')} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Sales Order Report\"}\n              data={report}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesOrderReportPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nexport default function Status3({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {\n        [classes.draft]: props.status === 'reject',\n        [classes.paid]: props.status === 'accept',\n        [classes.pending]: props.status === 'pending'\n      }\n      )}\n    >\n      {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nexport default function Status2({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {[classes.draft]: props.status === 'in',[classes.paid]: props.status === 'out'}, )}\n    >\n        {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip, Menu, MenuItem} from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// import fetchReview from \"../../services/Review/ReviewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\nimport Status3 from \"../../components/Status/Status3\";\nimport Status2 from \"../../components/Status/Status2\";\n\nfunction ReviewPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([\n    {\n      order_id: 1,\n      full_name: \"User1\",\n      client_entity_name: 'Client1',\n      order_items: 'Item1, Item2',\n      promotions: 'Promotion1',\n      tax: 10,\n      shipping_cost: 20,\n      net_total: 30,\n      order_date: '2021-01-25 01:20:35',\n      notes: 'Note1',\n      client_signature: 'Client_Signature1.png',\n      user_signature: 'User_Signature1.png',\n      upload_picture: 'Upload_Picture1.png',\n      custom_field: 'Custom Field',\n      location: '-35.2654 122.3659',\n      status: 0,\n      order_method: 'in',\n    },\n    {\n      order_id: 2,\n      full_name: \"User2\",\n      client_entity_name: 'Client2',\n      order_items: 'Item1, Item4',\n      promotions: 'Promotion2',\n      tax: 10,\n      shipping_cost: 20,\n      net_total: 30,\n      order_date: '2021-01-25 01:20:35',\n      notes: 'Note2',\n      client_signature: 'Client_Signature1.png',\n      user_signature: 'User_Signature1.png',\n      upload_picture: 'Upload_Picture1.png',\n      custom_field: 'Custom Field',\n      location: '-35.2654 122.3659',\n      status: 0,\n      order_method: 'out',\n    }\n  ]);\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  // const ReviewData = useSelector(state => state.review);\n\n  useEffect(() => {\n    // console.log(ReviewData)\n    // props.fetchReview()\n    // setDataSource(ReviewData.Review);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  const columns = [\n    {\n      name: \"order_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"order_items\",\n      label: \"Items\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"promotions\",\n      label: \"Promotion\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"tax\",\n      label: \"Tax\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"shipping_cost\",\n      label: \"Shipping Cost\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"net_total\",\n      label: \"Total\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"order_date\",\n      label: \"Due Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_signature\",\n      label: \"Client Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      }\n    },\n    {\n      name: \"user_signature\",\n      label: \"User Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      }\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Uploaded Picture\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}upload/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      }\n    },\n    {\n      name: \"custom_field\",\n      label: \"Custom Field\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status3 status={\n              value == 0 ? 'pending' : (value = 1 ? 'accept' : 'reject')\n            } />\n          );\n        }\n      }\n    },\n    {\n      name: \"order_method\",\n      label: \"Order Method\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status2 status={\n              value\n            } />\n          );\n        }\n      }\n    },\n    {\n      name: \"order_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              <Tooltip title=\"Action\">\n                <IconButton\n                  onClick={(e) => {\n                    actionClick(e, value)\n                  }}\n                >\n                  <MoreHorizIcon />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                id=\"accept\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={actionClose}\n              >\n                <MenuItem onClick={() => actionEdit(value, 1)}>Accept</MenuItem>\n                <MenuItem onClick={() => actionEdit(value, -1)}>Reject</MenuItem>\n              </Menu>\n            </>\n          );\n        }\n      },\n    },\n  ];\n  const actionClick = (event, i) => {\n    setSelectedRowIndex(i);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const actionEdit = (value, state) => {\n    if(state == 1) {\n      // Set Accept\n    } else {\n      // Set Reject\n    }\n  }\n  \n  const actionClose = () => {\n    setAnchorEl(null);\n  };\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      // rowsDeleted.data.map((data) => {\n      //   const newDeleteId = ReviewData.Review[data.dataIndex].client_id\n      //   delete_id.push(newDeleteId)\n      // })\n      // console.log(\"deleting Ids===> \", delete_id)\n      // delete_id.map((id) => {\n      //   // row delete api call\n      //   const requestOptions = {\n      //     method: 'POST',\n      //     headers: { 'Content-Type': 'application/json' },\n      //     body: JSON.stringify({\n      //       client_id: id\n      //     })\n      //   };\n      //   fetch(`${SERVER_URL}deleteClient`, requestOptions)\n      //     .then(async response => {\n      //       const data = await response.json();\n      //       console.log(\"Response Data=============>\", data)\n      //       // check for error response\n      //       if (!response.ok) {\n      //         // get error message from body or default to response status\n      //         const error = (data && data.message) || response.status;\n      //         return Promise.reject(error);\n      //       }\n      //       return\n      //     })\n      //     .catch(error => {\n      //       notify('Something went wrong!\\n' + error)\n      //       console.error('There was an error!', error);\n      //     });\n      // })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Review Orders\" data={dataSource} category=\"review\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Review Orders\"}\n              // data={ReviewData.Review}\n              data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // Review: state.Review\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchReview: fetchReview\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReviewPage);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip, Menu, MenuItem} from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// import fetchHistory from \"../../services/History/HistoryService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\nimport Status3 from \"../../components/Status/Status3\";\nimport Status2 from \"../../components/Status/Status2\";\n\nfunction HistoryPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([\n    {\n      order_id: 1,\n      full_name: \"User1\",\n      client_entity_name: 'Client1',\n      order_items: 'Item1, Item2',\n      promotions: 'Promotion1',\n      tax: 10,\n      shipping_cost: 20,\n      net_total: 30,\n      order_date: '2021-01-25 01:20:35',\n      notes: 'Note1',\n      client_signature: 'Client_Signature1.png',\n      user_signature: 'User_Signature1.png',\n      upload_picture: 'Upload_Picture1.png',\n      custom_field: 'Custom Field',\n      location: '-35.2654 122.3659',\n      status: 1,\n      order_method: 'in',\n    },\n    {\n      order_id: 2,\n      full_name: \"User2\",\n      client_entity_name: 'Client2',\n      order_items: 'Item1, Item4',\n      promotions: 'Promotion2',\n      tax: 10,\n      shipping_cost: 20,\n      net_total: 30,\n      order_date: '2021-01-25 01:20:35',\n      notes: 'Note2',\n      client_signature: 'Client_Signature1.png',\n      user_signature: 'User_Signature1.png',\n      upload_picture: 'Upload_Picture1.png',\n      custom_field: 'Custom Field',\n      location: '-35.2654 122.3659',\n      status: -1,\n      order_method: 'out',\n    }\n  ]);\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  // const HistoryData = useSelector(state => state.History);\n\n  useEffect(() => {\n    // console.log(HistoryData)\n    // props.fetchHistory()\n    // setDataSource(HistoryData.History);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  const columns = [\n    {\n      name: \"order_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"order_items\",\n      label: \"Items\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"promotions\",\n      label: \"Promotion\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"tax\",\n      label: \"Tax\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"shipping_cost\",\n      label: \"Shipping Cost\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"net_total\",\n      label: \"Total\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"order_date\",\n      label: \"Due Date\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_signature\",\n      label: \"Client Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      }\n    },\n    {\n      name: \"user_signature\",\n      label: \"User Signature\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}signature/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      }\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Uploaded Picture\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          console.log(value)\n          return (\n            <a href={`${SERVER_URL}upload/${value}`} target=\"_blank\"> {value} </a>\n          );\n        }\n      }\n    },\n    {\n      name: \"custom_field\",\n      label: \"Custom Field\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status3 status={\n              value == 0 ? 'pending' : (value == 1 ? 'accept' : 'reject')\n            } />\n          );\n        }\n      }\n    },\n    {\n      name: \"order_method\",\n      label: \"Order Method\",\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status2 status={\n              value\n            } />\n          );\n        }\n      }\n    },\n  ];\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      // rowsDeleted.data.map((data) => {\n      //   const newDeleteId = HistoryData.History[data.dataIndex].client_id\n      //   delete_id.push(newDeleteId)\n      // })\n      // console.log(\"deleting Ids===> \", delete_id)\n      // delete_id.map((id) => {\n      //   // row delete api call\n      //   const requestOptions = {\n      //     method: 'POST',\n      //     headers: { 'Content-Type': 'application/json' },\n      //     body: JSON.stringify({\n      //       client_id: id\n      //     })\n      //   };\n      //   fetch(`${SERVER_URL}deleteClient`, requestOptions)\n      //     .then(async response => {\n      //       const data = await response.json();\n      //       console.log(\"Response Data=============>\", data)\n      //       // check for error response\n      //       if (!response.ok) {\n      //         // get error message from body or default to response status\n      //         const error = (data && data.message) || response.status;\n      //         return Promise.reject(error);\n      //       }\n      //       return\n      //     })\n      //     .catch(error => {\n      //       notify('Something went wrong!\\n' + error)\n      //       console.error('There was an error!', error);\n      //     });\n      // })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Orders to History\" data={dataSource} category=\"history\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Orders to History\"}\n              // data={HistoryData.History}\n              data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // History: state.History\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchHistory: fetchHistory\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HistoryPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction ItemPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([\n    {\n      item_id: 1,\n      item_name: 'Item Name1',\n      company_entity_name: 'CompanyA',\n      unit_price: 10,\n      unit: 900,\n    },\n    {\n      item_id: 2,\n      item_name: 'Item Name2',\n      company_entity_name: 'CompanyB',\n      unit_price: 21,\n      unit: 98745,\n    }\n\n  ]);\n  // const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    // props.fetchSalesClientView()\n    // setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"item_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"item_name\",\n      label: \"Item Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"unit_price\",\n      label: \"Unit Price\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"unit\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"item_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesorder/item/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    // onRowsDelete: (rowsDeleted) => {\n\n    //   const delete_id = []\n    //   rowsDeleted.data.map((data) => {\n    //     const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n    //     delete_id.push(newDeleteId)\n    //   })\n    //   console.log(\"deleting Ids===> \", delete_id)\n    //   delete_id.map((id) => {\n    //     // row delete api call\n    //     const requestOptions = {\n    //       method: 'POST',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({\n    //         sales_client_id: id\n    //       })\n    //     };\n    //     fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n    //       .then(async response => {\n    //         const data = await response.json();\n    //         console.log(\"Response Data=============>\", data)\n    //         // check for error response\n    //         if (!response.ok) {\n    //           // get error message from body or default to response status\n    //           const error = (data && data.message) || response.status;\n    //           return Promise.reject(error);\n    //         }\n    //         return\n    //       })\n    //       .catch(error => {\n    //         notify('Something went wrong!\\n' + error)\n    //         console.error('There was an error!', error);\n    //       });\n    //   })\n    // },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n  }\n\n  const addWithCSV = (data) => {\n    // for (let i = 1; i < data.length - 1; i++) {\n    //   const row = data[i];\n    //   let saveData = {\n    //     user_id: row[0],\n    //     client_id: row[1],\n    //   }\n    //   const reqOption = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(saveData)\n    //   }\n    //   fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n    //     .then(async response => {\n    //       const data = await response.json();\n    //       console.log(\"Response Data=============>\", data)\n    //       // check for error response\n    //       if (!response.ok) {\n    //         const error = (data && data.message) || response.status;\n    //         return Promise.reject(error);\n    //       } else if (data.client_id != null) {\n    //         notify(\"This client is already exist.\")\n    //         return\n    //       } else if (data.id != 0) {\n\n    //         notify(\"Successfully appended\");\n    //       }\n    //     })\n    //     .catch(error => {\n    //       notify('Something went wrong!\\n' + error)\n    //       console.error('There was an error!', error);\n    //     });\n    // }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Items Database\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_item\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Items Database\"}\n              data={dataSource}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemPage);\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\r\n// import fetchUserView from \"../../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddItemPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    // const userData = useSelector(state => state.userview);\r\n    const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        item_name: \"\",\r\n        client_id: '',\r\n        unit_price: '',\r\n        unit: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchClientView()\r\n        // props.fetchUserView();\r\n    }, [])\r\n\r\n    // const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const getClientNameList = (original) => {\r\n        console.log('originall ====> ', original, clientData.clientview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const clients = getClientNameList(clientData.clientview)\r\n\r\n    console.log(\"Client Data =====> \", clients.map(item => {\r\n        return item?.value\r\n    }))\r\n\r\n    // const getUserNameList = (original) => {\r\n    //     console.log('originall ====> ', original, userData.userview)\r\n    //     let tmp = [];\r\n    //     if (Boolean(original)) {\r\n    //         if (original.length) {\r\n    //             original.map(item => {\r\n    //                 let optionData = {\r\n    //                     key: item?.user_id,\r\n    //                     value: item?.full_name\r\n    //                 }\r\n    //                 tmp.push(optionData);\r\n    //             })\r\n    //             return tmp;\r\n    //         }\r\n    //         return [];\r\n    //     } else {\r\n    //         return []\r\n    //     }\r\n    // }\r\n\r\n    // const users = getUserNameList(userData.userview)\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [field]: e.target.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    // const handleNameChange = (event) => {\r\n\r\n    //     setUserList(event.target.value)\r\n    //     const options = event.target.value;\r\n    //     const value = [];\r\n    //     for (let i = 0, l = options.length; i < l; i += 1) {\r\n    //         value.push(getUserIDbyUserName(options[i]))\r\n    //     }\r\n    //     setState(prevState => ({\r\n    //         ...prevState,\r\n    //         userIDList: value\r\n    //     }))\r\n    // };\r\n\r\n    // const getUserIDbyUserName = (user_name) => {\r\n    //     console.log(\"state.user===>\", users)\r\n    //     let object = userData.userview.filter(item => item.full_name == user_name)\r\n    //     if (object[0] != null) {\r\n    //         return object[0].user_id\r\n    //     }\r\n\r\n    // }\r\n\r\n    const onSaveandNew = () => {\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    // user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                        }))\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    // user_id: state.userIDList,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                        setState(() => ({\r\n                            client_name: '',\r\n                            user_name: \"\",\r\n                            client_id: '',\r\n                            user_id: '',\r\n                        }))\r\n                        history.push(\"/app/salesview\");\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/item\");\r\n    }\r\n\r\n    const clientList = clients.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Item\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Name\" value={state.item_name}\r\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\r\n                                    handleChange={(e) => handleChange(e, 'client_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Unit Price\" value={state.unit_price}\r\n                                    handleChange={(e) => handleChange(e, 'unit_price')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Unit\" value={state.unit}\r\n                                    handleChange={(e) => handleChange(e, 'unit')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    // fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddItemPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\n// import fetchClientView from \"../../../services/clientview/ClientViewService\";\n// import fetchUserView from \"../../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditItemPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    // const userData = useSelector(state => state.userview);\n    // const clientData = useSelector(state => state.clientview);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.item\n    const [state, setState] = useState({\n        item_id: update_id,\n        item_name: 'Item Name1',\n        company: 'CompanyA',\n        unit_price: 10,\n        unit: 900\n    })\n\n    useEffect(() => {\n        // props.fetchClientView()\n        // props.fetchUserView();\n        // getSalesClientInfo(update_id)\n    }, [])\n\n    const handleChange = (e, field) => {\n        e.persist();\n        setState(prevState => ({\n            ...prevState, [field]: e.target\n        }))\n    }\n\n    // const getSalesClientInfo = (sales_client_id) => {\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify({\n    //             sales_client_id: sales_client_id\n    //         })\n    //     };\n    //     fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n    //         .then(async response => {\n    //             const data = await response.json();\n    //             // check for error response\n    //             if (!response.ok) {\n    //                 // get error message from body or default to response status\n    //                 const error = (data && data.message) || response.status;\n    //                 return Promise.reject(error);\n    //             }\n    //             setState(() => ({\n    //                 ...state,\n    //                 client_name: data.client_entity_name,\n    //                 user_name: data.full_name,\n    //                 client_id: data.client_id.toString(),\n    //                 user_id: data.user_id.toString()\n    //             }))\n    //         })\n    //         .catch(error => {\n    //             console.error('There was an error!', error);\n    //         });\n    // }\n\n    // const getClientNameList = (original) => {\n    //     console.log('originall ====> ', original, clientData.clientview)\n    //     let tmp = [];\n    //     if (Boolean(original)) {\n    //         if (original.length) {\n    //             original.map(item => {\n    //                 let optionData = {\n    //                     key: item?.client_id,\n    //                     value: item?.client_entity_name\n    //                 }\n    //                 tmp.push(optionData);\n    //             })\n    //             return tmp;\n    //         }\n    //         return [];\n    //     } else {\n    //         return []\n    //     }\n    // }\n\n    // const clients = getClientNameList(clientData.clientview)\n\n    // console.log(\"Client Data =====> \", clients.map(item => {\n    //     return item?.value\n    // }))\n\n    // const getUserNameList = (original) => {\n    //     console.log('originall ====> ', original, userData.userview)\n    //     let tmp = [];\n    //     if (Boolean(original)) {\n    //         if (original.length) {\n    //             original.map(item => {\n    //                 let optionData = {\n    //                     key: item?.user_id,\n    //                     value: item?.full_name\n    //                 }\n    //                 tmp.push(optionData);\n    //             })\n    //             return tmp;\n    //         }\n    //         return [];\n    //     } else {\n    //         return []\n    //     }\n    // }\n\n    // const users = getUserNameList(userData.userview)\n\n    //input fields event\n    // const handleUserChange = (e, field) => {\n\n    //     if (field == \"user_name\") {\n    //         if (users.filter(item => item.value == e)[0] != null) {\n    //             setState({\n    //                 ...state,\n    //                 user_name: e,\n    //                 user_id: users.filter(item => item.value == e)[0].key\n    //             })\n    //         }\n\n    //     }\n    // }\n\n    // const handleClientChange = (e, field) => {\n\n    //     if (field == \"client_name\") {\n    //         if (clients.filter(item => item.value == e)[0] != null) {\n    //             setState({\n    //                 ...state,\n    //                 client_name: e,\n    //                 client_id: clients.filter(item => item.value == e)[0].key\n    //             })\n    //         }\n\n    //     }\n    // }\n\n    const onSave = () => {\n        // if (state.user_name == null || state.user_name == \"\") {\n        //     notify(\"Please enter company user name.\")\n        //     return\n        // } else if (state.client_name == null || state.client_name == \"\") {\n        //     notify(\"Please enter client name.\")\n        //     return\n        // } else {\n        //     const requestOptions = {\n        //         method: 'POST',\n        //         headers: { 'Content-Type': 'application/json' },\n        //         body: JSON.stringify({\n        //             sales_client_id: update_id,\n        //             client_id: state.client_id,\n        //             user_id: state.user_id,\n        //         })\n        //     };\n        //     console.log(\"===============> \", requestOptions.body)\n        //     fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n        //         .then(async response => {\n        //             const data = await response.json();\n        //             console.log(\"Response Data=============>\", data)\n        //             // check for error response\n        //             if (!response.ok) {\n        //                 // get error message from body or default to response status\n        //                 const error = (data && data.message) || response.status;\n        //                 return Promise.reject(error);\n        //             } else if (data.sales_client_id != null) {\n        //                 notify(\"This client is already exist.\")\n        //                 return\n        //             } else if (data.id != 0) {\n\n        //                 handleNotificationCall(\"shipped\");\n        //             }\n\n        //         })\n        //         .catch(error => {\n        //             notify('Something went wrong!\\n' + error)\n        //             console.error('There was an error!', error);\n        //         });\n        // }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/item\");\n    }\n\n\n    // const userList = users.map(item => {\n    //     return item?.value\n    // })\n\n    // const clientList = clients.map(item => {\n    //     return item?.value\n    // })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Item\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Item Name\" value={state.item_name}\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Company\" value={state.company} handleChange={(e) => handleChange(e, 'company')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Unit Price\" value={state.unit_price}\n                                    handleChange={(e) => handleChange(e, 'unit_price')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Unit\" value={state.unit} handleChange={(e) => handleChange(e, 'unit')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    // fetchUserView: fetchUserView,\n    // fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditItemPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction DiscountPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([\n    {\n      discount_id: 1,\n      item_name: 'Item Name1',\n      min_quantity: 50,\n      max_quantity: 100,\n      unit: 5\n    },\n    {\n      discount_id: 1,\n      item_name: 'Item Name1',\n      min_quantity: 101,\n      max_quantity: 200,\n      unit: 15\n    }\n\n  ]);\n  // const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    // props.fetchSalesClientView()\n    // setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"discount_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"item_name\",\n      label: \"Item Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"min_quantity\",\n      label: \"Min Quantity\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"max_quantity\",\n      label: \"Max Quantity\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"unit\",\n      label: \"Unit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"discount_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesorder/discount/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    // onRowsDelete: (rowsDeleted) => {\n\n    //   const delete_id = []\n    //   rowsDeleted.data.map((data) => {\n    //     const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n    //     delete_id.push(newDeleteId)\n    //   })\n    //   console.log(\"deleting Ids===> \", delete_id)\n    //   delete_id.map((id) => {\n    //     // row delete api call\n    //     const requestOptions = {\n    //       method: 'POST',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({\n    //         sales_client_id: id\n    //       })\n    //     };\n    //     fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n    //       .then(async response => {\n    //         const data = await response.json();\n    //         console.log(\"Response Data=============>\", data)\n    //         // check for error response\n    //         if (!response.ok) {\n    //           // get error message from body or default to response status\n    //           const error = (data && data.message) || response.status;\n    //           return Promise.reject(error);\n    //         }\n    //         return\n    //       })\n    //       .catch(error => {\n    //         notify('Something went wrong!\\n' + error)\n    //         console.error('There was an error!', error);\n    //       });\n    //   })\n    // },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n  }\n\n  const addWithCSV = (data) => {\n    // for (let i = 1; i < data.length - 1; i++) {\n    //   const row = data[i];\n    //   let saveData = {\n    //     user_id: row[0],\n    //     client_id: row[1],\n    //   }\n    //   const reqOption = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(saveData)\n    //   }\n    //   fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n    //     .then(async response => {\n    //       const data = await response.json();\n    //       console.log(\"Response Data=============>\", data)\n    //       // check for error response\n    //       if (!response.ok) {\n    //         const error = (data && data.message) || response.status;\n    //         return Promise.reject(error);\n    //       } else if (data.client_id != null) {\n    //         notify(\"This client is already exist.\")\n    //         return\n    //       } else if (data.id != 0) {\n\n    //         notify(\"Successfully appended\");\n    //       }\n    //     })\n    //     .catch(error => {\n    //       notify('Something went wrong!\\n' + error)\n    //       console.error('There was an error!', error);\n    //     });\n    // }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Discount\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_discount\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Discount\"}\n              data={dataSource}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscountPage);\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\r\n// import fetchUserView from \"../../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddDiscountPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    // const userData = useSelector(state => state.userview);\r\n    // const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        item_name: '',\r\n        itemList: [],\r\n        min_quantity: '',\r\n        max_quantity: '',\r\n        amount: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        // props.fetchClientView()\r\n        // props.fetchUserView();\r\n    }, [])\r\n\r\n    // const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        setState({\r\n            ...state,\r\n            [field]: e.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    const onSaveandNew = () => {\r\n        // if (state.item_name == null || state.item_name == \"\") {\r\n        //     notify(\"Please enter item name.\")\r\n        //     return\r\n        // } else {\r\n        //     const requestOptions = {\r\n        //         method: 'POST',\r\n        //         headers: { 'Content-Type': 'application/json' },\r\n        //         body: JSON.stringify({\r\n        //             client_id: state.client_id,\r\n        //             // user_id: state.userIDList,\r\n        //         })\r\n        //     };\r\n        //     fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n        //         .then(async response => {\r\n        //             const data = await response.json();\r\n        //             console.log(\"Response Data=============>\", data)\r\n        //             // check for error response\r\n        //             if (!response.ok) {\r\n        //                 // get error message from body or default to response status\r\n        //                 const error = (data && data.message) || response.status;\r\n        //                 return Promise.reject(error);\r\n        //             } else if (data.sales_client_id != null) {\r\n        //                 notify(\"This client is already exist.\")\r\n        //                 return\r\n        //             } else if (data.id != 0) {\r\n\r\n        //                 handleNotificationCall(\"shipped\");\r\n        //                 setState(() => ({\r\n        //                     client_name: '',\r\n        //                     user_name: \"\",\r\n        //                     client_id: '',\r\n        //                     user_id: '',\r\n        //                 }))\r\n\r\n        //             }\r\n\r\n        //         })\r\n        //         .catch(error => {\r\n        //             notify('Something went wrong!\\n' + error)\r\n        //             console.error('There was an error!', error);\r\n        //         });\r\n        // }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        // if (state.item_name == null || state.item_name == \"\") {\r\n        //     notify(\"Please enter client name.\")\r\n        //     return\r\n        // } else {\r\n        //     const requestOptions = {\r\n        //         method: 'POST',\r\n        //         headers: { 'Content-Type': 'application/json' },\r\n        //         body: JSON.stringify({\r\n        //             client_id: state.client_id,\r\n        //             // user_id: state.userIDList,\r\n        //         })\r\n        //     };\r\n        //     fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n        //         .then(async response => {\r\n        //             const data = await response.json();\r\n        //             console.log(\"Response Data=============>\", data)\r\n        //             // check for error response\r\n        //             if (!response.ok) {\r\n        //                 // get error message from body or default to response status\r\n        //                 const error = (data && data.message) || response.status;\r\n        //                 return Promise.reject(error);\r\n        //             } else if (data.sales_client_id != null) {\r\n        //                 notify(\"This client is already exist.\")\r\n        //                 return\r\n        //             } else if (data.id != 0) {\r\n\r\n        //                 handleNotificationCall(\"shipped\");\r\n        //                 setState(() => ({\r\n        //                     client_name: '',\r\n        //                     user_name: \"\",\r\n        //                     client_id: '',\r\n        //                     user_id: '',\r\n        //                 }))\r\n        //                 history.push(\"/app/salesview\");\r\n\r\n        //             }\r\n\r\n        //         })\r\n        //         .catch(error => {\r\n        //             notify('Something went wrong!\\n' + error)\r\n        //             console.error('There was an error!', error);\r\n        //         });\r\n        // }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/discount\");\r\n    }\r\n\r\n    // const clientList = clients.map(item => {\r\n    //     return item?.value\r\n    // })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Item Discount\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Name\" value={state.item_name}\r\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Amount\" value={state.amount}\r\n                                    handleChange={(e) => handleChange(e, 'amount')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Min Quantity\" value={state.min_quantity}\r\n                                    handleChange={(e) => handleChange(e, 'min_quantity')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Max Quantity\" value={state.max_quantity}\r\n                                    handleChange={(e) => handleChange(e, 'max_quantity')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    // fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddDiscountPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\n// import fetchClientView from \"../../../services/clientview/ClientViewService\";\n// import fetchUserView from \"../../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditDiscountPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    // const userData = useSelector(state => state.userview);\n    // const clientData = useSelector(state => state.clientview);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.discount\n    const [state, setState] = useState({\n        discount_id: update_id,\n        item_name: 'Item Name1',\n        min_quantity: 50,\n        max_quantity: 100,\n        unit: 5\n    })\n\n    useEffect(() => {\n        // props.fetchClientView()\n        // props.fetchUserView();\n        // getSalesClientInfo(update_id)\n    }, [])\n\n    const handleChange = (e, field) => {\n        e.persist();\n        setState(prevState => ({\n            ...prevState, [field]: e.target.value\n        }))\n    }\n\n    // const getSalesClientInfo = (sales_client_id) => {\n    //     const requestOptions = {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' },\n    //         body: JSON.stringify({\n    //             sales_client_id: sales_client_id\n    //         })\n    //     };\n    //     fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n    //         .then(async response => {\n    //             const data = await response.json();\n    //             // check for error response\n    //             if (!response.ok) {\n    //                 // get error message from body or default to response status\n    //                 const error = (data && data.message) || response.status;\n    //                 return Promise.reject(error);\n    //             }\n    //             setState(() => ({\n    //                 ...state,\n    //                 client_name: data.client_entity_name,\n    //                 user_name: data.full_name,\n    //                 client_id: data.client_id.toString(),\n    //                 user_id: data.user_id.toString()\n    //             }))\n    //         })\n    //         .catch(error => {\n    //             console.error('There was an error!', error);\n    //         });\n    // }\n\n    // const getClientNameList = (original) => {\n    //     console.log('originall ====> ', original, clientData.clientview)\n    //     let tmp = [];\n    //     if (Boolean(original)) {\n    //         if (original.length) {\n    //             original.map(item => {\n    //                 let optionData = {\n    //                     key: item?.client_id,\n    //                     value: item?.client_entity_name\n    //                 }\n    //                 tmp.push(optionData);\n    //             })\n    //             return tmp;\n    //         }\n    //         return [];\n    //     } else {\n    //         return []\n    //     }\n    // }\n\n    // const clients = getClientNameList(clientData.clientview)\n\n    // console.log(\"Client Data =====> \", clients.map(item => {\n    //     return item?.value\n    // }))\n\n    // const getUserNameList = (original) => {\n    //     console.log('originall ====> ', original, userData.userview)\n    //     let tmp = [];\n    //     if (Boolean(original)) {\n    //         if (original.length) {\n    //             original.map(item => {\n    //                 let optionData = {\n    //                     key: item?.user_id,\n    //                     value: item?.full_name\n    //                 }\n    //                 tmp.push(optionData);\n    //             })\n    //             return tmp;\n    //         }\n    //         return [];\n    //     } else {\n    //         return []\n    //     }\n    // }\n\n    // const users = getUserNameList(userData.userview)\n\n    //input fields event\n    // const handleUserChange = (e, field) => {\n\n    //     if (field == \"user_name\") {\n    //         if (users.filter(item => item.value == e)[0] != null) {\n    //             setState({\n    //                 ...state,\n    //                 user_name: e,\n    //                 user_id: users.filter(item => item.value == e)[0].key\n    //             })\n    //         }\n\n    //     }\n    // }\n\n    // const handleClientChange = (e, field) => {\n\n    //     if (field == \"client_name\") {\n    //         if (clients.filter(item => item.value == e)[0] != null) {\n    //             setState({\n    //                 ...state,\n    //                 client_name: e,\n    //                 client_id: clients.filter(item => item.value == e)[0].key\n    //             })\n    //         }\n\n    //     }\n    // }\n\n    const onSave = () => {\n        // if (state.user_name == null || state.user_name == \"\") {\n        //     notify(\"Please enter company user name.\")\n        //     return\n        // } else if (state.client_name == null || state.client_name == \"\") {\n        //     notify(\"Please enter client name.\")\n        //     return\n        // } else {\n        //     const requestOptions = {\n        //         method: 'POST',\n        //         headers: { 'Content-Type': 'application/json' },\n        //         body: JSON.stringify({\n        //             sales_client_id: update_id,\n        //             client_id: state.client_id,\n        //             user_id: state.user_id,\n        //         })\n        //     };\n        //     console.log(\"===============> \", requestOptions.body)\n        //     fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n        //         .then(async response => {\n        //             const data = await response.json();\n        //             console.log(\"Response Data=============>\", data)\n        //             // check for error response\n        //             if (!response.ok) {\n        //                 // get error message from body or default to response status\n        //                 const error = (data && data.message) || response.status;\n        //                 return Promise.reject(error);\n        //             } else if (data.sales_client_id != null) {\n        //                 notify(\"This client is already exist.\")\n        //                 return\n        //             } else if (data.id != 0) {\n\n        //                 handleNotificationCall(\"shipped\");\n        //             }\n\n        //         })\n        //         .catch(error => {\n        //             notify('Something went wrong!\\n' + error)\n        //             console.error('There was an error!', error);\n        //         });\n        // }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/discount\");\n    }\n\n\n    // const userList = users.map(item => {\n    //     return item?.value\n    // })\n\n    // const clientList = clients.map(item => {\n    //     return item?.value\n    // })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Discount\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Item Name\" value={state.item_name}\n                                    handleChange={(e) => handleChange(e, 'item_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Unit\" value={state.unit} handleChange={(e) => handleChange(e, 'unit')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Min Quantity\" value={state.min_quantity}\n                                    handleChange={(e) => handleChange(e, 'min_quantity')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Max Quantity\" value={state.max_quantity}\n                                    handleChange={(e) => handleChange(e, 'max_quantity')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    // fetchUserView: fetchUserView,\n    // fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditDiscountPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons'\nimport CSVReader from 'react-csv-reader'\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction PromotionPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([\n    {\n      promotion_id: 1,\n      code: 'AAAAAA',\n      type: 'PERCENT',\n      amount: 10,\n    },\n    {\n      promotion_id: 2,\n      code: 'BBBBBB',\n      type: 'UNIT',\n      amount: 5,\n    },\n    {\n      promotion_id: 3,\n      code: 'CCCCCC',\n      type: 'TOTAL',\n      amount: 560,\n    }\n  ]);\n  // const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    // props.fetchSalesClientView()\n    // setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"promotion_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"code\",\n      label: \"Code\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"type\",\n      label: \"Type\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"promotion_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesorder/promotion/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    // onRowsDelete: (rowsDeleted) => {\n\n    //   const delete_id = []\n    //   rowsDeleted.data.map((data) => {\n    //     const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n    //     delete_id.push(newDeleteId)\n    //   })\n    //   console.log(\"deleting Ids===> \", delete_id)\n    //   delete_id.map((id) => {\n    //     // row delete api call\n    //     const requestOptions = {\n    //       method: 'POST',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({\n    //         sales_client_id: id\n    //       })\n    //     };\n    //     fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n    //       .then(async response => {\n    //         const data = await response.json();\n    //         console.log(\"Response Data=============>\", data)\n    //         // check for error response\n    //         if (!response.ok) {\n    //           // get error message from body or default to response status\n    //           const error = (data && data.message) || response.status;\n    //           return Promise.reject(error);\n    //         }\n    //         return\n    //       })\n    //       .catch(error => {\n    //         notify('Something went wrong!\\n' + error)\n    //         console.error('There was an error!', error);\n    //       });\n    //   })\n    // },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n  const importCSV = (data) => {\n    console.log(data)\n    addWithCSV(data)\n  }\n\n  const addWithCSV = (data) => {\n    // for (let i = 1; i < data.length - 1; i++) {\n    //   const row = data[i];\n    //   let saveData = {\n    //     user_id: row[0],\n    //     client_id: row[1],\n    //   }\n    //   const reqOption = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(saveData)\n    //   }\n    //   fetch(`${SERVER_URL}addSalesClientWithCSV`, reqOption)\n    //     .then(async response => {\n    //       const data = await response.json();\n    //       console.log(\"Response Data=============>\", data)\n    //       // check for error response\n    //       if (!response.ok) {\n    //         const error = (data && data.message) || response.status;\n    //         return Promise.reject(error);\n    //       } else if (data.client_id != null) {\n    //         notify(\"This client is already exist.\")\n    //         return\n    //       } else if (data.id != 0) {\n\n    //         notify(\"Successfully appended\");\n    //       }\n    //     })\n    //     .catch(error => {\n    //       notify('Something went wrong!\\n' + error)\n    //       console.error('There was an error!', error);\n    //     });\n    // }\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Promotion\" button={[\"Add New\"]} data={dataSource} category=\"salesorder_promotion\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Promotion\"}\n              data={dataSource}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6} md={6} lg={6}></Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <CSVReader label=\"Import CSV: \" onFileLoaded={(data) => importCSV(data)} />\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => { window.location.reload() }}>\n            See Result\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PromotionPage);\n\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\r\n// import fetchUserView from \"../../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../../common/config';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction AddPromotionPage(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    // const userData = useSelector(state => state.userview);\r\n    // const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        code: '',\r\n        typeList: ['PERCENT', 'UNIT', 'TOTAL'],\r\n        type: 'PERCENT',\r\n        amount: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        // props.fetchClientView()\r\n        // props.fetchUserView();\r\n    }, [])\r\n\r\n    // const [userList, setUserList] = React.useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        setState({\r\n            ...state,\r\n            [field]: e.target.value,\r\n        })\r\n        // if (field == \"type\") {\r\n        //     if (clients.filter(item => item.value == e)[0] != null) {\r\n        //         setState({\r\n        //             ...state,\r\n        //             client_name: e,\r\n        //             client_id: clients.filter(item => item.value == e)[0].key\r\n        //         })\r\n        //     }\r\n\r\n        // }\r\n    }\r\n\r\n    const handleTypeChange = (e, field) => {\r\n\r\n        if (field == \"type\") {\r\n            setState({\r\n                ...state,\r\n                type: e\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const onSaveandNew = () => {\r\n        // if (state.code == null || state.code == \"\") {\r\n        //     notify(\"Please enter item name.\")\r\n        //     return\r\n        // } else {\r\n        //     const requestOptions = {\r\n        //         method: 'POST',\r\n        //         headers: { 'Content-Type': 'application/json' },\r\n        //         body: JSON.stringify({\r\n        //             client_id: state.client_id,\r\n        //             // user_id: state.userIDList,\r\n        //         })\r\n        //     };\r\n        //     fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n        //         .then(async response => {\r\n        //             const data = await response.json();\r\n        //             console.log(\"Response Data=============>\", data)\r\n        //             // check for error response\r\n        //             if (!response.ok) {\r\n        //                 // get error message from body or default to response status\r\n        //                 const error = (data && data.message) || response.status;\r\n        //                 return Promise.reject(error);\r\n        //             } else if (data.sales_client_id != null) {\r\n        //                 notify(\"This client is already exist.\")\r\n        //                 return\r\n        //             } else if (data.id != 0) {\r\n\r\n        //                 handleNotificationCall(\"shipped\");\r\n        //                 setState(() => ({\r\n        //                     client_name: '',\r\n        //                     user_name: \"\",\r\n        //                     client_id: '',\r\n        //                     user_id: '',\r\n        //                 }))\r\n\r\n        //             }\r\n\r\n        //         })\r\n        //         .catch(error => {\r\n        //             notify('Something went wrong!\\n' + error)\r\n        //             console.error('There was an error!', error);\r\n        //         });\r\n        // }\r\n    }\r\n\r\n    const onSaveandBack = () => {\r\n        // if (state.code == null || state.code == \"\") {\r\n        //     notify(\"Please enter client name.\")\r\n        //     return\r\n        // } else {\r\n        //     const requestOptions = {\r\n        //         method: 'POST',\r\n        //         headers: { 'Content-Type': 'application/json' },\r\n        //         body: JSON.stringify({\r\n        //             client_id: state.client_id,\r\n        //             // user_id: state.userIDList,\r\n        //         })\r\n        //     };\r\n        //     fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n        //         .then(async response => {\r\n        //             const data = await response.json();\r\n        //             console.log(\"Response Data=============>\", data)\r\n        //             // check for error response\r\n        //             if (!response.ok) {\r\n        //                 // get error message from body or default to response status\r\n        //                 const error = (data && data.message) || response.status;\r\n        //                 return Promise.reject(error);\r\n        //             } else if (data.sales_client_id != null) {\r\n        //                 notify(\"This client is already exist.\")\r\n        //                 return\r\n        //             } else if (data.id != 0) {\r\n\r\n        //                 handleNotificationCall(\"shipped\");\r\n        //                 setState(() => ({\r\n        //                     client_name: '',\r\n        //                     user_name: \"\",\r\n        //                     client_id: '',\r\n        //                     user_id: '',\r\n        //                 }))\r\n        //                 history.push(\"/app/salesview\");\r\n\r\n        //             }\r\n\r\n        //         })\r\n        //         .catch(error => {\r\n        //             notify('Something went wrong!\\n' + error)\r\n        //             console.error('There was an error!', error);\r\n        //         });\r\n        // }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesorder/promotion\");\r\n    }\r\n\r\n    // const clientList = clients.map(item => {\r\n    //     return item?.value\r\n    // })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Promotion\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<Icons.Cancel />}\r\n                                        onClick={() => onCancel()}\r\n                                    >\r\n                                        Cancel\r\n                                        </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Code\" value={state.code}\r\n                                    handleChange={(e) => handleChange(e, 'code')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Type\" items={state.typeList} value={state.type}\r\n                                    handleChange={(e) => handleTypeChange(e, 'type')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\r\n                                <CustomInput req={true} title={state.type!='TOTAL'?'Amount(%)':'Amount'} value={state.amount}\r\n                                    handleChange={(e) => handleChange(e, 'amount')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandNew()}\r\n                                        >\r\n                                            Save & New\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSaveandBack()}\r\n                                        >\r\n                                            Save & Back\r\n                                        </Button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    // fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddPromotionPage);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchClientView from \"../../../services/clientview/ClientViewService\";\n// import fetchUserView from \"../../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../../common/config';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nfunction EditPromotionPage(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    // const userData = useSelector(state => state.userview);\n    // const clientData = useSelector(state => state.clientview);\n\n    // input form datas\n    const [state, setState] = useState({\n        code: 'AAAAAA',\n        typeList: ['PERCENT', 'UNIT', 'TOTAL'],\n        type: 'PERCENT',\n        amount: 10\n    })\n\n    useEffect(() => {\n        // props.fetchClientView()\n        // props.fetchUserView();\n    }, [])\n\n    // const [userList, setUserList] = React.useState([]);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    //input fields event\n    const handleChange = (e, field) => {\n        setState({\n            ...state,\n            [field]: e.target.value,\n        })\n        // if (field == \"type\") {\n        //     if (clients.filter(item => item.value == e)[0] != null) {\n        //         setState({\n        //             ...state,\n        //             client_name: e,\n        //             client_id: clients.filter(item => item.value == e)[0].key\n        //         })\n        //     }\n\n        // }\n    }\n\n    const handleTypeChange = (e, field) => {\n\n        if (field == \"type\") {\n            setState({\n                ...state,\n                type: e\n            })\n        }\n    }\n\n\n    const onSave = () => {\n        // if (state.code == null || state.code == \"\") {\n        //     notify(\"Please enter item name.\")\n        //     return\n        // } else {\n        //     const requestOptions = {\n        //         method: 'POST',\n        //         headers: { 'Content-Type': 'application/json' },\n        //         body: JSON.stringify({\n        //             client_id: state.client_id,\n        //             // user_id: state.userIDList,\n        //         })\n        //     };\n        //     fetch(`${SERVER_URL}addSalesClient`, requestOptions)\n        //         .then(async response => {\n        //             const data = await response.json();\n        //             console.log(\"Response Data=============>\", data)\n        //             // check for error response\n        //             if (!response.ok) {\n        //                 // get error message from body or default to response status\n        //                 const error = (data && data.message) || response.status;\n        //                 return Promise.reject(error);\n        //             } else if (data.sales_client_id != null) {\n        //                 notify(\"This client is already exist.\")\n        //                 return\n        //             } else if (data.id != 0) {\n\n        //                 handleNotificationCall(\"shipped\");\n        //                 setState(() => ({\n        //                     client_name: '',\n        //                     user_name: \"\",\n        //                     client_id: '',\n        //                     user_id: '',\n        //                 }))\n\n        //             }\n\n        //         })\n        //         .catch(error => {\n        //             notify('Something went wrong!\\n' + error)\n        //             console.error('There was an error!', error);\n        //         });\n        // }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesorder/promotion\");\n    }\n\n    // const clientList = clients.map(item => {\n    //     return item?.value\n    // })\n\n    return (\n        <>\n            <PageTitle title=\"New Promotion\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Code\" value={state.code}\n                                    handleChange={(e) => handleChange(e, 'code')} />\n                            </Grid>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Type\" items={state.typeList} value={state.type}\n                                    handleChange={(e) => handleTypeChange(e, 'type')} />\n                            </Grid>\n                            <Grid item xs={12} sm={4} md={4} lg={4} className={classes.formContainer}>\n                                <CustomInput req={true} title={state.type!='TOTAL'?'Amount(%)':'Amount'} value={state.amount}\n                                    handleChange={(e) => handleChange(e, 'amount')} />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps\n     * @param {*} options\n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    // userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    // fetchUserView: fetchUserView,\n    fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditPromotionPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n    widgetWrapper: {\r\n        display: \"flex\",\r\n        color: '#fff',\r\n        // minHeight: \"100%\",\r\n    },\r\n    incomeWidget: {\r\n        backgroundImage:\r\n            'linear-gradient( 90deg, #00A3EE 0%, rgb(255,255,255) 150%)',\r\n    },\r\n    expenseWidget: {\r\n        backgroundImage:\r\n            'linear-gradient( 90deg, #F03434 0%, rgb(255,255,255) 150%)',\r\n    },\r\n    profitWidget: {\r\n        backgroundImage:\r\n            'linear-gradient( 90deg, #70A456 0%, rgb(255,255,255) 150%)',\r\n    },\r\n    widgetHeader: {\r\n        padding: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n        color: '#fff',\r\n        /* display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\", */\r\n    },\r\n    widgetRoot: {\r\n        boxShadow: theme.customShadows.widget,\r\n        position: 'relative',\r\n    },\r\n    widgetBody: {\r\n        paddingBottom: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        paddingLeft: theme.spacing(3),\r\n    },\r\n    noPadding: {\r\n        padding: 0,\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        overflow: \"hidden\",\r\n    },\r\n    moreButton: {\r\n        // margin: -theme.spacing(1),\r\n        position: 'absolute',\r\n        right: 0,\r\n        padding: 0,\r\n        width: 40,\r\n        height: 40,\r\n        // color: theme.palette.text.hint,\r\n        color: '#fff',\r\n        /* \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: \"rgba(255, 255, 255, 0.35)\",\r\n        }, */\r\n    },\r\n    iconArea: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        paddingRight: 10,\r\n    },\r\n    iconContainer: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 60,\r\n        backgroundColor: '#fff',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    incomeIcon: {\r\n        color: '#00A3EE',\r\n    },\r\n    expenseIcon: {\r\n        color: '#F03434',\r\n    },\r\n    profitIcon: {\r\n        color: '#70A456',\r\n    },\r\n    totalRight: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Paper,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Typography,\r\n    Divider,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\nimport moment from 'moment'\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function TotalWidget({\r\n    children,\r\n    title,\r\n    noBodyPadding,\r\n    bodyClass,\r\n    disableWidgetMenu,\r\n    header,\r\n    ...props\r\n}) {\r\n    var classes = useStyles();\r\n    let sales_target = 10000\r\n    let current_total_sales = 8000\r\n    const createIcon = (title) => {\r\n        switch (title) {\r\n            case \"Sales Target\":\r\n                return (\r\n                    <div className={classes.iconContainer}>\r\n                        <Icons.LocalAtm className={classes.incomeIcon} />\r\n                    </div>\r\n                )\r\n            case \"Current Total Sales\":\r\n                return (\r\n                    <div className={classes.iconContainer}>\r\n                        <Icons.ShoppingCart className={classes.expenseIcon} />\r\n                    </div>\r\n                )\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.widgetWrapper}>\r\n            <Paper className={classes.paper} classes={{\r\n                root: classnames(classes.widgetRoot,\r\n                    { [classes.incomeWidget]: title === \"Sales Target\" },\r\n                    { [classes.expenseWidget]: title === \"Current Total Sales\" },\r\n                )\r\n            }}>\r\n                <div className={classes.widgetHeader}>\r\n                    <Grid container>\r\n                        <Grid item lg={8} md={8} sm={8} xs={6}>\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h4\" color=\"inherit\">\r\n                                    {title}\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                            { title == \"Sales Target\" ?\r\n                                <React.Fragment>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(new Date()).format('YYYY-MM')}\r\n                                </Typography>\r\n                                </React.Fragment> : <React.Fragment>\r\n                                    <Typography variant=\"h6\">\r\n                                        {moment(new Date()).format('YYYY-MM-DD')}\r\n                                </Typography>\r\n                                </React.Fragment>\r\n                            }\r\n\r\n                        </Grid>\r\n                        <Grid item className={classes.iconArea} lg={4} md={4} sm={4} xs={6}>\r\n                            {createIcon(title)}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <Grid container className={classes.widgetHeader}>\r\n                    \r\n                    <Grid item lg={6} md={6} sm={6} xs={6} className={classes.totalRight}>\r\n                        <Typography variant=\"h3\" color=\"inherit\">\r\n                            {title == \"Sales Target\" ? sales_target : current_total_sales } Units\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <div\r\n                    className={classnames(classes.widgetBody, {\r\n                        [classes.noPadding]: noBodyPadding,\r\n                        [bodyClass]: bodyClass,\r\n                    })}\r\n                >\r\n                    {children}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { SERVER_URL } from '../../../common/config';\n\nfunction CompanyTarget(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([\n      {\n          sales_name: 'Sales Name 1',\n          company: 'Company A',\n          client: 'Client A',\n          sales_target: 10000,\n          current_total_sales: 8000\n      },\n      {\n        sales_name: 'Sales Name 2',\n        company: 'Company B',\n        client: 'Client B',\n        sales_target: 16000,\n        current_total_sales: 2000\n    }\n  ]);\n  // const salesviewData = useSelector(state => state.salesview);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    // props.fetchSalesClientView()\n    // setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company\",\n      label: \"Company\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client\",\n      label: \"Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_target\",\n      label: \"Sales Target\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n        name: \"current_total_sales\",\n        label: \"Current Total Sales\",\n        options: {\n          filter: true,\n          sort: true,\n        }\n      },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Company Target\"}\n              data={dataSource}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyTarget);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { SERVER_URL } from '../../../common/config';\n\nfunction ItemTarget(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([\n    {\n      item_id: 1,\n      item_name: 'Item Name1',\n      sales_name: 'Sales Name1',\n      company_entity_name : 'CompanyA',\n      client: 'Client1',\n      total_units: 300, \n      sold: 250\n    },\n    {\n      item_id: 2,\n      item_name: 'Item Name2',\n      sales_name: 'Sales Name2',\n      company_entity_name : 'CompanyB',\n      client: 'Client2',\n      total_units: 1000, \n      sold: 600\n    }\n  ]);\n  // const salesviewData = useSelector(state => state.salesview);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n  useEffect(() => {\n    // props.fetchSalesClientView()\n    // setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"item_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"item_name\",\n      label: \"Item Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_name\",\n      label: \"Sales Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client\",\n      label: \"Client\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"total_units\",\n      label: \"Total Units\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sold\",\n      label: \"Sold\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: true,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable\n              title={\"Item Target\"}\n              data={dataSource}\n              // data={salesviewData.salesview}\n              columns={columns}\n              options={options}\n            />\n          </MuiThemeProvider>\n\n        </Grid>\n      </Grid>\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemTarget);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Button, IconButton, InputBase, Tooltip, FormControlLabel, Typography, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\n// import fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\nimport TotalWidget from \"./components/TotalWidget/TotalWidget\";\n// import DoughnutWidget from \"./components/DoughnutWidget/DoughnutWidget\";\nimport CompanyTarget from './CompanyTarget'\nimport ItemTarget from './ItemTarget'\n\nfunction TargetPage(props) {\n  let history = useHistory();\n  const [activate, setActivate] = useState(true)\n  const [company, setCompany] = useState('Default')\n  const [item, setItem] = useState('Default')\n  const companyList = [\n    'Default',\n    'CompanyA',\n    'CompanyB',\n    'CompanyC'\n  ]\n\n  const itemList = [\n    'Default',\n    'ItemA',\n    'ItemB',\n    'ItemC'\n  ]\n\n  const handleCompanyChange = (e, field) => {\n    if (field == 'company') {\n      setCompany(e)\n    }\n  }\n\n  const handleItemChange = (e, field) => {\n    if (field == 'item') {\n      setItem(e)\n    }\n  }\n\n  return (\n    <>\n\n      <div>\n        <Grid container spacing={1} >\n          <Grid item\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}>\n            <Typography variant=\"h3\" size=\"sm\" color=\"initial\" weight=\"bold\">\n              Sales Target\n            </Typography>\n          </Grid>\n          <Grid item\n            lg={6}\n            md={6}\n            sm={6}\n            xs={12}>\n          </Grid>\n          <Grid item\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}\n            style={{ display: 'flex' }}\n          >\n            <Grid item>\n              <Button\n                variant={!activate ? \"outlined\" : \"contained\"}\n                size=\"large\"\n                color=\"primary\"\n                style={{ margin: 5 }}\n                // startIcon={iconVar[item]}\n                onClick={() => setActivate(true)}\n              >\n                Company\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant={activate ? \"outlined\" : \"contained\"}\n                size=\"large\"\n                color=\"primary\"\n                style={{ margin: 5 }}\n                // startIcon={iconVar[item]}\n                onClick={() => setActivate(false)}\n              >\n                Item\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n      <div>\n        <Grid container spacing={1} >\n          <Grid item\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}>\n            {\n              activate ? <CustomCombobox req={true} name=\"Company\"\n                items={companyList} value={company}\n                handleChange={(e) => handleCompanyChange(e, 'company')}\n              /> : <CustomCombobox req={true} name=\"Item\"\n                items={itemList} value={item}\n                handleChange={(e) => handleItemChange(e, 'item')}\n                />\n            }\n\n          </Grid>\n          <Grid item\n            lg={6}\n            md={6}\n            sm={6}\n            xs={12}>\n          </Grid>\n          <Grid item\n            lg={3}\n            md={3}\n            sm={3}\n            xs={12}\n          >\n            <Button\n              variant={'outlined'}\n              size=\"large\"\n              color=\"primary\"\n              style={{ marginTop: 10, marginLeft: 10 }}\n            // startIcon={iconVar[item]}\n            >\n              Setting\n              </Button>\n\n          </Grid>\n        </Grid>\n      </div>\n      {\n        (company == \"Default\" && item == 'Default') ? <Grid container spacing={8}>\n          <Grid item lg={6} md={6} sm={6} xs={12}>\n            <TotalWidget title=\"Sales Target\" />\n          </Grid>\n          <Grid item lg={6} md={6} sm={6} xs={12}>\n            <TotalWidget title=\"Current Total Sales\" />\n          </Grid>\n        </Grid> : null\n      }\n      {\n        activate ? <CompanyTarget /> : <ItemTarget />\n      }\n\n\n\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  // sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  // fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TargetPage);\n\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header/Header\";\nimport Sidebar from \"../Sidebar/Sidebar1\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport UserViewPage from \"../../pages/UserView/UserView\";\nimport ScheduleViewPage from \"../../pages/ScheduleView/ScheduleView\";\nimport ClientViewPage from \"../../pages/ClientView/Client\";\nimport AddClientPage from \"../../pages/ClientView/AddClient\";\nimport EditClientPage from \"../../pages/ClientView/EditClient\";\nimport SalesViewPage from \"../../pages/SalesView/Sales\";\nimport EditSalesPage from \"../../pages/SalesView/EditSales\";\nimport AddSalesPage from \"../../pages/SalesView/AddSales\";\nimport ScheduleReportPage from '../../pages/Report/ScheduleReport/ScheduleReport'\nimport SalesOrderReportPage from '../../pages/Report/SalesOrderReport/SalesOrderReport'\nimport ReviewPage from '../../pages/SalesOrder/Review'\nimport HistoryPage from '../../pages/SalesOrder/History'\nimport ItemPage from '../../pages/SalesOrder/Item/Item'\nimport AddItemPage from '../../pages/SalesOrder/Item/AddItem'\nimport EditItemPage from '../../pages/SalesOrder/Item/EditItem'\nimport DiscountPage from '../../pages/SalesOrder/Discount/Discount'\nimport AddDiscountPage from '../../pages/SalesOrder/Discount/AddDiscount'\nimport EditDiscountPage from '../../pages/SalesOrder/Discount/EditDiscount'\nimport PromotionPage from '../../pages/SalesOrder/Promotion/Promotion'\nimport AddPromotionPage from '../../pages/SalesOrder/Promotion/AddPromotion'\nimport EditPromotionPage from '../../pages/SalesOrder/Promotion/EditPromotion'\nimport TargetPage from '../../pages/SalesOrder/Target/Target'\n// import EditItemPage from '../../pages/SalesOrder/Item/EditItem'\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n\n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer, {\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n          }\n          )}>\n            <Grid>\n              <Switch>\n                \n                <Route exact path=\"/app/userview\" component={UserViewPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/userview\" />}\n                />\n                <Route exact path=\"/app/scheduleview\" component={ScheduleViewPage} />\n                <Route exact path=\"/app/clientview\" component={ClientViewPage} />\n                <Route exact path=\"/app/clientview/add\" component={AddClientPage} />\n                <Route exact path=\"/app/clientview/:clientview/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/salesview\" component={SalesViewPage} />\n                <Route exact path=\"/app/salesview/:salesview/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/salesview/add\" component={AddSalesPage} />\n                <Route exact path=\"/app/schedule_report\" component={ScheduleReportPage} />\n                <Route exact path=\"/app/salesorder_report\" component={TargetPage} />\n                <Route exact path=\"/app/salesorder/review\" component={ReviewPage} />\n                <Route exact path=\"/app/salesorder/history\" component={HistoryPage} />\n                <Route exact path=\"/app/salesorder/item\" component={ItemPage} />\n                <Route exact path=\"/app/salesorder/item/add\" component={AddItemPage} />\n                <Route exact path=\"/app/salesorder/item/:item/edit\" component={EditItemPage} />\n                <Route exact path=\"/app/salesorder/discount\" component={DiscountPage} />\n                <Route exact path=\"/app/salesorder/discount/add\" component={AddDiscountPage} />\n                <Route exact path=\"/app/salesorder/discount/:discount/edit\" component={EditDiscountPage} />\n                <Route exact path=\"/app/salesorder/promotion\" component={PromotionPage} />\n                <Route exact path=\"/app/salesorder/promotion/add\" component={AddPromotionPage} />\n                <Route exact path=\"/app/salesorder/promotion/:promotion/edit\" component={EditPromotionPage} />\n                {/* <Route exact path=\"/app/salesorder/item/:salesorder_item/edit\" component={EditItemPage} /> */}\n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"../../assets/images/logo.png\";\n\nexport default function Success() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n        >\n          Success!\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Your action is done successfully.\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/login\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Go to Login\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n// import background from \"../../assets/images/background.jpg\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    // backgroundImage: background,\n    backgroundColor: theme.palette.primary.main,\n    width: \"60%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    // width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: \"white\",\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: \"40%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    textTransform: \"none\",\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: theme.palette.text.hint + \"40\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  forgetButton: {\n    textTransform: \"none\",\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch, loginUser, signUp } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [confirmValue, setConfirmValue] = useState(\"\");\n  var [phoneNumberValue, setPhoneNumberValue] = useState(\"\");\n  var [companyIDValue, setCompanyIDValue] = useState(\"\");\n\n  //Show notification\n  const notify = (message) => toast(message);\n  \n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  //Login\n  const onLogin = () => {\n    if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } \n    else {\n      loginUser(\n        userDispatch,\n        loginValue,\n        passwordValue,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  //Sign up\n  const onSignup = () => {\n    if (nameValue < 0) {\n      notify(\"Please enter name\");\n      return\n    } else if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (phoneNumberValue.length != 10 ) {\n      notify(\"Please enter valid phone number.\")\n      return\n    } else if (companyIDValue.length < 1 ) {\n      notify(\"Please enter company id.\")\n      return\n    } else if ( passwordValue.length < 6) {\n      notify('Password length should be at least 6 characters.')\n      return\n    } else if ( confirmValue.length < 6) {\n      notify('Please confirm password')\n      return\n    } else if ( passwordValue != confirmValue) {\n      notify('Password is not match.')\n      return\n    } else {\n      signUp(\n        userDispatch,\n        nameValue,\n        passwordValue,\n        loginValue,\n        phoneNumberValue,\n        companyIDValue,\n        true,\n        false,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  return (\n    <Grid container className={classes.container}>\n      <ToastContainer />\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome to ASILE!\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                    <Button\n                      disabled={\n                        loginValue.length === 0 || passwordValue.length === 0\n                      }\n                      onClick={onLogin}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                    >\n                      Login\n                    </Button>\n                  )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h4\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  \n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"phone_number\"\n                margin=\"normal\"\n                placeholder=\"Phone Number\"\n                type=\"number\"\n                onChange={e => setPhoneNumberValue(e.target.value)}\n                fullWidth\n              />\n              <TextField\n                id=\"company_id\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={companyIDValue}\n                onChange={e => setCompanyIDValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Company ID\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <TextField\n                id=\"confirm\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={confirmValue}\n                onChange={e => setConfirmValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                    <Button\n                      onClick={onSignup}\n                      disabled={\n                        loginValue.length === 0 ||\n                        passwordValue.length === 0 ||\n                        nameValue.length === 0\n                      }\n                      size=\"large\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      className={classes.createAccountButton}\n                    >\n                      Create your account\n                    </Button>\n                  )}\n              </div>\n\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2020 Asile. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n// components\nimport Layout from \"./Layout/Layout\";\nimport Layout1 from \"./Layout/Layout1\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Success from \"../pages/success/success\"\nimport Login from \"../pages/login\";\n\n// context\nimport { useUserState } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated, adminID } = useUserState();\n  console.log('auth ================> ', isAuthenticated)\n  console.log('auth ================> ', adminID)\n  return (\n    <HashRouter>\n      <Switch>\n        {/* {\n          isAuthenticated == 0 && <Redirect to=\"/login\" />\n        } */}\n\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\n        <PrivateRoute path=\"/app\" component={(adminID == 1) ? Layout : Layout1} />\n        {/* <PrivateRoute path=\"/app1\" component={Layout1} /> */}\n        <PublicRoute path=\"/login\" component={Login} />\n        <PublicRoute path=\"/success\" component={Success} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n              React.createElement(component, props)\n            )\n        }\n      />\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import {data} from \"../fake-datas/AdminData\"\r\nimport { FETCH_ADMIN_REQUEST, FETCH_ADMIN_SUCCESS, FETCH_ADMIN_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    admin: [],\r\n    error: null\r\n}\r\n\r\nexport default function AdminReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_ADMIN_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_ADMIN_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // admin: [...data]\r\n                admin: action.admin\r\n            }\r\n        case FETCH_ADMIN_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","// import {data} from \"../fake-datas/UserData\"\r\nimport { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    user: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USER_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                user: action.user\r\n            }\r\n        case FETCH_USER_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_COMPANY_REQUEST, FETCH_COMPANY_SUCCESS, FETCH_COMPANY_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    company: [],\r\n    error: null\r\n}\r\n\r\nexport default function CompanyReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_COMPANY_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_COMPANY_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                company: action.company\r\n            }\r\n        case FETCH_COMPANY_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_CLIENT_REQUEST, FETCH_CLIENT_SUCCESS, FETCH_CLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    client: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                client: action.client\r\n            }\r\n        case FETCH_CLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_SCHEDULE_REQUEST, FETCH_SCHEDULE_SUCCESS, FETCH_SCHEDULE_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    schedule: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULE_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULE_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                schedule: action.schedule\r\n            }\r\n        case FETCH_SCHEDULE_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleReducer;\r\n","// import {data} from \"../fake-datas/UserViewData\"\r\nimport { FETCH_USERVIEW_REQUEST, FETCH_USERVIEW_SUCCESS, FETCH_USERVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    userview: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USERVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USERVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // userview: [...data]\r\n                userview: action.userview\r\n            }\r\n        case FETCH_USERVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: 'error'\r\n                // error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_SCHEDULEVIEW_REQUEST, FETCH_SCHEDULEVIEW_SUCCESS, FETCH_SCHEDULEVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    scheduleview: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleViewReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULEVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULEVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                scheduleview: action.scheduleview\r\n            }\r\n        case FETCH_SCHEDULEVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleViewReducer;\r\n","import { FETCH_SALESCLIENTVIEW_REQUEST, FETCH_SALESCLIENTVIEW_SUCCESS, FETCH_SALESCLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    salesview: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENTVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                salesview: action.salesview\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport AdminReducer from './AdminReducer';\r\nimport UserReducer from './UserReducer';\r\nimport CompanyReducer from './CompanyReducer';\r\nimport ClientReducer from './ClientReducer';\r\nimport ClientViewReducer from './ClientViewReducer';\r\nimport SalesReducer from './SalesReducer';\r\nimport ScheduleReducer from './ScheduleReducer'\r\nimport UserViewReducer from './UserViewReducer'\r\nimport ScheduleViewReducer from './ScheduleViewReducer'\r\nimport SalesViewReducer from './SalesViewReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    //Super Admin Reducer\r\n    admin: AdminReducer,\r\n    user: UserReducer, \r\n    company: CompanyReducer, \r\n    client: ClientReducer,\r\n    sales: SalesReducer,\r\n    schedule: ScheduleReducer,\r\n    //Admin Reducer\r\n    userview: UserViewReducer,\r\n    clientview: ClientViewReducer,\r\n    scheduleview: ScheduleViewReducer,\r\n    salesview: SalesViewReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { LayoutProvider } from \"./context/LayoutContext\";\nimport { UserProvider } from \"./context/UserContext\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from 'redux-thunk'\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\n// pick a date util library\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst store = createStore(rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <LayoutProvider>\n      <UserProvider>  \n        <ThemeProvider theme={Themes.default}>\n          <CssBaseline />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <App />\n          </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </UserProvider>\n    </LayoutProvider>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}