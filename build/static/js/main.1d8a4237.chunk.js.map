{"version":3,"sources":["assets/images/logo.png","assets/images/loading.gif","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","context/LayoutContext.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/error/styles.js","pages/error/Error.js","pages/UserManage/Admins/styles.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","components/Status/styles.js","components/Status/Status.js","components/Loading/BackdropLoading.js","redux/constants/AdminActionType.js","redux/constants/UserActionType.js","redux/constants/UserViewActionType.js","redux/constants/ClientActionType.js","redux/constants/ClientViewActionType.js","redux/constants/CompanyActionType.js","redux/constants/ScheduleActionType.js","redux/constants/ScheduleViewActionType.js","redux/constants/SalesClientActionType.js","redux/constants/SalesClientViewActionType.js","common/config.js","services/admins/AdminService.js","redux/actions/AdminAction.js","services/auth/Auth.js","context/UserContext.js","pages/UserManage/Admins/Admins.js","components/Widget/styles.js","components/Widget/Widget.js","components/FormControls/styles.js","components/FormControls/CustomInput.js","components/FormControls/CustomCombobox.js","components/Notification/styles.js","components/Notification/Notification.js","services/company/CompanyService.js","redux/actions/CompanyAction.js","pages/UserManage/Admins/EditAdmin.js","pages/UserManage/Admins/AddAdmin.js","pages/UserManage/Users/styles.js","services/users/UserService.js","redux/actions/UserAction.js","pages/UserManage/Users/Users.js","pages/UserManage/Users/EditUser.js","pages/UserManage/Users/AddUser.js","pages/Companys/styles.js","pages/Companys/Companys.js","pages/Companys/AddCompany.js","pages/Companys/EditCompany.js","pages/Client/styles.js","services/client/ClientService.js","redux/actions/ClientAction.js","pages/Client/Client.js","pages/Client/AddClient.js","pages/Client/EditClient.js","pages/Sales/styles.js","redux/reducers/SalesReducer.js","services/sales/SalesClientService.js","redux/actions/SalesClientAction.js","pages/Sales/Sales.js","pages/Sales/EditSales.js","pages/Sales/AddSales.js","pages/Schedule/styles.js","services/schedule/ScheduleService.js","redux/actions/ScheduleAction.js","pages/Schedule/Schedule.js","components/Footer/styles.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Sidebar/Sidebar1.js","pages/UserView/styles.js","services/users/UserViewService.js","redux/actions/UserViewAction.js","pages/UserView/UserView.js","pages/ScheduleView/styles.js","services/scheduleview/ScheduleViewService.js","redux/actions/ScheduleViewAction.js","pages/ScheduleView/ScheduleView.js","pages/ClientView/styles.js","redux/reducers/ClientViewReducer.js","services/clientview/ClientViewService.js","redux/actions/ClientViewAction.js","pages/ClientView/Client.js","pages/ClientView/AddClient.js","pages/ClientView/EditClient.js","pages/SalesView/styles.js","services/salesview/SalesClientViewService.js","redux/actions/SalesClientViewAction.js","pages/SalesView/Sales.js","pages/SalesView/EditSales.js","pages/SalesView/AddSales.js","components/Layout/Layout1.js","pages/success/styles.js","pages/success/success.js","pages/login/styles.js","pages/login/Login.js","components/App.js","serviceWorker.js","redux/reducers/AdminReducer.js","redux/reducers/UserReducer.js","redux/reducers/CompanyReducer.js","redux/reducers/ClientReducer.js","redux/reducers/ScheduleReducer.js","redux/reducers/UserViewReducer.js","redux/reducers/ScheduleViewReducer.js","redux/reducers/SalesViewReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","themes_default","palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","white","myprimary","bright","favorite","secondary","contrastText","mysecondary","warning","success","info","text","hint","background","default","blue","green","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","color","MuiListItem","&$selected","&:focus","button","&:hover, &:focus","MuiTouchRipple","child","MuiTable","border","MUIDataTableBodyCell","paddingTop","paddingBottom","MuiTableCell","borderColor","fontSize","head","height","MuiTableRow","MUIDataTableHeadCell","fixedHeaderCommon","MUIDataTableSelectCell","headerCell","MuiTypography","body1","MuiMenuItem","padding","themes","createMuiTheme","Object","objectSpread2","defaultTheme","typography","h1","h2","h3","h4","h5","h6","makeStyles","theme","display","maxWidth","overflowX","content","flexGrow","spacing","width","minHeight","contentShift","concat","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","mainContainer","padding1600","paddingLeft","paddingRight","padding1800","_inputRoot","logotype","defineProperty","marginLeft","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","hide","grow","search","position","borderRadius","fade","common","black","&:hover","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","whiteColor","badge","Typography","_ref2","children","weight","size","colorBrightness","props","objectWithoutProperties","useTheme","react_default","a","createElement","assign","style","getColor","getFontWeight","getFontSize","variant","brigtness","arguments","length","undefined","multiplier","defaultSize","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","_ref","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","dispatch","Provider","value","useLayoutState","context","useContext","useLayoutDispatch","toggleSidebar","Header","classes","useStyles","layoutDispatch","Grid","container","Toolbar","className","IconButton","onClick","classNames","FormatAlignJustifyOutlined","FormatAlignLeftOutlined","Wrappers_Typography","_mobileBackButton","menuButton","flexShrink","drawerPaper","drawerOpen","drawerClose","sidebarList","mobileBackButton","only","logotypeImage","link","linkActive","linkNestedActive","linkNested","linkIcon","linkIconActive","linkText","largeText","smallText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","listItem","dotBase","dotSmall","dotLarge","Dot","_classnames","classnames","SidebarLink","_classnames2","_classnames4","_classnames6","label","location","nested","_useState","useState","_useState2","isOpen","setIsOpen","isLinkActive","pathname","indexOf","Divider","Fragment","ListItem","component","Link","e","preventDefault","to","disableRipple","ListItemIcon","Inbox","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","childrenLink","key","linkRoot","structure","id","AccountCircleOutlined","BusinessOutlined","PeopleAltOutlined","TransferWithinAStationOutlined","TimerOutlined","withRouter","_classNames","_classNames2","isPermanent","setPermanent","useEffect","window","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","open","ArrowBack","alignSelf","localStorage","clear","reload","isSmallScreen","innerWidth","values","md","top","left","logotypeText","logotypeIcon","paperRoot","textRow","textAlign","errorCode","safetyText","backButton","Paper","colorbrightness","Button","dashedBorder","formControl","filePicker","fileInput","selectEmpty","formContainer","typo","buttonContainer","statusTextContainer","statusText","invoiceContainer","backgroundImage","iconContainer","cardTitle","letterSpacing","cardRoot","displayColumn","lineHeight","headerContainer","rightAlign","cardFooterRoot","editButton","printButton","shareButton","actionButton","notificationItem","notificationCloseButton","toastsContainer","progress","visibility","notification","overflow","notificationComponent","pageTitleContainer","&:active","buttonGroup","PageTitle","iconVar","Add_default","Print","CloudUpload_default","CloudDownload_default","buttonCount","lgSpan","mdSpan","smSpan","item","lg","sm","xs","title","includes","startIcon","category","console","log","history","push","buttonHandler","status","draft","paid","Status","toUpperCase","backdrop","BackdropLoading","_React$useState","_React$useState2","setOpen","Backdrop","src","loadingImage","alt","FETCH_ADMIN_REQUEST","FETCH_ADMIN_SUCCESS","FETCH_ADMIN_ERROR","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_ERROR","FETCH_USERVIEW_REQUEST","FETCH_USERVIEW_SUCCESS","FETCH_USERVIEW_ERROR","FETCH_CLIENT_REQUEST","FETCH_CLIENT_SUCCESS","FETCH_CLIENT_ERROR","FETCH_CLIENTVIEW_REQUEST","FETCH_CLIENTVIEW_SUCCESS","FETCH_CLIENTVIEW_ERROR","FETCH_COMPANY_REQUEST","FETCH_COMPANY_SUCCESS","FETCH_COMPANY_ERROR","FETCH_SCHEDULE_REQUEST","FETCH_SCHEDULE_SUCCESS","FETCH_SCHEDULE_ERROR","FETCH_SCHEDULEVIEW_REQUEST","FETCH_SCHEDULEVIEW_SUCCESS","FETCH_SCHEDULEVIEW_ERROR","FETCH_SALESCLIENT_REQUEST","FETCH_SALESCLIENT_SUCCESS","FETCH_SALESCLIENT_ERROR","FETCH_SALESCLIENTVIEW_REQUEST","FETCH_SALESCLIENTVIEW_SUCCESS","FETCH_SALESCLIENTVIEW_ERROR","SERVER_URL","fetchAdmins","body","isAdmin","setTimeout","fetch","method","JSON","stringify","headers","Content-Type","then","res","json","error","admin","catch","fetchAdminError","loginApi","user","Accept","Promise","resolve","reject","axios","post","err","signUpApi","UserStateContext","UserDispatchContext","adminID","userReducer","loading","isAuthenticated","isSignup","UserProvider","getItem","useUserState","connect","bindActionCreators","useHistory","_useState3","_useState4","_useState5","_useState6","dataSource","setDataSource","adminData","useSelector","_useState7","_useState8","columns","name","options","filter","sort","customBodyRender","tableMeta","updateValue","actionEdit","Edit","i","filterType","pagination","print","download","responsive","fixedHeader","elevation","rowsPerPageOptions","resizableColumns","onRowsDelete","rowsDeleted","delete_id","data","newDeleteId","dataIndex","user_id","requestOptions","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","ok","message","abrupt","stop","_x","apply","this","toast","onTableChange","tableState","tmp","dist_default","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","moreButton","Widget","noBodyPadding","bodyClass","disableWidgetMenu","_ref$menuItems","menuItems","header","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","aria-owns","aria-haspopup","buttonRef","MoreVert","Menu","anchorEl","onClose","disableAutoFocusItem","menu","index","MenuItem","addButton","comboContainer","addIcon","autoRoot","CustomInput","FormControl","TextField","multiline","rows","required","onChange","handleChange","CustomCombobox","defaultProps","items","getOptionLabel","option","addbtn","Autocomplete","debug","multiple","openOnFocus","renderOption","renderInput","params","req","Tooltip","notificationContainer","notificationContained","notificationContainedShadowless","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","containedTypography","messageContainer","extraButton","typesIcons","e-commerce","ShoppingCart","NotificationsNone","offer","LocalOffer","ThumbUp","Email","feedback","SmsFailed","customer","AccountBox","shipped","Done","delivered","BusinessCenter","defence","esm_Error","report","Report","upload","Publish","disc","DiscFull","Notification","getIconByType","iconWithStyles","cloneElement","notificationIcon","shadowless","setAlpha","toRgbString","typographyVariant","extraButtonClick","fetchCompany","company","fetchCompanyError","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","errorToastId","setErrorToastId","notificationsPosition","companyData","notify","_useState9","full_name","email","phone_number","company_id","company_entity_name","isActive","_useState10","setState","update_id","match","getAdminInfo","toString","companies","original","Boolean","objArray2Array","field","object","setCompanyIdfromCompanyName","prevState","target","checked","_e$target","onSave","test","_callee2","_context2","handleNotificationCall","_x2","updateAdminInfo","react_toastify","closeButton","_ref3","closeToast","Close","closeOnClick","progressClassName","notificationProgress","FormControlLabel","control","Switch","Cancel","Save","retryErrorNotification","update","render","notificationType","componentProps","toastId","sendNotification","password","maxLength","fetchUsers","fetchUserError","selectedRowIndex","setSelectedRowIndex","userData","getUserInfo","updateUserInfo","AddCompany","entity_name","owner_name","address","time_limit_per_schedule","late_policy","min_schedule_time","max_schedule_time","notes","CloseButton","company_owner_name","getCompanyInfo","updateCompanyInfo","_ref4","table","difference","fetchClient","client","fetchClientError","clientData","client_id","client_entity_name","client_owner_name","getClientInfo","updateClientInfo","initialState","sales","fetchSalesClient","fetchSalesClientError","salesData","sales_client_id","client_name","user_name","clients","getSalesClientInfo","getClientNameList","optionData","users","getUserNameList","handleUserChange","temp","getClientsByCompanyId","userList","handleClientChange","_callee3","_context3","_x3","fetchSchedule","schedule","fetchScheduleError","scheduleData","schedule_id","version","Footer","matches1600","useMediaQuery","matches1800","layoutState","Sidebar_Sidebar","react_router","exact","path","AdminPage","EditAdminPage","AddAdminPage","UserPage","EditUserPage","AddUserPage","CompanyPage","AddCompanyPage","EditCompanyPage","ClientsPage","AddClientPage","EditClientPage","SalesPage","EditSalesPage","AddSalesPage","SchedulePage","fetchUserView","userview","fetchUserViewError","userviewData","selectableRows","fetchScheduleView","scheduleview","fetchScheduleViewError","scheduleviewData","clientview","fetchClientView","fetchClientViewError","clientViewData","fetchSalesClientView","salesview","fetchSalesClientViewError","salesviewData","clientList","Sidebar1","UserViewPage","ScheduleViewPage","ClientViewPage","SalesViewPage","Success","_logotypeContainer","logotypeContainer","form","tab","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","&:before","borderBottomColor","&:after","&:hover:before","textField","formButtons","forgetButton","loginLoader","copyright","bottom","userDispatch","useUserDispatch","isLoading","setIsLoading","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","_useState11","_useState12","passwordValue","setPasswordValue","_useState13","_useState14","confirmValue","setConfirmValue","_useState15","_useState16","phoneNumberValue","setPhoneNumberValue","_useState17","_useState18","companyIDValue","setCompanyIDValue","validateEmail","Tabs","indicatorColor","textColor","centered","Tab","Fade","InputProps","underline","input","placeholder","fullWidth","CircularProgress","disabled","login","check_id","isSuperAdmin","setItem","token","rememberToken","loginUser","signUp","App","_useUserState","react_router_dom","PrivateRoute","Layout","Layout1","PublicRoute","Login","rest","from","hostname","ScheduleReducer","ScheduleViewReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","ThemeProvider","Themes","CssBaseline","useUtils_cfb96ac9","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d8a4237.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40a2ca7d.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.80a83396.gif\";","import tinycolor from \"tinycolor2\";\n\nconst primary = \"#536DFE\";//#6200ee\nconst secondary = \"#FF5C93\";\nconst myprimary = \"#0B1A2D\"; //0B1A2D 07112C\nconst mysecondary = \"#00A3EE\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\nconst blue = \"#2196f3\";\nconst green = \"#4caf50\";\nconst white = \"#FFF\";\nconst favorite = \"#4302a0\";\n\nconst lightenRate = 7.5;\nconst brightenRate = 15;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    myprimary: {\n      main: myprimary,\n      bright: tinycolor(myprimary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(myprimary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(myprimary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    favorite: {\n      main: favorite,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    mysecondary: {\n      main: mysecondary,\n      bright: tinycolor(mysecondary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(mysecondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(mysecondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n      white: \"#FFF\"\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n    blue: {\n      main: blue,\n      light: tinycolor(blue)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(blue)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    green: {\n      main: green,\n      light: tinycolor(green)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(green)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTable: {\n      root: {\n        border: \"1px solid rgba(224, 224, 224, .5)\",\n      }\n    },\n    MUIDataTableBodyCell: {\n      root: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        height: 50,\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 75,\n      },\n    },\n    MUIDataTableHeadCell: {\n      fixedHeaderCommon: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MUIDataTableSelectCell: {\n      headerCell: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MuiTypography: {\n      body1: {\n        fontSize: '0.8125rem',\n      }\n    },    \n    MuiMenuItem: {\n      root: {\n        fontSize: '0.8125rem',\n        padding: 36,\n        paddingTop: 12,\n        paddingBottom: 12,\n      }\n    },    \n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overflowX: \"hidden\",\n    background: '#fff',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw - 240px)`,\n    minHeight: \"100vh\",\n  },\n  contentShift: {\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n  mainContainer: {\n    paddingTop: 40,\n    // paddingLeft: 40,\n    // paddingRight: 40,\n    // paddingLeft: `calc(100vw - 240px) * 0.2`,\n  },\n  padding1600: {\n    paddingLeft: 80,\n    paddingRight: 80,\n  },\n  padding1800: {\n    paddingLeft: 120,\n    paddingRight: 120,\n  },\n\n}));\n","import { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport blue from '@material-ui/core/colors/blue';\n\nexport default makeStyles(theme => ({\n  logotype: {\n    color: \"white\",\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    width: \"100%\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    width: \"100%\",\n    // background: \"#6200ee;\",\n    background: theme.palette.mysecondary.main,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    background: \"white\",\n    position: \"relative\",\n    borderRadius: 25,\n    paddingLeft: theme.spacing(2.5),\n    width: 36,\n    backgroundColor: fade(theme.palette.common.black, 0),\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\n    \"&:hover\": {\n      cursor: \"pointer\",\n      // background: \"#FFF\",\n      backgroundColor: fade(theme.palette.common.black, 0.08),\n    },\n  },\n  searchFocused: {\n    backgroundColor: fade(theme.palette.common.black, 0.08),\n    // backgroundColor: fade(theme.palette.common.white, 1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 250,\n    },\n  },\n  searchIcon: {\n    width: 36,\n    right: 0,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    transition: theme.transitions.create(\"right\"),\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  searchIconOpened: {\n    right: theme.spacing(1.25),\n  },\n  inputRoot: {\n    color: \"#B9B9B9\",\n    color: theme.palette.primary.light,\n    width: \"100%\",\n  },\n  inputInput: {\n    height: 36,\n    padding: 0,\n    paddingRight: 36 + theme.spacing(1.25),\n    width: \"100%\",\n  },\n  messageContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenu: {\n    marginTop: theme.spacing(7),\n  },\n  headerMenuList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenuItem: {\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n    },\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerMenuButtonCollapse: {\n    marginRight: theme.spacing(2),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: \"rgba(255, 255, 255, 0.35)\",\n  },\n  headerIconCollapse: {\n    color: \"white\",\n  },\n  profileMenu: {\n    minWidth: 265,\n  },\n  profileMenuUser: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n  profileMenuItem: {\n    color: theme.palette.text.hint,\n  },\n  profileMenuIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.text.hint,\n  },\n  profileMenuLink: {\n    fontSize: 16,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  messageNotification: {\n    height: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  messageNotificationSide: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  messageNotificationBodySide: {\n    alignItems: \"flex-start\",\n    marginRight: 0,\n  },\n  sendMessageButton: {\n    margin: theme.spacing(4),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textTransform: \"none\",\n  },\n  sendButtonIcon: {\n    marginLeft: theme.spacing(2),\n  },\n  whiteColor: {\n    color: \"white\"\n  }\n}));\n","import React from \"react\";\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, className, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n      width: '100%',\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      \"&:active\": {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n  Grid\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n  FormatAlignJustifyOutlined,\n  FormatAlignLeftOutlined,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\nimport { toggleSidebar, useLayoutDispatch, useLayoutState } from \"../../context/LayoutContext\";\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  // var layoutState = useLayoutState();\n\n  return (\n    <Grid container spacing={4}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {isSidebarOpened ? (\n            <FormatAlignJustifyOutlined\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n              <FormatAlignLeftOutlined\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          ASILE\n        </Typography>\n      </Toolbar>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerPaper: {\n    // background: \"#6200ee\",\n    background: theme.palette.myprimary.main,\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n    },\n  },\n  toolbar: {\n    marginTop: 15,\n    color: \"#FFF\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sidebarList: {\n    padding: theme.spacing(1),\n  },\n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    width: 40,\n    marginRight: theme.spacing(1),\n  },\n  logotype: {\n    marginRight: theme.spacing(1),\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\",\n      backgroundColor: theme.palette.myprimary.light,\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: \"inherit\"\n    },\n  },\n  linkActive: {\n    // backgroundColor: theme.palette.favorite.main,\n    backgroundColor: theme.palette.myprimary.bright,\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkNestedActive: {\n    // backgroundColor: theme.palette.favorite.main\n    backgroundColor: theme.palette.myprimary.bright,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\"\n      backgroundColor: theme.palette.myprimary.light\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main,\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.primary.white,\n  },\n  linkIconActive: {\n    color: theme.palette.primary.white,\n  },\n  linkText: {\n    padding: 0,\n    color: theme.palette.text.white + \"\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 14,\n  },\n  largeText: {\n    fontSize: 14,\n  },\n  smallText: {\n    fontSize: 13,\n  },\n  linkTextActive: {\n    // color: theme.palette.text.primary,\n    color: theme.palette.text.white,\n    fontWeight: \"550\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(3),\n    fontSize: '12px!important',\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n  listItem: {\n    padding: 5\n  }\n}));\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  dotBase: {\n    width: 8,\n    height: 8,\n    backgroundColor: theme.palette.text.hint,\n    borderRadius: \"50%\",\n    transition: theme.transitions.create(\"background-color\"),\n  },\n  dotSmall: {\n    width: 5,\n    height: 5\n  },\n  dotLarge: {\n    width: 11,\n    height: 11,\n  },\n}));\n\nexport default function Dot({ size, color }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classnames(classes.dotBase, {\n        [classes.dotLarge]: size === \"large\",\n        [classes.dotSmall]: size === \"small\",\n      })}\n      style={{\n        backgroundColor:\n          color && theme.palette[color] && theme.palette[color].main,\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n            [classes.linkNestedActive]: isLinkActive && nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n              [classes.largeText]: !nested,\n              [classes.smallText]: nested,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding className={classes.listItem}>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  MenuOpen, LocalAtmOutlined, ShoppingCartOutlined,\n  AccountBalanceOutlined, AssessmentOutlined,\n  FormatAlignJustifyOutlined, FormatAlignLeftOutlined, People, Settings, AccountCircleOutlined, BusinessOutlined, PeopleAltOutlined, TransferWithinAStationOutlined, TimerOutlined\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/usermanage\",\n    icon: <AccountCircleOutlined fontSize=\"small\" />,\n    children: [\n      { label: \"Administrators\", link: \"/app/usermanage/admin\" },\n      { label: \"Users\", link: \"/app/usermanage/user\" },\n    ],\n  },\n  {\n    id: 1,\n    label: \"Company\",\n    link: \"/app/company\",\n    icon: <BusinessOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 2,\n    label: \"Client\",\n    link: \"/app/client\",\n    icon: <PeopleAltOutlined fontSize=\"small\" />,\n\n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/sales\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\" />,\n  },\n  {\n    id: 4,\n    label: \"Schedule\",\n    link: \"/app/schedule\",\n    icon: <TimerOutlined fontSize=\"small\" />,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{ color: 'white' }}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div className={classes.sidebarList} style={{ justifyContent: 'center', alignSelf: 'center',}}>\n        <IconButton style={{ color: 'white', fontSize: 14, fontWeight: 'bold' }}\n          onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }}>\n          <ArrowBackIcon style={{marginRight: 5}}/>\n          Log Out\n        </IconButton>\n      </div>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"../../assets/images/logo.png\";\n\nexport default function Error() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      {/* <div className={classes.logotype}>\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\n          Diago Admin\n        </Typography>\n      </div> */}\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorbrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  pageTitleContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n  typo: {\n    color: theme.palette.text.hint,\n  },\n  button: {\n    padding: '8px 8px',\n    fontSize: 12,\n    width: '100%',\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    \"&:active\": {\n      boxShadow: theme.customShadows.widgetWide,\n    },\n  },\n  buttonContainer: {\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: 'max-content',\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: 'flex-end',\n    padding: \"5px 0 5px 0\"\n  }\n}));\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\nimport { Print } from \"@material-ui/icons\";\n\nexport default function PageTitle(props) {\n  var classes = useStyles();\n\n  const iconVar = [];\n  iconVar[\"Add New\"] = <AddIcon />\n  iconVar[\"Add Income\"] = <AddIcon />\n  iconVar[\"Add Expense\"] = <AddIcon />\n  iconVar[\"Print\"] = <Print />\n  iconVar[\"Import\"] = <CloudUploadIcon />\n  iconVar[\"Export\"] = <CloudDownloadIcon />\n\n  let buttonCount = 1;\n  let lgSpan = [0];\n  let mdSpan = [0];\n  let smSpan = [0];\n  if (props.button) {\n    buttonCount = props.button.length;\n    lgSpan = [2, 4, 4, 6]\n    mdSpan = [4, 6, 6, 8]\n    smSpan = [4, 4, 8, 12]\n  }\n\n  const buttonHandler = (e, item, category) => {\n    console.log(e, item, category);\n    switch (category) {\n      case 'admin':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/admin/add\");\n        }\n        break;\n      case 'user':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/user/add\");\n        }\n        break;\n      case 'company':\n        if (item === 'Add New') {\n          props.history.push(\"/app/company/add\");\n        }\n        break;\n      case 'client':\n        if (item === 'Add New') {\n          props.history.push(\"/app/client/add\");\n        }\n        break;\n      case 'sales':\n        if (item === 'Add New') {\n          props.history.push(\"/app/sales/add\");\n        }\n        break;\n      case 'salesview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesview/add\");\n        }\n        break;\n      case 'clientview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/clientview/add\");\n        }\n        break;\n      default:\n        console.log();\n    }\n  }\n\n  return (\n    <div className={classes.pageTitleContainer}>\n      <Grid container spacing={1} >\n        <Grid item\n          lg={12 - lgSpan[buttonCount - 1]}\n          md={12 - mdSpan[buttonCount - 1]}\n          sm={smSpan[buttonCount - 1] === 12 ? 12 : 12 - smSpan[buttonCount - 1]}\n          xs={12}>\n          <Typography className={classes.typo} variant=\"h2\" size=\"sm\" color=\"myprimary\" weight=\"bold\">\n            {props.title}\n          </Typography>\n        </Grid>\n        {props.button && (\n          <Grid item lg={lgSpan[buttonCount - 1]} md={mdSpan[buttonCount - 1]} sm={smSpan[buttonCount - 1]} xs={12}>\n            <Grid container className={classes.buttonGroup}>\n              {\n                props.button.length > 0 && props.button.map((item, key) => (\n                  <Grid key={key} item className={classes.buttonContainer} lg={12 / buttonCount} md={12 / buttonCount} sm={12 / buttonCount} xs={12}>\n                    <Button\n                      variant={!item.includes(\"Add\") ? \"outlined\" : \"contained\"}\n                      classes={{ root: classes.button }}\n                      size=\"large\"\n                      color=\"primary\"\n                      startIcon={iconVar[item]}\n                      onClick={(e) => buttonHandler(e, item, props.category)}\n                    >\n                      {item}\n                    </Button>\n                  </Grid>\n                ))\n              }\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  status: {\n    width: 50,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n    fontSize: 10,\n    color: \"#FFF\"\n  },\n  draft: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paid: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nexport default function Status({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {[classes.draft]: props.status === 'yes',[classes.paid]: props.status === 'no'}, )}\n    >\n        {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport loadingImage from '../../assets/images/loading.gif';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: '#fff',\r\n    backgroundColor: '#ffffff44',\r\n  },\r\n}));\r\n\r\nexport default function BackdropLoading(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\r\n        <img src={loadingImage} alt=\"Loading ...\"/>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","export const FETCH_ADMIN_REQUEST = 'FETCH_ADMIN_REQUEST';\r\nexport const FETCH_ADMIN_SUCCESS = 'FETCH_ADMIN_SUCCESS';\r\nexport const FETCH_ADMIN_ERROR = 'FETCH_ADMIN_ERROR';","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';","export const FETCH_USERVIEW_REQUEST = 'FETCH_USERVIEW_REQUEST';\r\nexport const FETCH_USERVIEW_SUCCESS = 'FETCH_USERVIEW_SUCCESS';\r\nexport const FETCH_USERVIEW_ERROR = 'FETCH_USERVIEW_ERROR';","export const FETCH_CLIENT_REQUEST = 'FETCH_CLIENT_REQUEST';\r\nexport const FETCH_CLIENT_SUCCESS = 'FETCH_CLIENT_SUCCESS';\r\nexport const FETCH_CLIENT_ERROR = 'FETCH_CLIENT_ERROR';","export const FETCH_CLIENTVIEW_REQUEST = 'FETCH_CLIENTVIEW_REQUEST';\r\nexport const FETCH_CLIENTVIEW_SUCCESS = 'FETCH_CLIENTVIEW_SUCCESS';\r\nexport const FETCH_CLIENTVIEW_ERROR = 'FETCH_CLIENTVIEW_ERROR';","export const FETCH_COMPANY_REQUEST = 'FETCH_COMPANY_REQUEST';\r\nexport const FETCH_COMPANY_SUCCESS = 'FETCH_COMPANY_SUCCESS';\r\nexport const FETCH_COMPANY_ERROR = 'FETCH_COMPANY_ERROR';","export const FETCH_SCHEDULE_REQUEST = 'FETCH_SCHEDULE_REQUEST';\r\nexport const FETCH_SCHEDULE_SUCCESS = 'FETCH_SCHEDULE_SUCCESS';\r\nexport const FETCH_SCHEDULE_ERROR = 'FETCH_SCHEDULE_ERROR';","export const FETCH_SCHEDULEVIEW_REQUEST = 'FETCH_SCHEDULEVIEW_REQUEST';\r\nexport const FETCH_SCHEDULEVIEW_SUCCESS = 'FETCH_SCHEDULEVIEW_SUCCESS';\r\nexport const FETCH_SCHEDULEVIEW_ERROR = 'FETCH_SCHEDULEVIEW_ERROR';","export const FETCH_SALESCLIENT_REQUEST = 'FETCH_SALESCLIENT_REQUEST';\r\nexport const FETCH_SALESCLIENT_SUCCESS = 'FETCH_SALESCLIENT_SUCCESS';\r\nexport const FETCH_SALESCLIENT_ERROR = 'FETCH_SALESCLIENT_ERROR';","export const FETCH_SALESCLIENTVIEW_REQUEST = 'FETCH_SALESCLIENTVIEW_REQUEST';\r\nexport const FETCH_SALESCLIENTVIEW_SUCCESS = 'FETCH_SALESCLIENTVIEW_SUCCESS';\r\nexport const FETCH_SALESCLIENTVIEW_ERROR = 'FETCH_SALESCLIENTVIEW_ERROR';","// export const SERVER_URL = \"http://localhost:4000/\";\r\nexport const SERVER_URL = \"http://admin.asile.id:4000/\";\r\nexport const GOOGLE_MAP_API_KEY = \"AIzaSyDJe5pWyxzTkHoBFRdwJ1-6UcZ_DJZZ2dQ\"","import { fetchAdminRequest, fetchAdminSuccess, fetchAdminError } from \"../../redux/actions/AdminAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import AdminReducer from \"../../redux/reducers/AdminReducer\";\r\n\r\nfunction fetchAdmins() {\r\n    return dispatch => {\r\n        dispatch(fetchAdminRequest());\r\n        const body = { isAdmin: 1 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchAdminSuccess(res));\r\n                console.log(\"Get Admin===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchAdminError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchAdmins;","import {\r\n  FETCH_ADMIN_REQUEST,\r\n  FETCH_ADMIN_SUCCESS,\r\n  FETCH_ADMIN_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchAdminRequest() {\r\n    return {\r\n        type: FETCH_ADMIN_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchAdminSuccess(admin) {\r\n  console.log(\"action===>\", admin)\r\n    return {\r\n        type: FETCH_ADMIN_SUCCESS,\r\n        admin: admin\r\n    }\r\n}\r\n\r\nexport function fetchAdminError(error) {\r\n    return {\r\n        type: FETCH_ADMIN_ERROR,\r\n        error: error\r\n    }\r\n}","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nexport const loginApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}login`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            console.log(\"login response ===> \", res);\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}\r\n\r\nexport const signUpApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}signup`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}","import React from \"react\";\nimport { loginApi, signUpApi } from \"../services/auth/Auth\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\nvar adminID = 0;\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return { ...state, loading: true, isAuthenticated: true };\n    case \"LOGIN_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: true, adminID: adminID };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"LOGIN_FAILURE\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"SIGNUP_REQUEST\":\n      return { ...state, loading: true, isSignup: true };\n    case \"SIGNUP_SUCCESS\":\n      return { ...state, loading: false, isSignup: state.isSignup };\n    case \"SIGNUP_FAILURE\":\n      return { ...state, loading: false, isSignup: 0 };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n    adminID: localStorage.getItem(\"id_token\")\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signUp, signOut };\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'LOGIN_REQUEST', history: history });\n\n  // auth api\n  loginApi({ email: login, password: password }).then(res => {\n    if (res.data.user_id == null || res.data.user_id == undefined) {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login');\n    }\n    setTimeout(() => {\n      let check_id = res.data.isSuperAdmin;\n      if (check_id == 1) {\n        localStorage.setItem('id_token', 1)\n        adminID = 1\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS', token: res.data.rememberToken })\n\n        history.push('/app')\n      } else if (check_id == 0) {\n        localStorage.setItem('id_token', 2)\n        localStorage.setItem('company_id', res.data.company_id)\n        adminID = 2\n        setError(null)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS' })\n\n        history.push('/app')\n      } else {\n        history.push('/login');\n      }\n    }, 1000);\n  }).catch(err => {\n    setTimeout(() => {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login')\n      setError(err);\n      setIsLoading(false);\n    }, 3000);\n  })\n\n}\n\nfunction signUp(dispatch, full_name, password, email, phone_number, company_id, isAdmin, isActive, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'SIGNUP_REQUEST', history: history });\n\n  // auth api\n  signUpApi({ full_name: full_name, password: password, email: email, phone_number: phone_number, company_id: company_id, isAdmin: isAdmin, isActive: isActive }).then(res => {\n    if (res.data.user_id != null) {\n      setError(\"This user is already exist!\\n Please use another email.\")\n      history.push('/login');\n    } else if (res.data == null) {\n      setError(\"The company id is not exist.\")\n      history.push('/login');\n    } else {\n      setTimeout(() => {\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n        history.push('/success')\n      }, 2000);\n    }\n  }).catch(err => {\n    dispatch({ type: \"SIGNUP_FAILURE\" });\n    history.push('/login')\n    setError(err);\n    setIsLoading(false);\n  })\n\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchAdmins from \"../../../services/admins/AdminService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport { Edit } from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction AdminPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const adminData = useSelector(state => state.admin);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let admin = useUserState();\n\n  useEffect(() => {\n    props.fetchAdmins();// call backend\n    console.log(\"Admin Data === > \", adminData);\n    setDataSource(adminData.admin);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  console.log(\"Edit Event===> \", value)\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  //Edit admin\n  const actionEdit = (e, i) => {\n    history.push(\"/app/usermanage/admin/\" + i + \"/edit\");\n\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = adminData.admin[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    /* onRowClick: (row, meta) => {\n      onRowClick(row, meta)\n    },\n    onRowsSelect: (cur, all) => {\n      onRowSelect(cur, all)\n    },\n */\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Administrators\" button={[\"Add New\"]} data={dataSource} category=\"admin\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n          <MUIDataTable\n            title={\"Administrators\"}\n            // data={dataSource}\n            data={adminData.admin}\n            columns={columns}\n            options={options}\n          />\n          {/* </MuiThemeProvider> */}\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchAdmins: fetchAdmins\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  menuItems = [],\n  header,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper}>\n      <Paper className={classes.paper} classes={{ root: classes.widgetRoot }}>\n        <div className={classes.widgetHeader}>\n          {header ? (\n            header\n          ) : (\n              <React.Fragment>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  {title}\n                </Typography>\n                {!disableWidgetMenu && (\n                  <IconButton\n                    color=\"primary\"\n                    classes={{ root: classes.moreButton }}\n                    aria-owns=\"widget-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={() => setMoreMenuOpen(true)}\n                    buttonRef={setMoreButtonRef}\n                  >\n                    <MoreIcon />\n                  </IconButton>\n                )}\n              </React.Fragment>\n            )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        {\n          menuItems.map((menu, index) => (\n            <MenuItem key={index}>\n              <Typography>{menu}</Typography>\n            </MenuItem>\n          ))\n        }\n        {/* <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem> */}\n      </Menu>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n    /**\r\n     * EditInvoice.js\r\n     */\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n      padding: \"0 15px 0 15px\"\r\n    },\r\n    addButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    /**\r\n     * Custom Combobox\r\n     */\r\n    comboContainer: {\r\n      marginLeft: theme.spacing(1),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    addIcon: {\r\n      marginLeft: \"5px\"\r\n    },\r\n    autoRoot: {\r\n      marginTop: \"-8px\",\r\n      marginBottom: 0,\r\n    },\r\n    //Custom Combobox End\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { TextField, FormControl } from \"@material-ui/core\";\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomInput(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <TextField\r\n                // error\r\n                multiline={props.multiline}\r\n                rows={4}\r\n                required\r\n                label={props.title}\r\n                // defaultValue=\"Hello World\"\\\r\n                type={props.type}\r\n                value={props.value}\r\n                // helperText=\"Incorrect entry.\"\r\n                onChange={(e) => props.handleChange(e)}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, Divider, TextField, Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n/**\r\n * \r\n * @param {\r\n * \r\n * require * value * items\r\n * handleChange, addItem\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomCombobox({ required = false, ...props }) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    const defaultProps = {\r\n        options: props.items,\r\n        getOptionLabel: (option) => option,\r\n    };\r\n    return (\r\n        <Grid container className={classes.comboContainer}>\r\n            <Grid item md={props.addbtn ? 10 : 12}>\r\n                <Autocomplete\r\n                    classes={{root: classes.autoRoot}}\r\n                    {...defaultProps}\r\n                    id={props.name}\r\n                    debug={false}\r\n                    multiple={false}\r\n                    openOnFocus={true}\r\n                    value={props.value}\r\n                    renderOption={(option) => option}\r\n                    onChange={(e, value) => { console.log(e, value); props.handleChange(value) }}\r\n                    renderInput={(params) => <TextField {...params} required={props.req} label={props.name} margin=\"normal\" />}\r\n                />\r\n            </Grid>\r\n            {props.addbtn ? <Grid item md={2}>\r\n                <Tooltip title=\"Add Item\">\r\n                    <IconButton className={classes.addIcon}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n                : null}\r\n        </Grid>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  notificationContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  notificationContained: {\n    borderRadius: 45,\n    height: 45,\n    boxShadow: theme.customShadows.widgetDark,\n  },\n  notificationContainedShadowless: {\n    boxShadow: \"none\",\n  },\n  notificationIconContainer: {\n    minWidth: 45,\n    height: 45,\n    borderRadius: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 24,\n  },\n  notificationIconContainerContained: {\n    fontSize: 18,\n    color: \"#FFFFFF80\",\n  },\n  notificationIconContainerRounded: {\n    marginRight: theme.spacing(2),\n  },\n  containedTypography: {\n    color: \"white\",\n  },\n  messageContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexGrow: 1,\n  },\n  extraButton: {\n    color: \"white\",\n    \"&:hover, &:focus\": {\n      background: \"transparent\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n","import { fetchCompanyRequest, fetchCompanySuccess, fetchCompanyError } from \"../../redux/actions/CompanyAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchCompany() {\r\n    console.log('fetching Company ...')\r\n    return dispatch => {\r\n        dispatch(fetchCompanyRequest());\r\n        \r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getCompany`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchCompanySuccess(res));\r\n                console.log(\"Get Company===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCompanyError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchCompany;","import {\r\n    FETCH_COMPANY_REQUEST,\r\n    FETCH_COMPANY_SUCCESS,\r\n    FETCH_COMPANY_ERROR\r\n  } from '../constants'\r\n   \r\n  export function fetchCompanyRequest() {\r\n      return {\r\n          type: FETCH_COMPANY_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanySuccess(company) {\r\n      return {\r\n          type: FETCH_COMPANY_SUCCESS,\r\n          company: company\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanyError(error) {\r\n      return {\r\n          type: FETCH_COMPANY_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditAdmin(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const adminData = useSelector(state => state.admin);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    company_entity_name: '',\n    isActive: false\n  })\n\n  const update_id = props.match.params.admin\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n    getAdminInfo(update_id)\n\n  }, [])\n\n  const getAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          company_id: data[0].company_id.toString(),\n          company_entity_name: data[0].company_entity_name,\n          isActive: data[0].isActive\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.company_id,\n        isAdmin: true,\n        isActive: state.isActive\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.company)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_entity_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n    if (object[0] != null) {\n      setState({\n        ...state,\n        company_id: object[0].company_id.toString()\n      })\n    }\n\n  }\n  //input fields event\n  const handleChange = (e, field) => {\n    let comboFields = ['company_entity_name'];\n    if (comboFields.includes(field)) {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSave = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n      notify(\"Please enter company name.\")\n      return\n    } else {\n      updateAdminInfo(update_id)\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/admin\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit Admin\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                  handleChange={(e) => handleChange(e, 'company_entity_name')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSave()}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditAdmin);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddAdmin(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        company_id: \"\",\r\n        company_entity_name: \"\"\r\n    })\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    isAdmin: true,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/admin\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Admin\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                                {/* <CustomInput title=\"Company ID\" value={state.company_id} handleChange={(e) => handleChange(e, 'company_id')} /> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddAdmin);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserRequest, fetchUserSuccess, fetchUserError } from \"../../redux/actions/UserAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUsers() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserRequest());\r\n        const body = { isAdmin: 0 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchUserSuccess(res));\r\n                console.log(\"Get User===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchUserError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchUsers;","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchUserRequest() {\r\n    return {\r\n        type: FETCH_USER_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserSuccess(user) {\r\n  console.log(\"User Action +++>\", user)\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\nexport function fetchUserError(error) {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel,  Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUsers from \"../../../services/users/UserService\";\nimport { useUserState } from \"../../../context/UserContext\";\n\nfunction UserPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userData = useSelector(state => state.user);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUsers();\n    console.log(userData, props.user, user);\n    setDataSource(userData.data);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                  onClick={(e) => {\n                    actionEdit(e, value)\n                  }}\n                >\n                  <Edit style={{fontSize:'18'}}/>\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  // const actionClick = (event, i) => {\n  //   setSelectedRowIndex(i);\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const actionClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  //Edit user\n  const actionEdit = (e, i) => {\n    setSelectedRowIndex(i)\n    console.log(\"=================>\",selectedRowIndex, i);\n    history.push(\"/app/usermanage/user/\" + i + \"/edit\");\n    // history.push(\"/app/usermanage/user/\" + selectedRowIndex + \"/edit\");\n  }\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n      \n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = userData.user[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    /* onRowClick: (row, meta) => {\n      onRowClick(row, meta)\n    },\n    onRowsSelect: (cur, all) => {\n      onRowSelect(cur, all)\n    },\n */\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Users\" button={[\"Add New\"]} data={dataSource} category=\"user\" history={history}/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n            <MUIDataTable\n              title={\"Users\"}\n              data={userData.user}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          {/* </MuiThemeProvider> */}\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open}/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUsers: fetchUsers\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPage);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditUser(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const userData = useSelector(state => state.user);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    password: \"\",\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    company_entity_name: '',\n    isActive: false\n  })\n\n  const update_id = props.match.params.user\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.data);\n    getUserInfo(update_id)\n\n  }, [])\n\n  const getUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          password: data[0].password,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          company_id: data[0].company_id.toString(),\n          company_entity_name: data[0].company_entity_name,\n          isActive: data[0].isActive\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.company_id,\n        isAdmin: false,\n        isActive: state.isActive\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.data)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_entity_name);\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n  const setCompanyIdfromCompanyName = (company_entity_name) => {\n    let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n    if (object[0] != null) {\n      setState({\n        ...state,\n        company_id: object[0].company_id.toString()\n      })\n    }\n\n  }\n  //input fields event\n  const handleChange = (e, field) => {\n    let comboFields = ['company_entity_name'];\n    if (comboFields.includes(field)) {\n      setCompanyIdfromCompanyName(e)\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSave = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n      notify(\"Please enter company name.\")\n      return\n    } else {\n      updateUserInfo(update_id)\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/user\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit User\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                  handleChange={(e) => handleChange(e, 'company_entity_name')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSave()}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditUser);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddUser(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        company_id: \"\",\r\n        company_entity_name: \"\"\r\n    })\r\n\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    isAdmin: false,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/user\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New User\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\"\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} addbtn={false} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddUser);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from \"@material-ui/icons\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction CompanysPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const companyData = useSelector(state => state.company);\n\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n  }, [])\n  \n  //Show notification\n  const notify = (message) => toast(message);\n\n  const columns = [\n    {\n      name: \"company_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"time_limit_per_schedule\",\n      label: \"Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"late_policy\",\n      label: \"Late Policy\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"min_schedule_time\",\n      label: \"Min Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"max_schedule_time\",\n      label: \"Max Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"upload\",\n      label: \"Upload\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    console.log(\"====\", dataSource[i]);\n    history.push(\"/app/company/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = companyData.company[data.dataIndex].company_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            company_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteCompany`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Companies\" button={[\"Add New\"]} data={dataSource} category=\"company\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Companies\"}\n            data={companyData.company}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanysPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n// import LocationPicker from 'react-location-picker';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\n\r\nexport default function AddCompany(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n\r\n    // const [location, setLocation] = useState('');\r\n    // const [defaultPosition, setDefaultPosition] = useState({\r\n    //     lat: 0,\r\n    //     lng: 0\r\n    // })\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    // input form datas\r\n\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: '',\r\n        address: '',\r\n        phone_number: \"\",\r\n        time_limit_per_schedule: 30,\r\n        late_policy: 60,\r\n        min_schedule_time: 60,\r\n        max_schedule_time: 360,\r\n        notes: 1,\r\n        upload: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n        // navigator.geolocation.getCurrentPosition(function (position) {\r\n        //     console.log(\"Latitude is :\", position.coords.latitude);\r\n        //     console.log(\"Longitude is :\", position.coords.longitude);\r\n        //     setDefaultPosition({\r\n        //         lat: position.coords.latitude,\r\n        //         lng: position.coords.longitude\r\n        //     })\r\n        // });\r\n    }, [])\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\r\n            setState({ ...state, [e.target.name]: e.target.checked });\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const addItem = (field) => {\r\n        console.log(field)\r\n    }\r\n\r\n    //date picker event\r\n    const handleDateChange = (date, field) => {\r\n        setState(prevState => ({\r\n            ...prevState, [field]: date\r\n        }))\r\n    };\r\n\r\n\r\n    // const handleLocationChange = ({ position, address, places }) => {\r\n\r\n    //     // Set new location\r\n    //     console.log(\"Address ====> \", address)\r\n    //     setLocation({\r\n    //         address: address\r\n    //     });\r\n    // }\r\n\r\n    const onSave = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter company entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter company owner name.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter company address.\")\r\n            return\r\n        } else if (state.min_schedule_time < 0) {\r\n            notify(\"Please enter valid minimum schedule time.\")\r\n            return\r\n        } else if (state.max_schedule_time < 0) {\r\n            notify(\"Please enter valid maximum schedule time.\")\r\n            return\r\n        } else if (state.min_schedule_time > state.max_schedule_time) {\r\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\r\n            return\r\n        } else if (state.time_limit_per_schedule < 0) {\r\n            notify(\"Please enter valid time limit.\")\r\n            return\r\n        } else if (state.late_policy < 0) {\r\n            notify(\"Please enter valid late policy.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    company_entity_name: state.entity_name,\r\n                    company_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    notes: state.notes,\r\n                    upload: state.upload,\r\n                    time_limit_per_schedule: state.time_limit_per_schedule,\r\n                    late_policy: state.late_policy,\r\n                    min_schedule_time: state.min_schedule_time,\r\n                    max_schedule_time: state.max_schedule_time\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addCompany`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.company_id != null) {\r\n                        notify(\"This company is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/company\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_schedule_time')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\r\n                                    label=\"Notes\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\r\n                                    label=\"Upload\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                {/* <LocationPicker\r\n                                    containerElement={<div style={{ height: '100%' }} />}\r\n                                    mapElement={<div style={{ height: '400px' }} />}\r\n                                    defaultPosition={defaultPosition}\r\n                                    onChange={handleLocationChange}\r\n                                /> */}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditCompany(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        phone_number: \"\",\n        time_limit_per_schedule: 0,\n        late_policy: 0,\n        min_schedule_time: 0,\n        max_schedule_time: 0,\n        notes: 0,\n        upload: 0\n    })\n    const update_id = props.match.params.company\n    useEffect(() => {\n        getCompanyInfo(update_id)\n    }, [])\n\n\n    const getCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getCompanyById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.company_entity_name,\n                    owner_name: data.company_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    time_limit_per_schedule: data.time_limit_per_schedule,\n                    late_policy: data.late_policy,\n                    min_schedule_time: data.min_schedule_time,\n                    max_schedule_time: data.max_schedule_time,\n                    notes: data.notes,\n                    upload: data.upload\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    const updateCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id,\n                company_entity_name: state.entity_name,\n                company_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                notes: state.notes,\n                upload: state.upload,\n                time_limit_per_schedule: state.time_limit_per_schedule,\n                late_policy: state.late_policy,\n                min_schedule_time: state.min_schedule_time,\n                max_schedule_time: state.max_schedule_time\n            })\n        };\n        fetch(`${SERVER_URL}updateCompany`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    //input fields event\n    const handleChange = (e, field) => {\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const addItem = (field) => {\n        console.log(field)\n    }\n\n    //date picker event\n    const handleDateChange = (date, field) => {\n        setState(prevState => ({\n            ...prevState, [field]: date\n        }))\n    };\n\n    //file picker event\n    const handleCapture = ({ target }) => {\n        const fileReader = new FileReader();\n        // const name = target.accept.includes('image') ? 'images' : 'videos';\n        setState((prevState) => ({\n            ...prevState, file: target.files[0]\n        }));\n\n        /* fileReader.readAsDataURL(target.files[0]);\n        fileReader.onload = (e) => {\n          setState((prevState) => ({\n            ...prevState, file: e.target.result\n          }));\n        }; */\n    };\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.min_schedule_time < 0) {\n            notify(\"Please enter valid minimum schedule time.\")\n            return\n        } else if (state.max_schedule_time < 0) {\n            notify(\"Please enter valid maximum schedule time.\")\n            return\n        } else if (state.min_schedule_time > state.max_schedule_time) {\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\n            return\n        } else if (state.time_limit_per_schedule < 0) {\n            notify(\"Please enter valid time limit.\")\n            return\n        } else if (state.late_policy < 0) {\n            notify(\"Please enter valid late policy.\")\n            return\n        } else {\n            updateCompanyInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/company\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_schedule_time')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\n                                    label=\"Notes\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\n                                    label=\"Upload\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditCompany);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { fetchClientRequest, fetchClientSuccess, fetchClientError } from \"../../redux/actions/ClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ClientReducer from \"../../redux/reducers/ClientReducer\";\r\n\r\nfunction fetchClient() {\r\n    return dispatch => {\r\n        dispatch(fetchClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClient;","import {\r\n    FETCH_CLIENT_REQUEST,\r\n    FETCH_CLIENT_SUCCESS,\r\n    FETCH_CLIENT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchClientRequest() {\r\n      return {\r\n          type: FETCH_CLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientSuccess(client) {\r\n    console.log(\"action===>\", client)\r\n      return {\r\n          type: FETCH_CLIENT_SUCCESS,\r\n          client: client\r\n      }\r\n  }\r\n  \r\n  export function fetchClientError(error) {\r\n      return {\r\n          type: FETCH_CLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientsPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientData = useSelector(state => state.client);\n\n  useEffect(() => {\n    console.log(clientData)\n    props.fetchClient()\n    setDataSource(clientData.client);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/client/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientData.client[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"client\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Clients\"}\n            data={clientData.client}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientsPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: '',\r\n        company_entity_name: ''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_entity_name);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n\r\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\r\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\r\n        if (object[0] != null) {\r\n            setState({\r\n                ...state,\r\n                company_id: object[0].company_id.toString()\r\n            })\r\n        }\r\n\r\n    }\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_entity_name'];\r\n        if (comboFields.includes(field)) {\r\n            setCompanyIdfromCompanyName(e)\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter client owner name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_entity_name == null || state.company_entity_name == \"\") {\r\n            notify(\"Please enter company name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    client_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/client\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: '',\n        company_entity_name: ''\n    })\n\n    const update_id = props.match.params.client\n    useEffect(() => {\n        props.fetchCompany();\n        setDataSource(companyData.company);\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    owner_name: data.client_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    company_id: data.company_id.toString(),\n                    company_entity_name: data.company_entity_name,\n                    location: data.location\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                client_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', original, companyData.company)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    tmp.push(item?.company_entity_name);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n\n    const setCompanyIdfromCompanyName = (company_entity_name) => {\n        let object = companyData.company.filter(item => item.company_entity_name == company_entity_name)\n        if (object[0] != null) {\n            setState({\n                ...state,\n                company_id: object[0].company_id.toString()\n            })\n        }\n\n    }\n    //input fields event\n    const handleChange = (e, field) => {\n        let comboFields = ['company_entity_name'];\n        if (comboFields.includes(field)) {\n            setCompanyIdfromCompanyName(e)\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter client entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter client owner name.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter client address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter client location.\")\n            return\n        } else if (state.phone_number.length != 10) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_entity_name.length == null || state.company_entity_name == \"\") {\n            notify(\"Please enter company name.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/client\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company Name\" items={companies} value={state.company_entity_name}\n                                    handleChange={(e) => handleChange(e, 'company_entity_name')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_SALESCLIENT_REQUEST, FETCH_SALESCLIENT_SUCCESS, FETCH_SALESCLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    sales: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                sales: action.sales\r\n            }\r\n        case FETCH_SALESCLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesClientRequest, fetchSalesClientSuccess, fetchSalesClientError } from \"../../redux/actions/SalesClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClient() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientSuccess(res));\r\n                console.log(\"Get SalesClient===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClient;","import {\r\n    FETCH_SALESCLIENT_REQUEST,\r\n    FETCH_SALESCLIENT_SUCCESS,\r\n    FETCH_SALESCLIENT_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesClientRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientSuccess(sales) {\r\n    console.log(\"action===>\", sales)\r\n      return {\r\n          type: FETCH_SALESCLIENT_SUCCESS,\r\n          sales: sales\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesClient from \"../../services/sales/SalesClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesData = useSelector(state => state.sales);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    console.log(salesData)\n    props.fetchSalesClient()\n    setDataSource(salesData.sales);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/sales/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesData.sales[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"sales\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Sales Clients\"}\n            // data={dataSource}\n            data={salesData.sales}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClient: fetchSalesClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport fetchUsers from \"../../services/users/UserService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.user);\n    const clientData = useSelector(state => state.client);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.sales\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: '',\n        clients: [],\n    })\n\n    useEffect(() => {\n        props.fetchUsers();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getClientsByCompanyId = (user_name) => {\n        let company_id = userData.user.filter(item => item.full_name == user_name)[0].company_id.toString()\n        console.log(\"======================>\", company_id)\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                // clientData.client = data\n                let temp = getClientNameList(data)\n                setState(prevState => ({\n                    ...prevState,\n                    client_name: '',\n                    clients: temp\n                }))\n\n            })\n            .catch(error => {\n                notify('Something went wrong!\\n' + error)\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.client)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    // const clients = getClientNameList(clientData.client)\n\n    // console.log(\"Client Data =====> \", clients.map(item => {\n    //     return item?.value\n    // }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.user)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.user)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n            getClientsByCompanyId(e)\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (state.clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: state.clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/sales\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={state.clients.map(item => {\n                                    return item?.value\n                                })} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUsers: fetchUsers,\n    fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchUsers from \"../../services/users/UserService\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const userData = useSelector(state => state.user);\r\n    const clientData = useSelector(state => state.client);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: '',\r\n        company_id: '',\r\n        clients: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchUsers();\r\n    }, [])\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    const getClientsByCompanyId = (user_name) => {\r\n        let company_id = userData.user.filter(item => item.full_name == user_name)[0].company_id.toString()\r\n        console.log(\"======================>\", company_id)\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                company_id: company_id\r\n            })\r\n        };\r\n        fetch(`${SERVER_URL}getClientByCompanyId`, requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n                console.log(\"Response Data=============>\", data)\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n                // clientData.client = data\r\n                let temp = getClientNameList(data)\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    clients: temp\r\n                }))\r\n\r\n            })\r\n            .catch(error => {\r\n                notify('Something went wrong!\\n' + error)\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    const getClientNameList = (original) => {\r\n        // console.log('originall ====> ', original, clientData.client)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    // console.log(\"Client Data =====> \", clients.map(item => {\r\n    //     return item?.value\r\n    // }))\r\n\r\n    const getUserNameList = (original) => {\r\n        console.log('originall ====> ', original, userData.user)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const users = getUserNameList(userData.user)\r\n\r\n\r\n    //input fields event\r\n    const handleUserChange = (e, field) => {\r\n\r\n        if (field == \"user_name\") {\r\n            if (users.filter(item => item.value === e)[0] != null) {\r\n\r\n                setState({\r\n                    ...state,\r\n                    user_name: e,\r\n                    user_id: users.filter(item => item.value == e)[0].key,\r\n\r\n                })\r\n\r\n                \r\n\r\n            }\r\n            getClientsByCompanyId(e)\r\n        }\r\n\r\n    }\r\n\r\n    const handleClientChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (state.clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: state.clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.user_name == null || state.user_name == \"\") {\r\n            notify(\"Please enter company user name.\")\r\n            return\r\n        } else if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.user_id,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/sales\");\r\n    }\r\n\r\n    const userList = users.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    // const clientList = state.clients.map(item => {\r\n    //     return item?.value\r\n    // })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\r\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={state.clients.map(item => {\r\n                                    return item?.value\r\n                                })} value={state.client_name}\r\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    client: state.client\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchUsers: fetchUsers,\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { fetchScheduleRequest, fetchScheduleSuccess, fetchScheduleError } from \"../../redux/actions/ScheduleAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ScheduleReducer from \"../../redux/reducers/ScheduleReducer\";\r\n\r\nfunction fetchSchedule() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSchedule`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSchedule;","import {\r\n    FETCH_SCHEDULE_REQUEST,\r\n    FETCH_SCHEDULE_SUCCESS,\r\n    FETCH_SCHEDULE_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchScheduleRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULE_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleSuccess(schedule) {\r\n    console.log(\"action===>\", schedule)\r\n      return {\r\n          type: FETCH_SCHEDULE_SUCCESS,\r\n          schedule: schedule\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULE_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSchedule from \"../../services/schedule/ScheduleService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction SchedulePage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleData = useSelector(state => state.schedule);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n\n  useEffect(() => {\n    console.log(scheduleData)\n    props.fetchSchedule();\n    setDataSource(scheduleData.data);\n  }, [])\n\n  console.log(\"schedule data=====>\", scheduleData)\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Company Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check in\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Is Late\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"exceed_time_limit\",\n      label: \"Exceed Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  \n  /// Table Action event end\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = scheduleData.schedule[data.dataIndex].schedule_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            schedule_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSchedule`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Schedules\"}\n            data={scheduleData.schedule}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSchedule: fetchSchedule\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SchedulePage);\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n  container: {\r\n    paddingTop: 20\r\n  },\r\n  version: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport { Typography } from \"../Wrappers/Wrappers\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// components\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function Footer(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Powered By Asile\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} className={classes.version}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Version 0.0.1\r\n                </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport AdminPage from \"../../pages/UserManage/Admins/Admins\";\nimport EditAdminPage from \"../../pages/UserManage/Admins/EditAdmin\";\nimport AddAdminPage from \"../../pages/UserManage/Admins/AddAdmin\";\nimport UserPage from \"../../pages/UserManage/Users/Users\";\nimport EditUserPage from \"../../pages/UserManage/Users/EditUser\";\nimport AddUserPage from \"../../pages/UserManage/Users/AddUser\";\n\nimport CompanyPage from \"../../pages/Companys/Companys\";\nimport AddCompanyPage from \"../../pages/Companys/AddCompany\";\nimport EditCompanyPage from \"../../pages/Companys/EditCompany\";\nimport ClientsPage from \"../../pages/Client/Client\";\nimport AddClientPage from \"../../pages/Client/AddClient\";\nimport EditClientPage from \"../../pages/Client/EditClient\";\nimport SalesPage from \"../../pages/Sales/Sales\";\nimport EditSalesPage from \"../../pages/Sales/EditSales\";\nimport AddSalesPage from \"../../pages/Sales/AddSales\";\nimport SchedulePage from \"../../pages/Schedule/Schedule\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n            \n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer,{\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n            }\n          )}>\n            <Grid>\n              <Switch>\n                <Route exact path=\"/app/usermanage\" component={AdminPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/usermanage/admin\" />}\n                />\n                <Route exact path=\"/app/usermanage/admin\" component={AdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/:admin/edit\" component={EditAdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/add\" component={AddAdminPage} />\n                <Route exact path=\"/app/usermanage/user\" component={UserPage} /> \n                <Route exact path=\"/app/usermanage/user/:user/edit\" component={EditUserPage} /> \n                <Route exact path=\"/app/usermanage/user/add\" component={AddUserPage} />\n                <Route exact path=\"/app/company\" component={CompanyPage} />\n                <Route exact path=\"/app/company/add\" component={AddCompanyPage} />\n                <Route exact path=\"/app/company/:company/edit\" component={EditCompanyPage} />\n                <Route exact path=\"/app/client\" component={ClientsPage} />\n                <Route exact path=\"/app/client/add\" component={AddClientPage} />\n                <Route exact path=\"/app/client/:client/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/sales\" component={SalesPage} />\n                <Route exact path=\"/app/sales/:sales/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/sales/add\" component={AddSalesPage} />\n                <Route exact path=\"/app/schedule\" component={SchedulePage} />\n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  MenuOpen, LocalAtmOutlined, ShoppingCartOutlined,\n  AccountBalanceOutlined, AssessmentOutlined,\n  FormatAlignJustifyOutlined, FormatAlignLeftOutlined, People, Settings, AccountCircleOutlined, BusinessOutlined, PeopleAltOutlined, TransferWithinAStationOutlined, TimerOutlined\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/userview\",\n    icon: <AccountCircleOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 1,\n    label: \"Client\",\n    link: \"/app/clientview\",\n    icon: <PeopleAltOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 2,\n    label: \"Schedule\",\n    link: \"/app/scheduleview\",\n    icon: <TimerOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/salesview\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\"/>,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      \n      \n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{color:'white'}}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n      <div style={{justifyContent: 'center', alignSelf: 'center', marginTop: 50 }}>\n        <IconButton  style={{color:'white', fontSize: 14, fontWeight: 'bold'}}\n            onClick={() => {\n          localStorage.clear();\n          window.location.reload();\n        }}>\n          <ArrowBackIcon\n           style={{marginRight: 5}}\n          />\n          Log Out\n        </IconButton>\n      </div>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserViewRequest, fetchUserViewSuccess, fetchUserViewError } from \"../../redux/actions/UserViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUserView() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUserById`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        throw (res.error);\r\n                    }\r\n                    dispatch(fetchUserViewSuccess(res));\r\n                    return res;\r\n                })\r\n                .catch(error => {\r\n                    dispatch(fetchUserViewError(error));\r\n                })\r\n        }, 1000);\r\n\r\n    }\r\n}\r\n\r\nexport default fetchUserView;","import {\r\n  FETCH_USERVIEW_REQUEST,\r\n  FETCH_USERVIEW_SUCCESS,\r\n  FETCH_USERVIEW_ERROR\r\n} from '../constants'\r\n\r\nexport function fetchUserViewRequest() {\r\n    return {\r\n        type: FETCH_USERVIEW_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserViewSuccess(userview) {\r\n    return {\r\n        type: FETCH_USERVIEW_SUCCESS,\r\n        userview: userview\r\n    }\r\n}\r\n\r\nexport function fetchUserViewError(error) {\r\n    return {\r\n        type: FETCH_USERVIEW_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { useUserState } from \"../../context/UserContext\";\n\n\nfunction UserViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUserView();\n    setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n  \n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n  };\n\n  if(userviewData.loading){\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Users\" data={dataSource} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n            <MUIDataTable\n              title={\"Users\"}\n              // data={dataSource}\n              data={userviewData.userview}\n              columns={columns}\n              options={options}\n            />\n          {/* </MuiThemeProvider> */}\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open}/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserViewPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchScheduleViewRequest, fetchScheduleViewSuccess, fetchScheduleViewError } from \"../../redux/actions/ScheduleViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n// import ScheduleViewReducer from \"../../redux/reducers/ScheduleViewReducer\";\r\n\r\nfunction fetchScheduleView() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getScheduleByCompanyId`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleViewSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchScheduleView;","import {\r\n    FETCH_SCHEDULEVIEW_REQUEST,\r\n    FETCH_SCHEDULEVIEW_SUCCESS,\r\n    FETCH_SCHEDULEVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchScheduleViewRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewSuccess(scheduleview) {\r\n    console.log(\"action===>\", scheduleview)\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_SUCCESS,\r\n          scheduleview: scheduleview\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector,connect } from \"react-redux\";\nimport fetchScheduleView from \"../../services/scheduleview/ScheduleViewService\";\nimport { bindActionCreators } from \"redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction ScheduleViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleviewData = useSelector(state => state.scheduleview);\n  \n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    console.log(scheduleviewData)\n    props.fetchScheduleView();\n    setDataSource(scheduleviewData.scheduleview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check In\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check Out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Is Late\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"exceed_time_limit\",\n      label: \"Exceed Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  \n  \n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history}/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Schedules\"}\n            data={scheduleviewData.scheduleview}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  scheduleview: state.scheduleview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchScheduleView: fetchScheduleView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleViewPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { FETCH_CLIENTVIEW_REQUEST, FETCH_CLIENTVIEW_SUCCESS, FETCH_CLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    clientview: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENTVIEW_REQUEST:\r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                clientview: action.clientview\r\n            }\r\n        case FETCH_CLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchClientViewRequest, fetchClientViewSuccess, fetchClientViewError } from \"../../redux/actions/ClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ClientViewReducer from \"../../redux/reducers/ClientViewReducer\";\r\n\r\nfunction fetchClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientViewSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClientView;","import {\r\n    FETCH_CLIENTVIEW_REQUEST,\r\n    FETCH_CLIENTVIEW_SUCCESS,\r\n    FETCH_CLIENTVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchClientViewRequest() {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewSuccess(clientview) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_SUCCESS,\r\n          clientview: clientview\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewError(error) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientViewPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientViewData = useSelector(state => state.clientview);\n\n  useEffect(() => {\n    console.log(clientViewData)\n    props.fetchClientView()\n    setDataSource(clientViewData.clientview);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/clientview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientViewData.client[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"clientview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Clients\"}\n            data={clientViewData.clientview}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientViewPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: localStorage.getItem('company_id')\r\n    })\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        const { name, value } = e.target;\r\n        setState(prevState => ({\r\n            ...prevState, [field]: value\r\n        }))\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter client owner name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    client_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/clientview\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            \r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    // fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: localStorage.getItem('company_id')\n    })\n\n    const update_id = props.match.params.clientview\n    useEffect(() => {\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    owner_name: data.client_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    location: data.location\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                client_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id.toString()\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    //input fields event\n    const handleChange = (e, field) => {\n\n        const { name, value } = e.target;\n        setState(prevState => ({\n            ...prevState, [field]: value\n        }))\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter company location.\")\n            return\n        } else if (state.phone_number.length != 10) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_id.length < 1) {\n            notify(\"Please enter company id.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/clientview\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    // company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    // fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { fetchSalesClientViewRequest, fetchSalesClientViewSuccess, fetchSalesClientViewError } from \"../../redux/actions/SalesClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientViewSuccess(res));\r\n                console.log(\"Get SalesClientView===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClientView;","import {\r\n    FETCH_SALESCLIENTVIEW_REQUEST,\r\n    FETCH_SALESCLIENTVIEW_SUCCESS,\r\n    FETCH_SALESCLIENTVIEW_ERROR\r\n  } from '../constants'\r\n  \r\n  export function fetchSalesClientViewRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewSuccess(salesview) {\r\n    console.log(\"action===>\", salesview)\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_SUCCESS,\r\n          salesview: salesview\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    props.fetchSalesClientView()\n    setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"salesview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Sales Clients\"}\n            // data={dataSource}\n            data={salesviewData.salesview}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesViewPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.userview);\n    const clientData = useSelector(state => state.clientview);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.salesview\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: ''\n    })\n\n    useEffect(() => {\n        props.fetchClientView()\n        props.fetchUserView();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.clientview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const clients = getClientNameList(clientData.clientview)\n\n    console.log(\"Client Data =====> \", clients.map(item => {\n        return item?.value\n    }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.userview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.userview)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesview\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    const clientList = clients.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUserView: fetchUserView,\n    fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\r\nimport fetchUserView from \"../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const userData = useSelector(state => state.userview);\r\n    const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchClientView()\r\n        props.fetchUserView();\r\n    }, [])\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const getClientNameList = (original) => {\r\n        console.log('originall ====> ', original, clientData.clientview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const clients = getClientNameList(clientData.clientview)\r\n\r\n    console.log(\"Client Data =====> \", clients.map(item => {\r\n        return item?.value\r\n    }))\r\n\r\n    const getUserNameList = (original) => {\r\n        console.log('originall ====> ', original, userData.userview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const users = getUserNameList(userData.userview)\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == \"user_name\") {\r\n            if(users.filter(item => item.value == e)[0] != null){\r\n                setState({\r\n                ...state,\r\n                user_name: e,\r\n                user_id: users.filter(item => item.value == e)[0].key\r\n            })\r\n            }\r\n            \r\n        } else if (field == \"client_name\") {\r\n            if(clients.filter(item => item.value == e)[0] != null){\r\n                setState({\r\n                ...state,\r\n                client_name: e,\r\n                client_id: clients.filter(item => item.value == e)[0].key\r\n            })\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.user_name == null || state.user_name == \"\") {\r\n            notify(\"Please enter company user name.\")\r\n            return\r\n        } else if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.user_id,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesview\");\r\n    }\r\n\r\n    const userList = users.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    const clientList = clients.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\r\n                                    handleChange={(e) => handleChange(e, 'user_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\r\n                                    handleChange={(e) => handleChange(e, 'client_name')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header/Header\";\nimport Sidebar from \"../Sidebar/Sidebar1\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport UserViewPage from \"../../pages/UserView/UserView\";\nimport ScheduleViewPage from \"../../pages/ScheduleView/ScheduleView\";\nimport ClientViewPage from \"../../pages/ClientView/Client\";\nimport AddClientPage from \"../../pages/ClientView/AddClient\";\nimport EditClientPage from \"../../pages/ClientView/EditClient\";\nimport SalesViewPage from \"../../pages/SalesView/Sales\";\nimport EditSalesPage from \"../../pages/SalesView/EditSales\";\nimport AddSalesPage from \"../../pages/SalesView/AddSales\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n\n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer, {\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n          }\n          )}>\n            <Grid>\n              <Switch>\n                \n                <Route exact path=\"/app/userview\" component={UserViewPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/userview\" />}\n                />\n                <Route exact path=\"/app/scheduleview\" component={ScheduleViewPage} />\n                <Route exact path=\"/app/clientview\" component={ClientViewPage} />\n                <Route exact path=\"/app/clientview/add\" component={AddClientPage} />\n                <Route exact path=\"/app/clientview/:clientview/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/salesview\" component={SalesViewPage} />\n                <Route exact path=\"/app/salesview/:salesview/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/salesview/add\" component={AddSalesPage} />\n                \n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"../../assets/images/logo.png\";\n\nexport default function Success() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n        >\n          Success!\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Your action is done successfully.\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/login\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Go to Login\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n// import background from \"../../assets/images/background.jpg\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    // backgroundImage: background,\n    backgroundColor: theme.palette.primary.main,\n    width: \"60%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    // width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: \"white\",\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: \"40%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    textTransform: \"none\",\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: theme.palette.text.hint + \"40\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  forgetButton: {\n    textTransform: \"none\",\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch, loginUser, signUp } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [confirmValue, setConfirmValue] = useState(\"\");\n  var [phoneNumberValue, setPhoneNumberValue] = useState(\"\");\n  var [companyIDValue, setCompanyIDValue] = useState(\"\");\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  //Login\n  const onLogin = () => {\n    if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } \n    // else if ( passwordValue.length < 6) {\n    //   notify('Password length should be at least 6 characters.')\n    //   return\n    // } \n    else {\n      loginUser(\n        userDispatch,\n        loginValue,\n        passwordValue,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  //Sign up\n  const onSignup = () => {\n    if (nameValue < 0) {\n      notify(\"Please enter name\");\n      return\n    } else if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (phoneNumberValue.length != 10 ) {\n      notify(\"Please enter valid phone number.\")\n      return\n    } else if (companyIDValue.length < 1 ) {\n      notify(\"Please enter company id.\")\n      return\n    } else if ( passwordValue.length < 6) {\n      notify('Password length should be at least 6 characters.')\n      return\n    } else if ( confirmValue.length < 6) {\n      notify('Please confirm password')\n      return\n    } else if ( passwordValue != confirmValue) {\n      notify('Password is not match.')\n      return\n    } else {\n      signUp(\n        userDispatch,\n        nameValue,\n        passwordValue,\n        loginValue,\n        phoneNumberValue,\n        companyIDValue,\n        true,\n        false,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  return (\n    <Grid container className={classes.container}>\n      <ToastContainer />\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome to ASILE!\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                    <Button\n                      disabled={\n                        loginValue.length === 0 || passwordValue.length === 0\n                      }\n                      onClick={onLogin}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                    >\n                      Login\n                    </Button>\n                  )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h4\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  \n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"phone_number\"\n                margin=\"normal\"\n                placeholder=\"Phone Number\"\n                type=\"number\"\n                onChange={e => setPhoneNumberValue(e.target.value)}\n                fullWidth\n              />\n              <TextField\n                id=\"company_id\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={companyIDValue}\n                onChange={e => setCompanyIDValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Company ID\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <TextField\n                id=\"confirm\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={confirmValue}\n                onChange={e => setConfirmValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                    <Button\n                      onClick={onSignup}\n                      disabled={\n                        loginValue.length === 0 ||\n                        passwordValue.length === 0 ||\n                        nameValue.length === 0\n                      }\n                      size=\"large\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      className={classes.createAccountButton}\n                    >\n                      Create your account\n                    </Button>\n                  )}\n              </div>\n\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2020 Asile. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// components\nimport Layout from \"./Layout/Layout\";\nimport Layout1 from \"./Layout/Layout1\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Success from \"../pages/success/success\"\nimport Login from \"../pages/login\";\n\n// context\nimport { useUserState, UserProvider } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated, adminID } = useUserState();\n  console.log('auth ================> ', isAuthenticated)\n  console.log('auth ================> ', adminID)\n  return (\n    <HashRouter>\n      <Switch>\n        {/* if (isAuthenticated == 1) {\n          <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\n        } else if (isAuthenticated == 2) {\n          <Route exact path=\"/\" render={() => <Redirect to=\"/app1\" />} />\n        } */}\n\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\n        <PrivateRoute path=\"/app\" component={(adminID == 1) ? Layout : Layout1} />\n        {/* <PrivateRoute path=\"/app1\" component={Layout1} /> */}\n        <PublicRoute path=\"/login\" component={Login} />\n        <PublicRoute path=\"/success\" component={Success} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n              React.createElement(component, props)\n            )\n        }\n      />\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import {data} from \"../fake-datas/AdminData\"\r\nimport { FETCH_ADMIN_REQUEST, FETCH_ADMIN_SUCCESS, FETCH_ADMIN_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    admin: [],\r\n    error: null\r\n}\r\n\r\nexport default function AdminReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_ADMIN_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_ADMIN_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // admin: [...data]\r\n                admin: action.admin\r\n            }\r\n        case FETCH_ADMIN_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","// import {data} from \"../fake-datas/UserData\"\r\nimport { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    user: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USER_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                user: action.user\r\n            }\r\n        case FETCH_USER_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_COMPANY_REQUEST, FETCH_COMPANY_SUCCESS, FETCH_COMPANY_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    company: [],\r\n    error: null\r\n}\r\n\r\nexport default function CompanyReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_COMPANY_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_COMPANY_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                company: action.company\r\n            }\r\n        case FETCH_COMPANY_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_CLIENT_REQUEST, FETCH_CLIENT_SUCCESS, FETCH_CLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    client: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                client: action.client\r\n            }\r\n        case FETCH_CLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { FETCH_SCHEDULE_REQUEST, FETCH_SCHEDULE_SUCCESS, FETCH_SCHEDULE_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    schedule: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULE_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULE_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                schedule: action.schedule\r\n            }\r\n        case FETCH_SCHEDULE_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleReducer;\r\n","// import {data} from \"../fake-datas/UserViewData\"\r\nimport { FETCH_USERVIEW_REQUEST, FETCH_USERVIEW_SUCCESS, FETCH_USERVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    userview: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USERVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USERVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // userview: [...data]\r\n                userview: action.userview\r\n            }\r\n        case FETCH_USERVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: 'error'\r\n                // error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_SCHEDULEVIEW_REQUEST, FETCH_SCHEDULEVIEW_SUCCESS, FETCH_SCHEDULEVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    scheduleview: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleViewReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULEVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULEVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                scheduleview: action.scheduleview\r\n            }\r\n        case FETCH_SCHEDULEVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleViewReducer;\r\n","import { FETCH_SALESCLIENTVIEW_REQUEST, FETCH_SALESCLIENTVIEW_SUCCESS, FETCH_SALESCLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    salesview: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENTVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                salesview: action.salesview\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport AdminReducer from './AdminReducer';\r\nimport UserReducer from './UserReducer';\r\nimport CompanyReducer from './CompanyReducer';\r\nimport ClientReducer from './ClientReducer';\r\nimport ClientViewReducer from './ClientViewReducer';\r\nimport SalesReducer from './SalesReducer';\r\nimport ScheduleReducer from './ScheduleReducer'\r\nimport UserViewReducer from './UserViewReducer'\r\nimport ScheduleViewReducer from './ScheduleViewReducer'\r\nimport SalesViewReducer from './SalesViewReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    //Super Admin Reducer\r\n    admin: AdminReducer,\r\n    user: UserReducer, \r\n    company: CompanyReducer, \r\n    client: ClientReducer,\r\n    sales: SalesReducer,\r\n    schedule: ScheduleReducer,\r\n    //Admin Reducer\r\n    userview: UserViewReducer,\r\n    clientview: ClientViewReducer,\r\n    scheduleview: ScheduleViewReducer,\r\n    salesview: SalesViewReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { LayoutProvider } from \"./context/LayoutContext\";\nimport { UserProvider } from \"./context/UserContext\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from 'redux-thunk'\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\n// pick a date util library\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst store = createStore(rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <LayoutProvider>\n      <UserProvider>  \n        <ThemeProvider theme={Themes.default}>\n          <CssBaseline />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <App />\n          </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </UserProvider>\n    </LayoutProvider>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}